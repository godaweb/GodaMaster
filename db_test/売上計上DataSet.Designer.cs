//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace db_test {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("売上計上DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class 売上計上DataSet : global::System.Data.DataSet {
        
        private T売上修正戻ファイルDataTable tableT売上修正戻ファイル;
        
        private T売上明細ファイルDataTable tableT売上明細ファイル;
        
        private T処理履歴テーブルDataTable tableT処理履歴テーブル;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public 売上計上DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected 売上計上DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T売上修正戻ファイル"] != null)) {
                    base.Tables.Add(new T売上修正戻ファイルDataTable(ds.Tables["T売上修正戻ファイル"]));
                }
                if ((ds.Tables["T売上明細ファイル"] != null)) {
                    base.Tables.Add(new T売上明細ファイルDataTable(ds.Tables["T売上明細ファイル"]));
                }
                if ((ds.Tables["T処理履歴テーブル"] != null)) {
                    base.Tables.Add(new T処理履歴テーブルDataTable(ds.Tables["T処理履歴テーブル"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T売上修正戻ファイルDataTable T売上修正戻ファイル {
            get {
                return this.tableT売上修正戻ファイル;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T売上明細ファイルDataTable T売上明細ファイル {
            get {
                return this.tableT売上明細ファイル;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T処理履歴テーブルDataTable T処理履歴テーブル {
            get {
                return this.tableT処理履歴テーブル;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            売上計上DataSet cln = ((売上計上DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T売上修正戻ファイル"] != null)) {
                    base.Tables.Add(new T売上修正戻ファイルDataTable(ds.Tables["T売上修正戻ファイル"]));
                }
                if ((ds.Tables["T売上明細ファイル"] != null)) {
                    base.Tables.Add(new T売上明細ファイルDataTable(ds.Tables["T売上明細ファイル"]));
                }
                if ((ds.Tables["T処理履歴テーブル"] != null)) {
                    base.Tables.Add(new T処理履歴テーブルDataTable(ds.Tables["T処理履歴テーブル"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableT売上修正戻ファイル = ((T売上修正戻ファイルDataTable)(base.Tables["T売上修正戻ファイル"]));
            if ((initTable == true)) {
                if ((this.tableT売上修正戻ファイル != null)) {
                    this.tableT売上修正戻ファイル.InitVars();
                }
            }
            this.tableT売上明細ファイル = ((T売上明細ファイルDataTable)(base.Tables["T売上明細ファイル"]));
            if ((initTable == true)) {
                if ((this.tableT売上明細ファイル != null)) {
                    this.tableT売上明細ファイル.InitVars();
                }
            }
            this.tableT処理履歴テーブル = ((T処理履歴テーブルDataTable)(base.Tables["T処理履歴テーブル"]));
            if ((initTable == true)) {
                if ((this.tableT処理履歴テーブル != null)) {
                    this.tableT処理履歴テーブル.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "売上計上DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/売上計上DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT売上修正戻ファイル = new T売上修正戻ファイルDataTable();
            base.Tables.Add(this.tableT売上修正戻ファイル);
            this.tableT売上明細ファイル = new T売上明細ファイルDataTable();
            base.Tables.Add(this.tableT売上明細ファイル);
            this.tableT処理履歴テーブル = new T処理履歴テーブルDataTable();
            base.Tables.Add(this.tableT処理履歴テーブル);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT売上修正戻ファイル() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT売上明細ファイル() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT処理履歴テーブル() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            売上計上DataSet ds = new 売上計上DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T売上修正戻ファイルRowChangeEventHandler(object sender, T売上修正戻ファイルRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T売上明細ファイルRowChangeEventHandler(object sender, T売上明細ファイルRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T処理履歴テーブルRowChangeEventHandler(object sender, T処理履歴テーブルRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T売上修正戻ファイルDataTable : global::System.Data.TypedTableBase<T売上修正戻ファイルRow> {
            
            private global::System.Data.DataColumn column売上修正連番;
            
            private global::System.Data.DataColumn column修正処理年月日;
            
            private global::System.Data.DataColumn column本支店区分;
            
            private global::System.Data.DataColumn column処理コード;
            
            private global::System.Data.DataColumn column入力区分;
            
            private global::System.Data.DataColumn column処理番号;
            
            private global::System.Data.DataColumn columnエラーフラグ;
            
            private global::System.Data.DataColumn column受発注行数;
            
            private global::System.Data.DataColumn column受注連番;
            
            private global::System.Data.DataColumn column出荷番号;
            
            private global::System.Data.DataColumn column出荷連番;
            
            private global::System.Data.DataColumn column発注番号;
            
            private global::System.Data.DataColumn column発注連番;
            
            private global::System.Data.DataColumn column売上伝票番号;
            
            private global::System.Data.DataColumn column処理日;
            
            private global::System.Data.DataColumn column売上日;
            
            private global::System.Data.DataColumn column納入日;
            
            private global::System.Data.DataColumn column受注日;
            
            private global::System.Data.DataColumn column納期;
            
            private global::System.Data.DataColumn column発注納期;
            
            private global::System.Data.DataColumn column処理区;
            
            private global::System.Data.DataColumn column売上区分コード;
            
            private global::System.Data.DataColumn columnシステム区分;
            
            private global::System.Data.DataColumn column取引区分;
            
            private global::System.Data.DataColumn column請求月区分コード;
            
            private global::System.Data.DataColumn column得意先コード;
            
            private global::System.Data.DataColumn column得名;
            
            private global::System.Data.DataColumn column事業所コード;
            
            private global::System.Data.DataColumn columnランク;
            
            private global::System.Data.DataColumn column部課コード;
            
            private global::System.Data.DataColumn column担当者コード;
            
            private global::System.Data.DataColumn column代理店コード;
            
            private global::System.Data.DataColumn column代名;
            
            private global::System.Data.DataColumn column納入先コード;
            
            private global::System.Data.DataColumn column納名;
            
            private global::System.Data.DataColumn column取引先コード;
            
            private global::System.Data.DataColumn column取引先名;
            
            private global::System.Data.DataColumn column請求先コード;
            
            private global::System.Data.DataColumn column売上切捨区分;
            
            private global::System.Data.DataColumn column売上税区分;
            
            private global::System.Data.DataColumn column伝票摘要;
            
            private global::System.Data.DataColumn column商品コード;
            
            private global::System.Data.DataColumn column商名;
            
            private global::System.Data.DataColumn column規格;
            
            private global::System.Data.DataColumn column形式寸法;
            
            private global::System.Data.DataColumn column材質;
            
            private global::System.Data.DataColumn column分類;
            
            private global::System.Data.DataColumn column在庫管理区分;
            
            private global::System.Data.DataColumn column品種コード;
            
            private global::System.Data.DataColumn columnメーカーコード;
            
            private global::System.Data.DataColumn column入数;
            
            private global::System.Data.DataColumn column単位コード;
            
            private global::System.Data.DataColumn column倉庫コード;
            
            private global::System.Data.DataColumn columnケース数;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column売上単価;
            
            private global::System.Data.DataColumn column売上金額;
            
            private global::System.Data.DataColumn column税抜売上金額;
            
            private global::System.Data.DataColumn column原価単価;
            
            private global::System.Data.DataColumn column原価金額;
            
            private global::System.Data.DataColumn column粗利;
            
            private global::System.Data.DataColumn column消費税;
            
            private global::System.Data.DataColumn column税抜仕入金額;
            
            private global::System.Data.DataColumn column仕入消費税;
            
            private global::System.Data.DataColumn column売上返品値引理由区分;
            
            private global::System.Data.DataColumn column外内税区分;
            
            private global::System.Data.DataColumn column消費税率;
            
            private global::System.Data.DataColumn column新消費税率;
            
            private global::System.Data.DataColumn column新消費税適用;
            
            private global::System.Data.DataColumn column明細摘要;
            
            private global::System.Data.DataColumn column受注番号;
            
            private global::System.Data.DataColumn column相手先注文番号;
            
            private global::System.Data.DataColumn column自社受付番号;
            
            private global::System.Data.DataColumn column仕入伝票番号;
            
            private global::System.Data.DataColumn column仕入先コード;
            
            private global::System.Data.DataColumn column仕名;
            
            private global::System.Data.DataColumn column仕入分類;
            
            private global::System.Data.DataColumn column仕入事業所コード;
            
            private global::System.Data.DataColumn column仕入担当者コード;
            
            private global::System.Data.DataColumn column仕入切捨区分;
            
            private global::System.Data.DataColumn column仕入税区分;
            
            private global::System.Data.DataColumn column入金番号;
            
            private global::System.Data.DataColumn columnチェック;
            
            private global::System.Data.DataColumn column入金チェック;
            
            private global::System.Data.DataColumn column回収摘要;
            
            private global::System.Data.DataColumn column検収チェック;
            
            private global::System.Data.DataColumn column完了フラグ;
            
            private global::System.Data.DataColumn columnWS_ID;
            
            private global::System.Data.DataColumn column発行済フラグ;
            
            private global::System.Data.DataColumn column受注更新フラグ;
            
            private global::System.Data.DataColumn column出荷更新フラグ;
            
            private global::System.Data.DataColumn column得意先更新フラグ;
            
            private global::System.Data.DataColumn column商品更新フラグ;
            
            private global::System.Data.DataColumn column商品倉庫更新フラグ;
            
            private global::System.Data.DataColumn column商品取引更新フラグ;
            
            private global::System.Data.DataColumn columnオペレーターコード;
            
            private global::System.Data.DataColumn column修正オペレーターコード;
            
            private global::System.Data.DataColumn column受注行;
            
            private global::System.Data.DataColumn column処理月日;
            
            private global::System.Data.DataColumn column管理年月;
            
            private global::System.Data.DataColumn column受注行番号;
            
            private global::System.Data.DataColumn column売上行番号;
            
            private global::System.Data.DataColumn column定価;
            
            private global::System.Data.DataColumn column納品掛率;
            
            private global::System.Data.DataColumn column原価掛率;
            
            private global::System.Data.DataColumn column発注有無区分;
            
            private global::System.Data.DataColumn column回答納期;
            
            private global::System.Data.DataColumn column在庫数;
            
            private global::System.Data.DataColumn column受注残数;
            
            private global::System.Data.DataColumn column発注残数;
            
            private global::System.Data.DataColumn column納品書発行フラグ;
            
            private global::System.Data.DataColumn column専用伝票発行フラグ;
            
            private global::System.Data.DataColumn column売上累計;
            
            private global::System.Data.DataColumn column受注番号受注残数;
            
            private global::System.Data.DataColumn column取引先コード２;
            
            private global::System.Data.DataColumn column社名;
            
            private global::System.Data.DataColumn column店名;
            
            private global::System.Data.DataColumn column部名;
            
            private global::System.Data.DataColumn column発注区分;
            
            private global::System.Data.DataColumn column請求月;
            
            private global::System.Data.DataColumn columnＥＯＳ区分;
            
            private global::System.Data.DataColumn column帳票区分;
            
            private global::System.Data.DataColumn column発注単位;
            
            private global::System.Data.DataColumn columnＥＯＳ商品コード;
            
            private global::System.Data.DataColumn columnＥＯＳ商品名;
            
            private global::System.Data.DataColumn columnＥＯＳ規格;
            
            private global::System.Data.DataColumn column表示価格;
            
            private global::System.Data.DataColumn columnＥＯＳ棚番;
            
            private global::System.Data.DataColumn columnＪＡＮコード;
            
            private global::System.Data.DataColumn columnメーカー品番;
            
            private global::System.Data.DataColumn column棚番;
            
            private global::System.Data.DataColumn columnメーカー名;
            
            private global::System.Data.DataColumn column店コード;
            
            private global::System.Data.DataColumn column部コード;
            
            private global::System.Data.DataColumn columnエラー区分;
            
            private global::System.Data.DataColumn column更新ビット;
            
            private global::System.Data.DataColumn column商品番号;
            
            private global::System.Data.DataColumn column社コード;
            
            private global::System.Data.DataColumn column店コードＢ;
            
            private global::System.Data.DataColumn column直送区分;
            
            private global::System.Data.DataColumn column客注区分;
            
            private global::System.Data.DataColumn column経費区分;
            
            private global::System.Data.DataColumn column返品区分;
            
            private global::System.Data.DataColumn column本部原価単価;
            
            private global::System.Data.DataColumn column本部原価金額;
            
            private global::System.Data.DataColumn column納入単価;
            
            private global::System.Data.DataColumn column店舗売価;
            
            private global::System.Data.DataColumn column大分類コード;
            
            private global::System.Data.DataColumn column店舗備考;
            
            private global::System.Data.DataColumn column仕入先備考;
            
            private global::System.Data.DataColumn column登録番号;
            
            private global::System.Data.DataColumn columnドラスタ発注番号;
            
            private global::System.Data.DataColumn column客注番号;
            
            private global::System.Data.DataColumn columnドラスタ区分;
            
            private global::System.Data.DataColumn column欠品理由;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上修正戻ファイルDataTable() {
                this.TableName = "T売上修正戻ファイル";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T売上修正戻ファイルDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T売上修正戻ファイルDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上修正連番Column {
                get {
                    return this.column売上修正連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 修正処理年月日Column {
                get {
                    return this.column修正処理年月日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 本支店区分Column {
                get {
                    return this.column本支店区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理コードColumn {
                get {
                    return this.column処理コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入力区分Column {
                get {
                    return this.column入力区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理番号Column {
                get {
                    return this.column処理番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn エラーフラグColumn {
                get {
                    return this.columnエラーフラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受発注行数Column {
                get {
                    return this.column受発注行数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注連番Column {
                get {
                    return this.column受注連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出荷番号Column {
                get {
                    return this.column出荷番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出荷連番Column {
                get {
                    return this.column出荷連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注番号Column {
                get {
                    return this.column発注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注連番Column {
                get {
                    return this.column発注連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上伝票番号Column {
                get {
                    return this.column売上伝票番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理日Column {
                get {
                    return this.column処理日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上日Column {
                get {
                    return this.column売上日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納入日Column {
                get {
                    return this.column納入日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注日Column {
                get {
                    return this.column受注日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納期Column {
                get {
                    return this.column納期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注納期Column {
                get {
                    return this.column発注納期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理区Column {
                get {
                    return this.column処理区;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上区分コードColumn {
                get {
                    return this.column売上区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn システム区分Column {
                get {
                    return this.columnシステム区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取引区分Column {
                get {
                    return this.column取引区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 請求月区分コードColumn {
                get {
                    return this.column請求月区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 得意先コードColumn {
                get {
                    return this.column得意先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 得名Column {
                get {
                    return this.column得名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 事業所コードColumn {
                get {
                    return this.column事業所コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ランクColumn {
                get {
                    return this.columnランク;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 部課コードColumn {
                get {
                    return this.column部課コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 担当者コードColumn {
                get {
                    return this.column担当者コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 代理店コードColumn {
                get {
                    return this.column代理店コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 代名Column {
                get {
                    return this.column代名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納入先コードColumn {
                get {
                    return this.column納入先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納名Column {
                get {
                    return this.column納名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取引先コードColumn {
                get {
                    return this.column取引先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取引先名Column {
                get {
                    return this.column取引先名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 請求先コードColumn {
                get {
                    return this.column請求先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上切捨区分Column {
                get {
                    return this.column売上切捨区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上税区分Column {
                get {
                    return this.column売上税区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 伝票摘要Column {
                get {
                    return this.column伝票摘要;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品コードColumn {
                get {
                    return this.column商品コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商名Column {
                get {
                    return this.column商名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 規格Column {
                get {
                    return this.column規格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 形式寸法Column {
                get {
                    return this.column形式寸法;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 材質Column {
                get {
                    return this.column材質;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 分類Column {
                get {
                    return this.column分類;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 在庫管理区分Column {
                get {
                    return this.column在庫管理区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 品種コードColumn {
                get {
                    return this.column品種コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn メーカーコードColumn {
                get {
                    return this.columnメーカーコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入数Column {
                get {
                    return this.column入数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 単位コードColumn {
                get {
                    return this.column単位コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 倉庫コードColumn {
                get {
                    return this.column倉庫コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ケース数Column {
                get {
                    return this.columnケース数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上単価Column {
                get {
                    return this.column売上単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上金額Column {
                get {
                    return this.column売上金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 税抜売上金額Column {
                get {
                    return this.column税抜売上金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 原価単価Column {
                get {
                    return this.column原価単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 原価金額Column {
                get {
                    return this.column原価金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 粗利Column {
                get {
                    return this.column粗利;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 消費税Column {
                get {
                    return this.column消費税;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 税抜仕入金額Column {
                get {
                    return this.column税抜仕入金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入消費税Column {
                get {
                    return this.column仕入消費税;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上返品値引理由区分Column {
                get {
                    return this.column売上返品値引理由区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 外内税区分Column {
                get {
                    return this.column外内税区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 消費税率Column {
                get {
                    return this.column消費税率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 新消費税率Column {
                get {
                    return this.column新消費税率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 新消費税適用Column {
                get {
                    return this.column新消費税適用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 明細摘要Column {
                get {
                    return this.column明細摘要;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注番号Column {
                get {
                    return this.column受注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 相手先注文番号Column {
                get {
                    return this.column相手先注文番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 自社受付番号Column {
                get {
                    return this.column自社受付番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入伝票番号Column {
                get {
                    return this.column仕入伝票番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入先コードColumn {
                get {
                    return this.column仕入先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕名Column {
                get {
                    return this.column仕名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入分類Column {
                get {
                    return this.column仕入分類;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入事業所コードColumn {
                get {
                    return this.column仕入事業所コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入担当者コードColumn {
                get {
                    return this.column仕入担当者コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入切捨区分Column {
                get {
                    return this.column仕入切捨区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入税区分Column {
                get {
                    return this.column仕入税区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入金番号Column {
                get {
                    return this.column入金番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn チェックColumn {
                get {
                    return this.columnチェック;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入金チェックColumn {
                get {
                    return this.column入金チェック;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 回収摘要Column {
                get {
                    return this.column回収摘要;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 検収チェックColumn {
                get {
                    return this.column検収チェック;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 完了フラグColumn {
                get {
                    return this.column完了フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WS_IDColumn {
                get {
                    return this.columnWS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発行済フラグColumn {
                get {
                    return this.column発行済フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注更新フラグColumn {
                get {
                    return this.column受注更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出荷更新フラグColumn {
                get {
                    return this.column出荷更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 得意先更新フラグColumn {
                get {
                    return this.column得意先更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品更新フラグColumn {
                get {
                    return this.column商品更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品倉庫更新フラグColumn {
                get {
                    return this.column商品倉庫更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品取引更新フラグColumn {
                get {
                    return this.column商品取引更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn オペレーターコードColumn {
                get {
                    return this.columnオペレーターコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 修正オペレーターコードColumn {
                get {
                    return this.column修正オペレーターコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注行Column {
                get {
                    return this.column受注行;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理月日Column {
                get {
                    return this.column処理月日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 管理年月Column {
                get {
                    return this.column管理年月;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注行番号Column {
                get {
                    return this.column受注行番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上行番号Column {
                get {
                    return this.column売上行番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 定価Column {
                get {
                    return this.column定価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納品掛率Column {
                get {
                    return this.column納品掛率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 原価掛率Column {
                get {
                    return this.column原価掛率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注有無区分Column {
                get {
                    return this.column発注有無区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 回答納期Column {
                get {
                    return this.column回答納期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 在庫数Column {
                get {
                    return this.column在庫数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注残数Column {
                get {
                    return this.column受注残数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注残数Column {
                get {
                    return this.column発注残数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納品書発行フラグColumn {
                get {
                    return this.column納品書発行フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 専用伝票発行フラグColumn {
                get {
                    return this.column専用伝票発行フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上累計Column {
                get {
                    return this.column売上累計;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注番号受注残数Column {
                get {
                    return this.column受注番号受注残数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取引先コード２Column {
                get {
                    return this.column取引先コード２;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 社名Column {
                get {
                    return this.column社名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 店名Column {
                get {
                    return this.column店名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 部名Column {
                get {
                    return this.column部名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注区分Column {
                get {
                    return this.column発注区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 請求月Column {
                get {
                    return this.column請求月;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＥＯＳ区分Column {
                get {
                    return this.columnＥＯＳ区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 帳票区分Column {
                get {
                    return this.column帳票区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注単位Column {
                get {
                    return this.column発注単位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＥＯＳ商品コードColumn {
                get {
                    return this.columnＥＯＳ商品コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＥＯＳ商品名Column {
                get {
                    return this.columnＥＯＳ商品名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＥＯＳ規格Column {
                get {
                    return this.columnＥＯＳ規格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 表示価格Column {
                get {
                    return this.column表示価格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＥＯＳ棚番Column {
                get {
                    return this.columnＥＯＳ棚番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＪＡＮコードColumn {
                get {
                    return this.columnＪＡＮコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn メーカー品番Column {
                get {
                    return this.columnメーカー品番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 棚番Column {
                get {
                    return this.column棚番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn メーカー名Column {
                get {
                    return this.columnメーカー名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 店コードColumn {
                get {
                    return this.column店コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 部コードColumn {
                get {
                    return this.column部コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn エラー区分Column {
                get {
                    return this.columnエラー区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 更新ビットColumn {
                get {
                    return this.column更新ビット;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品番号Column {
                get {
                    return this.column商品番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 社コードColumn {
                get {
                    return this.column社コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 店コードＢColumn {
                get {
                    return this.column店コードＢ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 直送区分Column {
                get {
                    return this.column直送区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 客注区分Column {
                get {
                    return this.column客注区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 経費区分Column {
                get {
                    return this.column経費区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 返品区分Column {
                get {
                    return this.column返品区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 本部原価単価Column {
                get {
                    return this.column本部原価単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 本部原価金額Column {
                get {
                    return this.column本部原価金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納入単価Column {
                get {
                    return this.column納入単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 店舗売価Column {
                get {
                    return this.column店舗売価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 大分類コードColumn {
                get {
                    return this.column大分類コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 店舗備考Column {
                get {
                    return this.column店舗備考;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入先備考Column {
                get {
                    return this.column仕入先備考;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 登録番号Column {
                get {
                    return this.column登録番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ドラスタ発注番号Column {
                get {
                    return this.columnドラスタ発注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 客注番号Column {
                get {
                    return this.column客注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ドラスタ区分Column {
                get {
                    return this.columnドラスタ区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 欠品理由Column {
                get {
                    return this.column欠品理由;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上修正戻ファイルRow this[int index] {
                get {
                    return ((T売上修正戻ファイルRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T売上修正戻ファイルRowChangeEventHandler T売上修正戻ファイルRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T売上修正戻ファイルRowChangeEventHandler T売上修正戻ファイルRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T売上修正戻ファイルRowChangeEventHandler T売上修正戻ファイルRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T売上修正戻ファイルRowChangeEventHandler T売上修正戻ファイルRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT売上修正戻ファイルRow(T売上修正戻ファイルRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上修正戻ファイルRow AddT売上修正戻ファイルRow(
                        System.DateTime 修正処理年月日, 
                        short 本支店区分, 
                        int 処理コード, 
                        short 入力区分, 
                        int 処理番号, 
                        bool エラーフラグ, 
                        int 受発注行数, 
                        int 受注連番, 
                        int 出荷番号, 
                        int 出荷連番, 
                        int 発注番号, 
                        int 発注連番, 
                        int 売上伝票番号, 
                        System.DateTime 処理日, 
                        System.DateTime 売上日, 
                        System.DateTime 納入日, 
                        System.DateTime 受注日, 
                        System.DateTime 納期, 
                        System.DateTime 発注納期, 
                        short 処理区, 
                        short 売上区分コード, 
                        short システム区分, 
                        short 取引区分, 
                        short 請求月区分コード, 
                        string 得意先コード, 
                        string 得名, 
                        string 事業所コード, 
                        short ランク, 
                        string 部課コード, 
                        string 担当者コード, 
                        string 代理店コード, 
                        string 代名, 
                        string 納入先コード, 
                        string 納名, 
                        string 取引先コード, 
                        string 取引先名, 
                        string 請求先コード, 
                        short 売上切捨区分, 
                        short 売上税区分, 
                        string 伝票摘要, 
                        string 商品コード, 
                        string 商名, 
                        string 規格, 
                        string 形式寸法, 
                        string 材質, 
                        short 分類, 
                        bool 在庫管理区分, 
                        string 品種コード, 
                        string メーカーコード, 
                        decimal 入数, 
                        short 単位コード, 
                        string 倉庫コード, 
                        decimal ケース数, 
                        decimal 数量, 
                        decimal 売上単価, 
                        decimal 売上金額, 
                        decimal 税抜売上金額, 
                        decimal 原価単価, 
                        decimal 原価金額, 
                        decimal 粗利, 
                        decimal 消費税, 
                        decimal 税抜仕入金額, 
                        decimal 仕入消費税, 
                        short 売上返品値引理由区分, 
                        short 外内税区分, 
                        decimal 消費税率, 
                        decimal 新消費税率, 
                        System.DateTime 新消費税適用, 
                        string 明細摘要, 
                        int 受注番号, 
                        string 相手先注文番号, 
                        string 自社受付番号, 
                        int 仕入伝票番号, 
                        string 仕入先コード, 
                        string 仕名, 
                        short 仕入分類, 
                        string 仕入事業所コード, 
                        string 仕入担当者コード, 
                        short 仕入切捨区分, 
                        short 仕入税区分, 
                        int 入金番号, 
                        bool チェック, 
                        bool 入金チェック, 
                        string 回収摘要, 
                        bool 検収チェック, 
                        bool 完了フラグ, 
                        short WS_ID, 
                        bool 発行済フラグ, 
                        bool 受注更新フラグ, 
                        bool 出荷更新フラグ, 
                        bool 得意先更新フラグ, 
                        bool 商品更新フラグ, 
                        bool 商品倉庫更新フラグ, 
                        bool 商品取引更新フラグ, 
                        string オペレーターコード, 
                        string 修正オペレーターコード, 
                        int 受注行, 
                        System.DateTime 処理月日, 
                        int 管理年月, 
                        int 受注行番号, 
                        int 売上行番号, 
                        decimal 定価, 
                        decimal 納品掛率, 
                        decimal 原価掛率, 
                        short 発注有無区分, 
                        System.DateTime 回答納期, 
                        decimal 在庫数, 
                        decimal 受注残数, 
                        decimal 発注残数, 
                        short 納品書発行フラグ, 
                        short 専用伝票発行フラグ, 
                        decimal 売上累計, 
                        decimal 受注番号受注残数, 
                        int 取引先コード２, 
                        string 社名, 
                        string 店名, 
                        string 部名, 
                        int 発注区分, 
                        int 請求月, 
                        string ＥＯＳ区分, 
                        int 帳票区分, 
                        string 発注単位, 
                        string ＥＯＳ商品コード, 
                        string ＥＯＳ商品名, 
                        string ＥＯＳ規格, 
                        decimal 表示価格, 
                        decimal ＥＯＳ棚番, 
                        decimal ＪＡＮコード, 
                        string メーカー品番, 
                        string 棚番, 
                        string メーカー名, 
                        int 店コード, 
                        int 部コード, 
                        string エラー区分, 
                        int 更新ビット, 
                        string 商品番号, 
                        int 社コード, 
                        int 店コードＢ, 
                        int 直送区分, 
                        int 客注区分, 
                        int 経費区分, 
                        int 返品区分, 
                        decimal 本部原価単価, 
                        decimal 本部原価金額, 
                        decimal 納入単価, 
                        decimal 店舗売価, 
                        string 大分類コード, 
                        string 店舗備考, 
                        string 仕入先備考, 
                        int 登録番号, 
                        int ドラスタ発注番号, 
                        string 客注番号, 
                        short ドラスタ区分, 
                        short 欠品理由) {
                T売上修正戻ファイルRow rowT売上修正戻ファイルRow = ((T売上修正戻ファイルRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        修正処理年月日,
                        本支店区分,
                        処理コード,
                        入力区分,
                        処理番号,
                        エラーフラグ,
                        受発注行数,
                        受注連番,
                        出荷番号,
                        出荷連番,
                        発注番号,
                        発注連番,
                        売上伝票番号,
                        処理日,
                        売上日,
                        納入日,
                        受注日,
                        納期,
                        発注納期,
                        処理区,
                        売上区分コード,
                        システム区分,
                        取引区分,
                        請求月区分コード,
                        得意先コード,
                        得名,
                        事業所コード,
                        ランク,
                        部課コード,
                        担当者コード,
                        代理店コード,
                        代名,
                        納入先コード,
                        納名,
                        取引先コード,
                        取引先名,
                        請求先コード,
                        売上切捨区分,
                        売上税区分,
                        伝票摘要,
                        商品コード,
                        商名,
                        規格,
                        形式寸法,
                        材質,
                        分類,
                        在庫管理区分,
                        品種コード,
                        メーカーコード,
                        入数,
                        単位コード,
                        倉庫コード,
                        ケース数,
                        数量,
                        売上単価,
                        売上金額,
                        税抜売上金額,
                        原価単価,
                        原価金額,
                        粗利,
                        消費税,
                        税抜仕入金額,
                        仕入消費税,
                        売上返品値引理由区分,
                        外内税区分,
                        消費税率,
                        新消費税率,
                        新消費税適用,
                        明細摘要,
                        受注番号,
                        相手先注文番号,
                        自社受付番号,
                        仕入伝票番号,
                        仕入先コード,
                        仕名,
                        仕入分類,
                        仕入事業所コード,
                        仕入担当者コード,
                        仕入切捨区分,
                        仕入税区分,
                        入金番号,
                        チェック,
                        入金チェック,
                        回収摘要,
                        検収チェック,
                        完了フラグ,
                        WS_ID,
                        発行済フラグ,
                        受注更新フラグ,
                        出荷更新フラグ,
                        得意先更新フラグ,
                        商品更新フラグ,
                        商品倉庫更新フラグ,
                        商品取引更新フラグ,
                        オペレーターコード,
                        修正オペレーターコード,
                        受注行,
                        処理月日,
                        管理年月,
                        受注行番号,
                        売上行番号,
                        定価,
                        納品掛率,
                        原価掛率,
                        発注有無区分,
                        回答納期,
                        在庫数,
                        受注残数,
                        発注残数,
                        納品書発行フラグ,
                        専用伝票発行フラグ,
                        売上累計,
                        受注番号受注残数,
                        取引先コード２,
                        社名,
                        店名,
                        部名,
                        発注区分,
                        請求月,
                        ＥＯＳ区分,
                        帳票区分,
                        発注単位,
                        ＥＯＳ商品コード,
                        ＥＯＳ商品名,
                        ＥＯＳ規格,
                        表示価格,
                        ＥＯＳ棚番,
                        ＪＡＮコード,
                        メーカー品番,
                        棚番,
                        メーカー名,
                        店コード,
                        部コード,
                        エラー区分,
                        更新ビット,
                        商品番号,
                        社コード,
                        店コードＢ,
                        直送区分,
                        客注区分,
                        経費区分,
                        返品区分,
                        本部原価単価,
                        本部原価金額,
                        納入単価,
                        店舗売価,
                        大分類コード,
                        店舗備考,
                        仕入先備考,
                        登録番号,
                        ドラスタ発注番号,
                        客注番号,
                        ドラスタ区分,
                        欠品理由};
                rowT売上修正戻ファイルRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT売上修正戻ファイルRow);
                return rowT売上修正戻ファイルRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上修正戻ファイルRow FindBy売上修正連番(int 売上修正連番) {
                return ((T売上修正戻ファイルRow)(this.Rows.Find(new object[] {
                            売上修正連番})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T売上修正戻ファイルDataTable cln = ((T売上修正戻ファイルDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T売上修正戻ファイルDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column売上修正連番 = base.Columns["売上修正連番"];
                this.column修正処理年月日 = base.Columns["修正処理年月日"];
                this.column本支店区分 = base.Columns["本支店区分"];
                this.column処理コード = base.Columns["処理コード"];
                this.column入力区分 = base.Columns["入力区分"];
                this.column処理番号 = base.Columns["処理番号"];
                this.columnエラーフラグ = base.Columns["エラーフラグ"];
                this.column受発注行数 = base.Columns["受発注行数"];
                this.column受注連番 = base.Columns["受注連番"];
                this.column出荷番号 = base.Columns["出荷番号"];
                this.column出荷連番 = base.Columns["出荷連番"];
                this.column発注番号 = base.Columns["発注番号"];
                this.column発注連番 = base.Columns["発注連番"];
                this.column売上伝票番号 = base.Columns["売上伝票番号"];
                this.column処理日 = base.Columns["処理日"];
                this.column売上日 = base.Columns["売上日"];
                this.column納入日 = base.Columns["納入日"];
                this.column受注日 = base.Columns["受注日"];
                this.column納期 = base.Columns["納期"];
                this.column発注納期 = base.Columns["発注納期"];
                this.column処理区 = base.Columns["処理区"];
                this.column売上区分コード = base.Columns["売上区分コード"];
                this.columnシステム区分 = base.Columns["システム区分"];
                this.column取引区分 = base.Columns["取引区分"];
                this.column請求月区分コード = base.Columns["請求月区分コード"];
                this.column得意先コード = base.Columns["得意先コード"];
                this.column得名 = base.Columns["得名"];
                this.column事業所コード = base.Columns["事業所コード"];
                this.columnランク = base.Columns["ランク"];
                this.column部課コード = base.Columns["部課コード"];
                this.column担当者コード = base.Columns["担当者コード"];
                this.column代理店コード = base.Columns["代理店コード"];
                this.column代名 = base.Columns["代名"];
                this.column納入先コード = base.Columns["納入先コード"];
                this.column納名 = base.Columns["納名"];
                this.column取引先コード = base.Columns["取引先コード"];
                this.column取引先名 = base.Columns["取引先名"];
                this.column請求先コード = base.Columns["請求先コード"];
                this.column売上切捨区分 = base.Columns["売上切捨区分"];
                this.column売上税区分 = base.Columns["売上税区分"];
                this.column伝票摘要 = base.Columns["伝票摘要"];
                this.column商品コード = base.Columns["商品コード"];
                this.column商名 = base.Columns["商名"];
                this.column規格 = base.Columns["規格"];
                this.column形式寸法 = base.Columns["形式寸法"];
                this.column材質 = base.Columns["材質"];
                this.column分類 = base.Columns["分類"];
                this.column在庫管理区分 = base.Columns["在庫管理区分"];
                this.column品種コード = base.Columns["品種コード"];
                this.columnメーカーコード = base.Columns["メーカーコード"];
                this.column入数 = base.Columns["入数"];
                this.column単位コード = base.Columns["単位コード"];
                this.column倉庫コード = base.Columns["倉庫コード"];
                this.columnケース数 = base.Columns["ケース数"];
                this.column数量 = base.Columns["数量"];
                this.column売上単価 = base.Columns["売上単価"];
                this.column売上金額 = base.Columns["売上金額"];
                this.column税抜売上金額 = base.Columns["税抜売上金額"];
                this.column原価単価 = base.Columns["原価単価"];
                this.column原価金額 = base.Columns["原価金額"];
                this.column粗利 = base.Columns["粗利"];
                this.column消費税 = base.Columns["消費税"];
                this.column税抜仕入金額 = base.Columns["税抜仕入金額"];
                this.column仕入消費税 = base.Columns["仕入消費税"];
                this.column売上返品値引理由区分 = base.Columns["売上返品値引理由区分"];
                this.column外内税区分 = base.Columns["外内税区分"];
                this.column消費税率 = base.Columns["消費税率"];
                this.column新消費税率 = base.Columns["新消費税率"];
                this.column新消費税適用 = base.Columns["新消費税適用"];
                this.column明細摘要 = base.Columns["明細摘要"];
                this.column受注番号 = base.Columns["受注番号"];
                this.column相手先注文番号 = base.Columns["相手先注文番号"];
                this.column自社受付番号 = base.Columns["自社受付番号"];
                this.column仕入伝票番号 = base.Columns["仕入伝票番号"];
                this.column仕入先コード = base.Columns["仕入先コード"];
                this.column仕名 = base.Columns["仕名"];
                this.column仕入分類 = base.Columns["仕入分類"];
                this.column仕入事業所コード = base.Columns["仕入事業所コード"];
                this.column仕入担当者コード = base.Columns["仕入担当者コード"];
                this.column仕入切捨区分 = base.Columns["仕入切捨区分"];
                this.column仕入税区分 = base.Columns["仕入税区分"];
                this.column入金番号 = base.Columns["入金番号"];
                this.columnチェック = base.Columns["チェック"];
                this.column入金チェック = base.Columns["入金チェック"];
                this.column回収摘要 = base.Columns["回収摘要"];
                this.column検収チェック = base.Columns["検収チェック"];
                this.column完了フラグ = base.Columns["完了フラグ"];
                this.columnWS_ID = base.Columns["WS_ID"];
                this.column発行済フラグ = base.Columns["発行済フラグ"];
                this.column受注更新フラグ = base.Columns["受注更新フラグ"];
                this.column出荷更新フラグ = base.Columns["出荷更新フラグ"];
                this.column得意先更新フラグ = base.Columns["得意先更新フラグ"];
                this.column商品更新フラグ = base.Columns["商品更新フラグ"];
                this.column商品倉庫更新フラグ = base.Columns["商品倉庫更新フラグ"];
                this.column商品取引更新フラグ = base.Columns["商品取引更新フラグ"];
                this.columnオペレーターコード = base.Columns["オペレーターコード"];
                this.column修正オペレーターコード = base.Columns["修正オペレーターコード"];
                this.column受注行 = base.Columns["受注行"];
                this.column処理月日 = base.Columns["処理月日"];
                this.column管理年月 = base.Columns["管理年月"];
                this.column受注行番号 = base.Columns["受注行番号"];
                this.column売上行番号 = base.Columns["売上行番号"];
                this.column定価 = base.Columns["定価"];
                this.column納品掛率 = base.Columns["納品掛率"];
                this.column原価掛率 = base.Columns["原価掛率"];
                this.column発注有無区分 = base.Columns["発注有無区分"];
                this.column回答納期 = base.Columns["回答納期"];
                this.column在庫数 = base.Columns["在庫数"];
                this.column受注残数 = base.Columns["受注残数"];
                this.column発注残数 = base.Columns["発注残数"];
                this.column納品書発行フラグ = base.Columns["納品書発行フラグ"];
                this.column専用伝票発行フラグ = base.Columns["専用伝票発行フラグ"];
                this.column売上累計 = base.Columns["売上累計"];
                this.column受注番号受注残数 = base.Columns["受注番号受注残数"];
                this.column取引先コード２ = base.Columns["取引先コード２"];
                this.column社名 = base.Columns["社名"];
                this.column店名 = base.Columns["店名"];
                this.column部名 = base.Columns["部名"];
                this.column発注区分 = base.Columns["発注区分"];
                this.column請求月 = base.Columns["請求月"];
                this.columnＥＯＳ区分 = base.Columns["ＥＯＳ区分"];
                this.column帳票区分 = base.Columns["帳票区分"];
                this.column発注単位 = base.Columns["発注単位"];
                this.columnＥＯＳ商品コード = base.Columns["ＥＯＳ商品コード"];
                this.columnＥＯＳ商品名 = base.Columns["ＥＯＳ商品名"];
                this.columnＥＯＳ規格 = base.Columns["ＥＯＳ規格"];
                this.column表示価格 = base.Columns["表示価格"];
                this.columnＥＯＳ棚番 = base.Columns["ＥＯＳ棚番"];
                this.columnＪＡＮコード = base.Columns["ＪＡＮコード"];
                this.columnメーカー品番 = base.Columns["メーカー品番"];
                this.column棚番 = base.Columns["棚番"];
                this.columnメーカー名 = base.Columns["メーカー名"];
                this.column店コード = base.Columns["店コード"];
                this.column部コード = base.Columns["部コード"];
                this.columnエラー区分 = base.Columns["エラー区分"];
                this.column更新ビット = base.Columns["更新ビット"];
                this.column商品番号 = base.Columns["商品番号"];
                this.column社コード = base.Columns["社コード"];
                this.column店コードＢ = base.Columns["店コードＢ"];
                this.column直送区分 = base.Columns["直送区分"];
                this.column客注区分 = base.Columns["客注区分"];
                this.column経費区分 = base.Columns["経費区分"];
                this.column返品区分 = base.Columns["返品区分"];
                this.column本部原価単価 = base.Columns["本部原価単価"];
                this.column本部原価金額 = base.Columns["本部原価金額"];
                this.column納入単価 = base.Columns["納入単価"];
                this.column店舗売価 = base.Columns["店舗売価"];
                this.column大分類コード = base.Columns["大分類コード"];
                this.column店舗備考 = base.Columns["店舗備考"];
                this.column仕入先備考 = base.Columns["仕入先備考"];
                this.column登録番号 = base.Columns["登録番号"];
                this.columnドラスタ発注番号 = base.Columns["ドラスタ発注番号"];
                this.column客注番号 = base.Columns["客注番号"];
                this.columnドラスタ区分 = base.Columns["ドラスタ区分"];
                this.column欠品理由 = base.Columns["欠品理由"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column売上修正連番 = new global::System.Data.DataColumn("売上修正連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上修正連番);
                this.column修正処理年月日 = new global::System.Data.DataColumn("修正処理年月日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column修正処理年月日);
                this.column本支店区分 = new global::System.Data.DataColumn("本支店区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本支店区分);
                this.column処理コード = new global::System.Data.DataColumn("処理コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理コード);
                this.column入力区分 = new global::System.Data.DataColumn("入力区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入力区分);
                this.column処理番号 = new global::System.Data.DataColumn("処理番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理番号);
                this.columnエラーフラグ = new global::System.Data.DataColumn("エラーフラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnエラーフラグ);
                this.column受発注行数 = new global::System.Data.DataColumn("受発注行数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受発注行数);
                this.column受注連番 = new global::System.Data.DataColumn("受注連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注連番);
                this.column出荷番号 = new global::System.Data.DataColumn("出荷番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷番号);
                this.column出荷連番 = new global::System.Data.DataColumn("出荷連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷連番);
                this.column発注番号 = new global::System.Data.DataColumn("発注番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注番号);
                this.column発注連番 = new global::System.Data.DataColumn("発注連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注連番);
                this.column売上伝票番号 = new global::System.Data.DataColumn("売上伝票番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上伝票番号);
                this.column処理日 = new global::System.Data.DataColumn("処理日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理日);
                this.column売上日 = new global::System.Data.DataColumn("売上日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上日);
                this.column納入日 = new global::System.Data.DataColumn("納入日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納入日);
                this.column受注日 = new global::System.Data.DataColumn("受注日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注日);
                this.column納期 = new global::System.Data.DataColumn("納期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納期);
                this.column発注納期 = new global::System.Data.DataColumn("発注納期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注納期);
                this.column処理区 = new global::System.Data.DataColumn("処理区", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理区);
                this.column売上区分コード = new global::System.Data.DataColumn("売上区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上区分コード);
                this.columnシステム区分 = new global::System.Data.DataColumn("システム区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnシステム区分);
                this.column取引区分 = new global::System.Data.DataColumn("取引区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取引区分);
                this.column請求月区分コード = new global::System.Data.DataColumn("請求月区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column請求月区分コード);
                this.column得意先コード = new global::System.Data.DataColumn("得意先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column得意先コード);
                this.column得名 = new global::System.Data.DataColumn("得名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column得名);
                this.column事業所コード = new global::System.Data.DataColumn("事業所コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column事業所コード);
                this.columnランク = new global::System.Data.DataColumn("ランク", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnランク);
                this.column部課コード = new global::System.Data.DataColumn("部課コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部課コード);
                this.column担当者コード = new global::System.Data.DataColumn("担当者コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column担当者コード);
                this.column代理店コード = new global::System.Data.DataColumn("代理店コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column代理店コード);
                this.column代名 = new global::System.Data.DataColumn("代名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column代名);
                this.column納入先コード = new global::System.Data.DataColumn("納入先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納入先コード);
                this.column納名 = new global::System.Data.DataColumn("納名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納名);
                this.column取引先コード = new global::System.Data.DataColumn("取引先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取引先コード);
                this.column取引先名 = new global::System.Data.DataColumn("取引先名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取引先名);
                this.column請求先コード = new global::System.Data.DataColumn("請求先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column請求先コード);
                this.column売上切捨区分 = new global::System.Data.DataColumn("売上切捨区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上切捨区分);
                this.column売上税区分 = new global::System.Data.DataColumn("売上税区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上税区分);
                this.column伝票摘要 = new global::System.Data.DataColumn("伝票摘要", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column伝票摘要);
                this.column商品コード = new global::System.Data.DataColumn("商品コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品コード);
                this.column商名 = new global::System.Data.DataColumn("商名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商名);
                this.column規格 = new global::System.Data.DataColumn("規格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column規格);
                this.column形式寸法 = new global::System.Data.DataColumn("形式寸法", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column形式寸法);
                this.column材質 = new global::System.Data.DataColumn("材質", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材質);
                this.column分類 = new global::System.Data.DataColumn("分類", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分類);
                this.column在庫管理区分 = new global::System.Data.DataColumn("在庫管理区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column在庫管理区分);
                this.column品種コード = new global::System.Data.DataColumn("品種コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column品種コード);
                this.columnメーカーコード = new global::System.Data.DataColumn("メーカーコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnメーカーコード);
                this.column入数 = new global::System.Data.DataColumn("入数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入数);
                this.column単位コード = new global::System.Data.DataColumn("単位コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column単位コード);
                this.column倉庫コード = new global::System.Data.DataColumn("倉庫コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column倉庫コード);
                this.columnケース数 = new global::System.Data.DataColumn("ケース数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnケース数);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column売上単価 = new global::System.Data.DataColumn("売上単価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上単価);
                this.column売上金額 = new global::System.Data.DataColumn("売上金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上金額);
                this.column税抜売上金額 = new global::System.Data.DataColumn("税抜売上金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column税抜売上金額);
                this.column原価単価 = new global::System.Data.DataColumn("原価単価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column原価単価);
                this.column原価金額 = new global::System.Data.DataColumn("原価金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column原価金額);
                this.column粗利 = new global::System.Data.DataColumn("粗利", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column粗利);
                this.column消費税 = new global::System.Data.DataColumn("消費税", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column消費税);
                this.column税抜仕入金額 = new global::System.Data.DataColumn("税抜仕入金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column税抜仕入金額);
                this.column仕入消費税 = new global::System.Data.DataColumn("仕入消費税", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入消費税);
                this.column売上返品値引理由区分 = new global::System.Data.DataColumn("売上返品値引理由区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上返品値引理由区分);
                this.column外内税区分 = new global::System.Data.DataColumn("外内税区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column外内税区分);
                this.column消費税率 = new global::System.Data.DataColumn("消費税率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column消費税率);
                this.column新消費税率 = new global::System.Data.DataColumn("新消費税率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column新消費税率);
                this.column新消費税適用 = new global::System.Data.DataColumn("新消費税適用", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column新消費税適用);
                this.column明細摘要 = new global::System.Data.DataColumn("明細摘要", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column明細摘要);
                this.column受注番号 = new global::System.Data.DataColumn("受注番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注番号);
                this.column相手先注文番号 = new global::System.Data.DataColumn("相手先注文番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column相手先注文番号);
                this.column自社受付番号 = new global::System.Data.DataColumn("自社受付番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column自社受付番号);
                this.column仕入伝票番号 = new global::System.Data.DataColumn("仕入伝票番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入伝票番号);
                this.column仕入先コード = new global::System.Data.DataColumn("仕入先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入先コード);
                this.column仕名 = new global::System.Data.DataColumn("仕名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕名);
                this.column仕入分類 = new global::System.Data.DataColumn("仕入分類", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入分類);
                this.column仕入事業所コード = new global::System.Data.DataColumn("仕入事業所コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入事業所コード);
                this.column仕入担当者コード = new global::System.Data.DataColumn("仕入担当者コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入担当者コード);
                this.column仕入切捨区分 = new global::System.Data.DataColumn("仕入切捨区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入切捨区分);
                this.column仕入税区分 = new global::System.Data.DataColumn("仕入税区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入税区分);
                this.column入金番号 = new global::System.Data.DataColumn("入金番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入金番号);
                this.columnチェック = new global::System.Data.DataColumn("チェック", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnチェック);
                this.column入金チェック = new global::System.Data.DataColumn("入金チェック", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入金チェック);
                this.column回収摘要 = new global::System.Data.DataColumn("回収摘要", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column回収摘要);
                this.column検収チェック = new global::System.Data.DataColumn("検収チェック", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column検収チェック);
                this.column完了フラグ = new global::System.Data.DataColumn("完了フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column完了フラグ);
                this.columnWS_ID = new global::System.Data.DataColumn("WS_ID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWS_ID);
                this.column発行済フラグ = new global::System.Data.DataColumn("発行済フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発行済フラグ);
                this.column受注更新フラグ = new global::System.Data.DataColumn("受注更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注更新フラグ);
                this.column出荷更新フラグ = new global::System.Data.DataColumn("出荷更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷更新フラグ);
                this.column得意先更新フラグ = new global::System.Data.DataColumn("得意先更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column得意先更新フラグ);
                this.column商品更新フラグ = new global::System.Data.DataColumn("商品更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品更新フラグ);
                this.column商品倉庫更新フラグ = new global::System.Data.DataColumn("商品倉庫更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品倉庫更新フラグ);
                this.column商品取引更新フラグ = new global::System.Data.DataColumn("商品取引更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品取引更新フラグ);
                this.columnオペレーターコード = new global::System.Data.DataColumn("オペレーターコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnオペレーターコード);
                this.column修正オペレーターコード = new global::System.Data.DataColumn("修正オペレーターコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column修正オペレーターコード);
                this.column受注行 = new global::System.Data.DataColumn("受注行", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注行);
                this.column処理月日 = new global::System.Data.DataColumn("処理月日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理月日);
                this.column管理年月 = new global::System.Data.DataColumn("管理年月", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column管理年月);
                this.column受注行番号 = new global::System.Data.DataColumn("受注行番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注行番号);
                this.column売上行番号 = new global::System.Data.DataColumn("売上行番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上行番号);
                this.column定価 = new global::System.Data.DataColumn("定価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column定価);
                this.column納品掛率 = new global::System.Data.DataColumn("納品掛率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納品掛率);
                this.column原価掛率 = new global::System.Data.DataColumn("原価掛率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column原価掛率);
                this.column発注有無区分 = new global::System.Data.DataColumn("発注有無区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注有無区分);
                this.column回答納期 = new global::System.Data.DataColumn("回答納期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column回答納期);
                this.column在庫数 = new global::System.Data.DataColumn("在庫数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column在庫数);
                this.column受注残数 = new global::System.Data.DataColumn("受注残数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注残数);
                this.column発注残数 = new global::System.Data.DataColumn("発注残数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注残数);
                this.column納品書発行フラグ = new global::System.Data.DataColumn("納品書発行フラグ", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納品書発行フラグ);
                this.column専用伝票発行フラグ = new global::System.Data.DataColumn("専用伝票発行フラグ", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column専用伝票発行フラグ);
                this.column売上累計 = new global::System.Data.DataColumn("売上累計", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上累計);
                this.column受注番号受注残数 = new global::System.Data.DataColumn("受注番号受注残数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注番号受注残数);
                this.column取引先コード２ = new global::System.Data.DataColumn("取引先コード２", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取引先コード２);
                this.column社名 = new global::System.Data.DataColumn("社名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column社名);
                this.column店名 = new global::System.Data.DataColumn("店名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column店名);
                this.column部名 = new global::System.Data.DataColumn("部名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部名);
                this.column発注区分 = new global::System.Data.DataColumn("発注区分", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注区分);
                this.column請求月 = new global::System.Data.DataColumn("請求月", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column請求月);
                this.columnＥＯＳ区分 = new global::System.Data.DataColumn("ＥＯＳ区分", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＥＯＳ区分);
                this.column帳票区分 = new global::System.Data.DataColumn("帳票区分", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column帳票区分);
                this.column発注単位 = new global::System.Data.DataColumn("発注単位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注単位);
                this.columnＥＯＳ商品コード = new global::System.Data.DataColumn("ＥＯＳ商品コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＥＯＳ商品コード);
                this.columnＥＯＳ商品名 = new global::System.Data.DataColumn("ＥＯＳ商品名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＥＯＳ商品名);
                this.columnＥＯＳ規格 = new global::System.Data.DataColumn("ＥＯＳ規格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＥＯＳ規格);
                this.column表示価格 = new global::System.Data.DataColumn("表示価格", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column表示価格);
                this.columnＥＯＳ棚番 = new global::System.Data.DataColumn("ＥＯＳ棚番", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＥＯＳ棚番);
                this.columnＪＡＮコード = new global::System.Data.DataColumn("ＪＡＮコード", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＪＡＮコード);
                this.columnメーカー品番 = new global::System.Data.DataColumn("メーカー品番", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnメーカー品番);
                this.column棚番 = new global::System.Data.DataColumn("棚番", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column棚番);
                this.columnメーカー名 = new global::System.Data.DataColumn("メーカー名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnメーカー名);
                this.column店コード = new global::System.Data.DataColumn("店コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column店コード);
                this.column部コード = new global::System.Data.DataColumn("部コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部コード);
                this.columnエラー区分 = new global::System.Data.DataColumn("エラー区分", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnエラー区分);
                this.column更新ビット = new global::System.Data.DataColumn("更新ビット", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column更新ビット);
                this.column商品番号 = new global::System.Data.DataColumn("商品番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品番号);
                this.column社コード = new global::System.Data.DataColumn("社コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column社コード);
                this.column店コードＢ = new global::System.Data.DataColumn("店コードＢ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column店コードＢ);
                this.column直送区分 = new global::System.Data.DataColumn("直送区分", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column直送区分);
                this.column客注区分 = new global::System.Data.DataColumn("客注区分", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column客注区分);
                this.column経費区分 = new global::System.Data.DataColumn("経費区分", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column経費区分);
                this.column返品区分 = new global::System.Data.DataColumn("返品区分", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column返品区分);
                this.column本部原価単価 = new global::System.Data.DataColumn("本部原価単価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本部原価単価);
                this.column本部原価金額 = new global::System.Data.DataColumn("本部原価金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本部原価金額);
                this.column納入単価 = new global::System.Data.DataColumn("納入単価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納入単価);
                this.column店舗売価 = new global::System.Data.DataColumn("店舗売価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column店舗売価);
                this.column大分類コード = new global::System.Data.DataColumn("大分類コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column大分類コード);
                this.column店舗備考 = new global::System.Data.DataColumn("店舗備考", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column店舗備考);
                this.column仕入先備考 = new global::System.Data.DataColumn("仕入先備考", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入先備考);
                this.column登録番号 = new global::System.Data.DataColumn("登録番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登録番号);
                this.columnドラスタ発注番号 = new global::System.Data.DataColumn("ドラスタ発注番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnドラスタ発注番号);
                this.column客注番号 = new global::System.Data.DataColumn("客注番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column客注番号);
                this.columnドラスタ区分 = new global::System.Data.DataColumn("ドラスタ区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnドラスタ区分);
                this.column欠品理由 = new global::System.Data.DataColumn("欠品理由", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column欠品理由);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column売上修正連番}, true));
                this.column売上修正連番.AutoIncrement = true;
                this.column売上修正連番.AutoIncrementSeed = -1;
                this.column売上修正連番.AutoIncrementStep = -1;
                this.column売上修正連番.AllowDBNull = false;
                this.column売上修正連番.ReadOnly = true;
                this.column売上修正連番.Unique = true;
                this.columnエラーフラグ.AllowDBNull = false;
                this.columnシステム区分.AllowDBNull = false;
                this.column得意先コード.MaxLength = 8;
                this.column得名.MaxLength = 32;
                this.column事業所コード.MaxLength = 8;
                this.column部課コード.MaxLength = 4;
                this.column担当者コード.MaxLength = 6;
                this.column代理店コード.MaxLength = 8;
                this.column代名.MaxLength = 32;
                this.column納入先コード.MaxLength = 8;
                this.column納名.MaxLength = 32;
                this.column取引先コード.MaxLength = 8;
                this.column取引先名.MaxLength = 32;
                this.column請求先コード.MaxLength = 8;
                this.column伝票摘要.MaxLength = 40;
                this.column商品コード.MaxLength = 13;
                this.column商名.MaxLength = 40;
                this.column規格.MaxLength = 24;
                this.column形式寸法.MaxLength = 40;
                this.column材質.MaxLength = 40;
                this.column在庫管理区分.AllowDBNull = false;
                this.column品種コード.MaxLength = 6;
                this.columnメーカーコード.MaxLength = 8;
                this.column倉庫コード.MaxLength = 6;
                this.column明細摘要.MaxLength = 40;
                this.column相手先注文番号.MaxLength = 20;
                this.column自社受付番号.MaxLength = 20;
                this.column仕入先コード.MaxLength = 8;
                this.column仕名.MaxLength = 32;
                this.column仕入事業所コード.MaxLength = 8;
                this.column仕入担当者コード.MaxLength = 6;
                this.columnチェック.AllowDBNull = false;
                this.column入金チェック.AllowDBNull = false;
                this.column回収摘要.MaxLength = 40;
                this.column検収チェック.AllowDBNull = false;
                this.column完了フラグ.AllowDBNull = false;
                this.column発行済フラグ.AllowDBNull = false;
                this.column受注更新フラグ.AllowDBNull = false;
                this.column出荷更新フラグ.AllowDBNull = false;
                this.column得意先更新フラグ.AllowDBNull = false;
                this.column商品更新フラグ.AllowDBNull = false;
                this.column商品倉庫更新フラグ.AllowDBNull = false;
                this.column商品取引更新フラグ.AllowDBNull = false;
                this.columnオペレーターコード.MaxLength = 20;
                this.column修正オペレーターコード.MaxLength = 20;
                this.column社名.MaxLength = 20;
                this.column店名.MaxLength = 10;
                this.column部名.MaxLength = 10;
                this.columnＥＯＳ区分.MaxLength = 2;
                this.column発注単位.MaxLength = 2;
                this.columnＥＯＳ商品コード.MaxLength = 13;
                this.columnＥＯＳ商品名.MaxLength = 20;
                this.columnＥＯＳ規格.MaxLength = 9;
                this.columnメーカー品番.MaxLength = 20;
                this.column棚番.MaxLength = 5;
                this.columnメーカー名.MaxLength = 32;
                this.columnエラー区分.MaxLength = 10;
                this.column商品番号.MaxLength = 15;
                this.column大分類コード.MaxLength = 10;
                this.column店舗備考.MaxLength = 100;
                this.column仕入先備考.MaxLength = 100;
                this.column客注番号.MaxLength = 11;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上修正戻ファイルRow NewT売上修正戻ファイルRow() {
                return ((T売上修正戻ファイルRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T売上修正戻ファイルRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T売上修正戻ファイルRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T売上修正戻ファイルRowChanged != null)) {
                    this.T売上修正戻ファイルRowChanged(this, new T売上修正戻ファイルRowChangeEvent(((T売上修正戻ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T売上修正戻ファイルRowChanging != null)) {
                    this.T売上修正戻ファイルRowChanging(this, new T売上修正戻ファイルRowChangeEvent(((T売上修正戻ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T売上修正戻ファイルRowDeleted != null)) {
                    this.T売上修正戻ファイルRowDeleted(this, new T売上修正戻ファイルRowChangeEvent(((T売上修正戻ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T売上修正戻ファイルRowDeleting != null)) {
                    this.T売上修正戻ファイルRowDeleting(this, new T売上修正戻ファイルRowChangeEvent(((T売上修正戻ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT売上修正戻ファイルRow(T売上修正戻ファイルRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                売上計上DataSet ds = new 売上計上DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T売上修正戻ファイルDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T売上明細ファイルDataTable : global::System.Data.TypedTableBase<T売上明細ファイルRow> {
            
            private global::System.Data.DataColumn column売上連番;
            
            private global::System.Data.DataColumn column本支店区分;
            
            private global::System.Data.DataColumn column処理コード;
            
            private global::System.Data.DataColumn column入力区分;
            
            private global::System.Data.DataColumn column処理番号;
            
            private global::System.Data.DataColumn columnエラーフラグ;
            
            private global::System.Data.DataColumn column受発注行数;
            
            private global::System.Data.DataColumn column受注連番;
            
            private global::System.Data.DataColumn column出荷番号;
            
            private global::System.Data.DataColumn column出荷連番;
            
            private global::System.Data.DataColumn column発注番号;
            
            private global::System.Data.DataColumn column発注連番;
            
            private global::System.Data.DataColumn column売上伝票番号;
            
            private global::System.Data.DataColumn column処理日;
            
            private global::System.Data.DataColumn column売上日;
            
            private global::System.Data.DataColumn column納入日;
            
            private global::System.Data.DataColumn column受注日;
            
            private global::System.Data.DataColumn column納期;
            
            private global::System.Data.DataColumn column発注納期;
            
            private global::System.Data.DataColumn column処理区;
            
            private global::System.Data.DataColumn column売上区分コード;
            
            private global::System.Data.DataColumn columnシステム区分;
            
            private global::System.Data.DataColumn column取引区分;
            
            private global::System.Data.DataColumn column請求月区分コード;
            
            private global::System.Data.DataColumn column得意先コード;
            
            private global::System.Data.DataColumn column得名;
            
            private global::System.Data.DataColumn column事業所コード;
            
            private global::System.Data.DataColumn columnランク;
            
            private global::System.Data.DataColumn column部課コード;
            
            private global::System.Data.DataColumn column担当者コード;
            
            private global::System.Data.DataColumn column代理店コード;
            
            private global::System.Data.DataColumn column代名;
            
            private global::System.Data.DataColumn column納入先コード;
            
            private global::System.Data.DataColumn column納名;
            
            private global::System.Data.DataColumn column取引先コード;
            
            private global::System.Data.DataColumn column取引先名;
            
            private global::System.Data.DataColumn column請求先コード;
            
            private global::System.Data.DataColumn column売上切捨区分;
            
            private global::System.Data.DataColumn column売上税区分;
            
            private global::System.Data.DataColumn column伝票摘要;
            
            private global::System.Data.DataColumn column商品コード;
            
            private global::System.Data.DataColumn column商名;
            
            private global::System.Data.DataColumn column規格;
            
            private global::System.Data.DataColumn column形式寸法;
            
            private global::System.Data.DataColumn column材質;
            
            private global::System.Data.DataColumn column分類;
            
            private global::System.Data.DataColumn column在庫管理区分;
            
            private global::System.Data.DataColumn column品種コード;
            
            private global::System.Data.DataColumn columnメーカーコード;
            
            private global::System.Data.DataColumn column入数;
            
            private global::System.Data.DataColumn column単位コード;
            
            private global::System.Data.DataColumn column倉庫コード;
            
            private global::System.Data.DataColumn columnケース数;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column売上単価;
            
            private global::System.Data.DataColumn column売上金額;
            
            private global::System.Data.DataColumn column税抜売上金額;
            
            private global::System.Data.DataColumn column原価単価;
            
            private global::System.Data.DataColumn column原価金額;
            
            private global::System.Data.DataColumn column粗利;
            
            private global::System.Data.DataColumn column消費税;
            
            private global::System.Data.DataColumn column税抜仕入金額;
            
            private global::System.Data.DataColumn column仕入消費税;
            
            private global::System.Data.DataColumn column売上返品値引理由区分;
            
            private global::System.Data.DataColumn column外内税区分;
            
            private global::System.Data.DataColumn column消費税率;
            
            private global::System.Data.DataColumn column新消費税率;
            
            private global::System.Data.DataColumn column新消費税適用;
            
            private global::System.Data.DataColumn column明細摘要;
            
            private global::System.Data.DataColumn column受注番号;
            
            private global::System.Data.DataColumn column相手先注文番号;
            
            private global::System.Data.DataColumn column自社受付番号;
            
            private global::System.Data.DataColumn column仕入伝票番号;
            
            private global::System.Data.DataColumn column仕入先コード;
            
            private global::System.Data.DataColumn column仕名;
            
            private global::System.Data.DataColumn column仕入分類;
            
            private global::System.Data.DataColumn column仕入事業所コード;
            
            private global::System.Data.DataColumn column仕入担当者コード;
            
            private global::System.Data.DataColumn column仕入切捨区分;
            
            private global::System.Data.DataColumn column仕入税区分;
            
            private global::System.Data.DataColumn column入金番号;
            
            private global::System.Data.DataColumn columnチェック;
            
            private global::System.Data.DataColumn column入金チェック;
            
            private global::System.Data.DataColumn column回収摘要;
            
            private global::System.Data.DataColumn column検収チェック;
            
            private global::System.Data.DataColumn column完了フラグ;
            
            private global::System.Data.DataColumn columnWS_ID;
            
            private global::System.Data.DataColumn column発行済フラグ;
            
            private global::System.Data.DataColumn column受注更新フラグ;
            
            private global::System.Data.DataColumn column出荷更新フラグ;
            
            private global::System.Data.DataColumn column得意先更新フラグ;
            
            private global::System.Data.DataColumn column商品更新フラグ;
            
            private global::System.Data.DataColumn column商品倉庫更新フラグ;
            
            private global::System.Data.DataColumn column商品取引更新フラグ;
            
            private global::System.Data.DataColumn columnオペレーターコード;
            
            private global::System.Data.DataColumn column修正オペレーターコード;
            
            private global::System.Data.DataColumn column受注行;
            
            private global::System.Data.DataColumn column処理月日;
            
            private global::System.Data.DataColumn column管理年月;
            
            private global::System.Data.DataColumn column一括消費税締日;
            
            private global::System.Data.DataColumn column発行済INDEX;
            
            private global::System.Data.DataColumn column受注行番号;
            
            private global::System.Data.DataColumn column売上行番号;
            
            private global::System.Data.DataColumn column定価;
            
            private global::System.Data.DataColumn column納品掛率;
            
            private global::System.Data.DataColumn column原価掛率;
            
            private global::System.Data.DataColumn column発注有無区分;
            
            private global::System.Data.DataColumn column回答納期;
            
            private global::System.Data.DataColumn column在庫数;
            
            private global::System.Data.DataColumn column受注残数;
            
            private global::System.Data.DataColumn column発注残数;
            
            private global::System.Data.DataColumn column納品書発行フラグ;
            
            private global::System.Data.DataColumn column専用伝票発行フラグ;
            
            private global::System.Data.DataColumn column売上累計;
            
            private global::System.Data.DataColumn column受注番号受注残数;
            
            private global::System.Data.DataColumn column納品書発行日時;
            
            private global::System.Data.DataColumn column取引先コード２;
            
            private global::System.Data.DataColumn column社名;
            
            private global::System.Data.DataColumn column店名;
            
            private global::System.Data.DataColumn column部名;
            
            private global::System.Data.DataColumn column発注区分;
            
            private global::System.Data.DataColumn column請求月;
            
            private global::System.Data.DataColumn columnＥＯＳ区分;
            
            private global::System.Data.DataColumn column帳票区分;
            
            private global::System.Data.DataColumn column発注単位;
            
            private global::System.Data.DataColumn columnＥＯＳ商品コード;
            
            private global::System.Data.DataColumn columnＥＯＳ商品名;
            
            private global::System.Data.DataColumn columnＥＯＳ規格;
            
            private global::System.Data.DataColumn column表示価格;
            
            private global::System.Data.DataColumn columnＥＯＳ棚番;
            
            private global::System.Data.DataColumn columnＪＡＮコード;
            
            private global::System.Data.DataColumn columnメーカー品番;
            
            private global::System.Data.DataColumn column棚番;
            
            private global::System.Data.DataColumn columnメーカー名;
            
            private global::System.Data.DataColumn column店コード;
            
            private global::System.Data.DataColumn column部コード;
            
            private global::System.Data.DataColumn columnエラー区分;
            
            private global::System.Data.DataColumn column更新ビット;
            
            private global::System.Data.DataColumn column商品番号;
            
            private global::System.Data.DataColumn column社コード;
            
            private global::System.Data.DataColumn column店コードＢ;
            
            private global::System.Data.DataColumn column直送区分;
            
            private global::System.Data.DataColumn column客注区分;
            
            private global::System.Data.DataColumn column経費区分;
            
            private global::System.Data.DataColumn column返品区分;
            
            private global::System.Data.DataColumn column本部原価単価;
            
            private global::System.Data.DataColumn column本部原価金額;
            
            private global::System.Data.DataColumn column納入単価;
            
            private global::System.Data.DataColumn column店舗売価;
            
            private global::System.Data.DataColumn column大分類コード;
            
            private global::System.Data.DataColumn column店舗備考;
            
            private global::System.Data.DataColumn column仕入先備考;
            
            private global::System.Data.DataColumn column登録番号;
            
            private global::System.Data.DataColumn columnドラスタ発注番号;
            
            private global::System.Data.DataColumn column客注番号;
            
            private global::System.Data.DataColumn columnドラスタ区分;
            
            private global::System.Data.DataColumn column欠品理由;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上明細ファイルDataTable() {
                this.TableName = "T売上明細ファイル";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T売上明細ファイルDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T売上明細ファイルDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上連番Column {
                get {
                    return this.column売上連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 本支店区分Column {
                get {
                    return this.column本支店区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理コードColumn {
                get {
                    return this.column処理コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入力区分Column {
                get {
                    return this.column入力区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理番号Column {
                get {
                    return this.column処理番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn エラーフラグColumn {
                get {
                    return this.columnエラーフラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受発注行数Column {
                get {
                    return this.column受発注行数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注連番Column {
                get {
                    return this.column受注連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出荷番号Column {
                get {
                    return this.column出荷番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出荷連番Column {
                get {
                    return this.column出荷連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注番号Column {
                get {
                    return this.column発注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注連番Column {
                get {
                    return this.column発注連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上伝票番号Column {
                get {
                    return this.column売上伝票番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理日Column {
                get {
                    return this.column処理日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上日Column {
                get {
                    return this.column売上日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納入日Column {
                get {
                    return this.column納入日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注日Column {
                get {
                    return this.column受注日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納期Column {
                get {
                    return this.column納期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注納期Column {
                get {
                    return this.column発注納期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理区Column {
                get {
                    return this.column処理区;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上区分コードColumn {
                get {
                    return this.column売上区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn システム区分Column {
                get {
                    return this.columnシステム区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取引区分Column {
                get {
                    return this.column取引区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 請求月区分コードColumn {
                get {
                    return this.column請求月区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 得意先コードColumn {
                get {
                    return this.column得意先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 得名Column {
                get {
                    return this.column得名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 事業所コードColumn {
                get {
                    return this.column事業所コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ランクColumn {
                get {
                    return this.columnランク;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 部課コードColumn {
                get {
                    return this.column部課コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 担当者コードColumn {
                get {
                    return this.column担当者コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 代理店コードColumn {
                get {
                    return this.column代理店コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 代名Column {
                get {
                    return this.column代名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納入先コードColumn {
                get {
                    return this.column納入先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納名Column {
                get {
                    return this.column納名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取引先コードColumn {
                get {
                    return this.column取引先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取引先名Column {
                get {
                    return this.column取引先名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 請求先コードColumn {
                get {
                    return this.column請求先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上切捨区分Column {
                get {
                    return this.column売上切捨区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上税区分Column {
                get {
                    return this.column売上税区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 伝票摘要Column {
                get {
                    return this.column伝票摘要;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品コードColumn {
                get {
                    return this.column商品コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商名Column {
                get {
                    return this.column商名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 規格Column {
                get {
                    return this.column規格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 形式寸法Column {
                get {
                    return this.column形式寸法;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 材質Column {
                get {
                    return this.column材質;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 分類Column {
                get {
                    return this.column分類;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 在庫管理区分Column {
                get {
                    return this.column在庫管理区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 品種コードColumn {
                get {
                    return this.column品種コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn メーカーコードColumn {
                get {
                    return this.columnメーカーコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入数Column {
                get {
                    return this.column入数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 単位コードColumn {
                get {
                    return this.column単位コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 倉庫コードColumn {
                get {
                    return this.column倉庫コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ケース数Column {
                get {
                    return this.columnケース数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上単価Column {
                get {
                    return this.column売上単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上金額Column {
                get {
                    return this.column売上金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 税抜売上金額Column {
                get {
                    return this.column税抜売上金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 原価単価Column {
                get {
                    return this.column原価単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 原価金額Column {
                get {
                    return this.column原価金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 粗利Column {
                get {
                    return this.column粗利;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 消費税Column {
                get {
                    return this.column消費税;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 税抜仕入金額Column {
                get {
                    return this.column税抜仕入金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入消費税Column {
                get {
                    return this.column仕入消費税;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上返品値引理由区分Column {
                get {
                    return this.column売上返品値引理由区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 外内税区分Column {
                get {
                    return this.column外内税区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 消費税率Column {
                get {
                    return this.column消費税率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 新消費税率Column {
                get {
                    return this.column新消費税率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 新消費税適用Column {
                get {
                    return this.column新消費税適用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 明細摘要Column {
                get {
                    return this.column明細摘要;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注番号Column {
                get {
                    return this.column受注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 相手先注文番号Column {
                get {
                    return this.column相手先注文番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 自社受付番号Column {
                get {
                    return this.column自社受付番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入伝票番号Column {
                get {
                    return this.column仕入伝票番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入先コードColumn {
                get {
                    return this.column仕入先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕名Column {
                get {
                    return this.column仕名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入分類Column {
                get {
                    return this.column仕入分類;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入事業所コードColumn {
                get {
                    return this.column仕入事業所コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入担当者コードColumn {
                get {
                    return this.column仕入担当者コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入切捨区分Column {
                get {
                    return this.column仕入切捨区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入税区分Column {
                get {
                    return this.column仕入税区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入金番号Column {
                get {
                    return this.column入金番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn チェックColumn {
                get {
                    return this.columnチェック;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入金チェックColumn {
                get {
                    return this.column入金チェック;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 回収摘要Column {
                get {
                    return this.column回収摘要;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 検収チェックColumn {
                get {
                    return this.column検収チェック;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 完了フラグColumn {
                get {
                    return this.column完了フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WS_IDColumn {
                get {
                    return this.columnWS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発行済フラグColumn {
                get {
                    return this.column発行済フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注更新フラグColumn {
                get {
                    return this.column受注更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出荷更新フラグColumn {
                get {
                    return this.column出荷更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 得意先更新フラグColumn {
                get {
                    return this.column得意先更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品更新フラグColumn {
                get {
                    return this.column商品更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品倉庫更新フラグColumn {
                get {
                    return this.column商品倉庫更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品取引更新フラグColumn {
                get {
                    return this.column商品取引更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn オペレーターコードColumn {
                get {
                    return this.columnオペレーターコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 修正オペレーターコードColumn {
                get {
                    return this.column修正オペレーターコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注行Column {
                get {
                    return this.column受注行;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理月日Column {
                get {
                    return this.column処理月日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 管理年月Column {
                get {
                    return this.column管理年月;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 一括消費税締日Column {
                get {
                    return this.column一括消費税締日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発行済INDEXColumn {
                get {
                    return this.column発行済INDEX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注行番号Column {
                get {
                    return this.column受注行番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上行番号Column {
                get {
                    return this.column売上行番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 定価Column {
                get {
                    return this.column定価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納品掛率Column {
                get {
                    return this.column納品掛率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 原価掛率Column {
                get {
                    return this.column原価掛率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注有無区分Column {
                get {
                    return this.column発注有無区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 回答納期Column {
                get {
                    return this.column回答納期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 在庫数Column {
                get {
                    return this.column在庫数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注残数Column {
                get {
                    return this.column受注残数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注残数Column {
                get {
                    return this.column発注残数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納品書発行フラグColumn {
                get {
                    return this.column納品書発行フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 専用伝票発行フラグColumn {
                get {
                    return this.column専用伝票発行フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上累計Column {
                get {
                    return this.column売上累計;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注番号受注残数Column {
                get {
                    return this.column受注番号受注残数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納品書発行日時Column {
                get {
                    return this.column納品書発行日時;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取引先コード２Column {
                get {
                    return this.column取引先コード２;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 社名Column {
                get {
                    return this.column社名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 店名Column {
                get {
                    return this.column店名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 部名Column {
                get {
                    return this.column部名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注区分Column {
                get {
                    return this.column発注区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 請求月Column {
                get {
                    return this.column請求月;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＥＯＳ区分Column {
                get {
                    return this.columnＥＯＳ区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 帳票区分Column {
                get {
                    return this.column帳票区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注単位Column {
                get {
                    return this.column発注単位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＥＯＳ商品コードColumn {
                get {
                    return this.columnＥＯＳ商品コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＥＯＳ商品名Column {
                get {
                    return this.columnＥＯＳ商品名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＥＯＳ規格Column {
                get {
                    return this.columnＥＯＳ規格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 表示価格Column {
                get {
                    return this.column表示価格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＥＯＳ棚番Column {
                get {
                    return this.columnＥＯＳ棚番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＪＡＮコードColumn {
                get {
                    return this.columnＪＡＮコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn メーカー品番Column {
                get {
                    return this.columnメーカー品番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 棚番Column {
                get {
                    return this.column棚番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn メーカー名Column {
                get {
                    return this.columnメーカー名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 店コードColumn {
                get {
                    return this.column店コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 部コードColumn {
                get {
                    return this.column部コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn エラー区分Column {
                get {
                    return this.columnエラー区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 更新ビットColumn {
                get {
                    return this.column更新ビット;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品番号Column {
                get {
                    return this.column商品番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 社コードColumn {
                get {
                    return this.column社コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 店コードＢColumn {
                get {
                    return this.column店コードＢ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 直送区分Column {
                get {
                    return this.column直送区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 客注区分Column {
                get {
                    return this.column客注区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 経費区分Column {
                get {
                    return this.column経費区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 返品区分Column {
                get {
                    return this.column返品区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 本部原価単価Column {
                get {
                    return this.column本部原価単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 本部原価金額Column {
                get {
                    return this.column本部原価金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納入単価Column {
                get {
                    return this.column納入単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 店舗売価Column {
                get {
                    return this.column店舗売価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 大分類コードColumn {
                get {
                    return this.column大分類コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 店舗備考Column {
                get {
                    return this.column店舗備考;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入先備考Column {
                get {
                    return this.column仕入先備考;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 登録番号Column {
                get {
                    return this.column登録番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ドラスタ発注番号Column {
                get {
                    return this.columnドラスタ発注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 客注番号Column {
                get {
                    return this.column客注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ドラスタ区分Column {
                get {
                    return this.columnドラスタ区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 欠品理由Column {
                get {
                    return this.column欠品理由;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上明細ファイルRow this[int index] {
                get {
                    return ((T売上明細ファイルRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T売上明細ファイルRowChangeEventHandler T売上明細ファイルRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T売上明細ファイルRowChangeEventHandler T売上明細ファイルRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T売上明細ファイルRowChangeEventHandler T売上明細ファイルRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T売上明細ファイルRowChangeEventHandler T売上明細ファイルRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT売上明細ファイルRow(T売上明細ファイルRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上明細ファイルRow AddT売上明細ファイルRow(
                        short 本支店区分, 
                        int 処理コード, 
                        short 入力区分, 
                        int 処理番号, 
                        bool エラーフラグ, 
                        int 受発注行数, 
                        int 受注連番, 
                        int 出荷番号, 
                        int 出荷連番, 
                        int 発注番号, 
                        int 発注連番, 
                        int 売上伝票番号, 
                        System.DateTime 処理日, 
                        System.DateTime 売上日, 
                        System.DateTime 納入日, 
                        System.DateTime 受注日, 
                        System.DateTime 納期, 
                        System.DateTime 発注納期, 
                        short 処理区, 
                        short 売上区分コード, 
                        short システム区分, 
                        short 取引区分, 
                        short 請求月区分コード, 
                        string 得意先コード, 
                        string 得名, 
                        string 事業所コード, 
                        short ランク, 
                        string 部課コード, 
                        string 担当者コード, 
                        string 代理店コード, 
                        string 代名, 
                        string 納入先コード, 
                        string 納名, 
                        string 取引先コード, 
                        string 取引先名, 
                        string 請求先コード, 
                        short 売上切捨区分, 
                        short 売上税区分, 
                        string 伝票摘要, 
                        string 商品コード, 
                        string 商名, 
                        string 規格, 
                        string 形式寸法, 
                        string 材質, 
                        short 分類, 
                        bool 在庫管理区分, 
                        string 品種コード, 
                        string メーカーコード, 
                        decimal 入数, 
                        short 単位コード, 
                        string 倉庫コード, 
                        decimal ケース数, 
                        decimal 数量, 
                        decimal 売上単価, 
                        decimal 売上金額, 
                        decimal 税抜売上金額, 
                        decimal 原価単価, 
                        decimal 原価金額, 
                        decimal 粗利, 
                        decimal 消費税, 
                        decimal 税抜仕入金額, 
                        decimal 仕入消費税, 
                        short 売上返品値引理由区分, 
                        short 外内税区分, 
                        decimal 消費税率, 
                        decimal 新消費税率, 
                        System.DateTime 新消費税適用, 
                        string 明細摘要, 
                        int 受注番号, 
                        string 相手先注文番号, 
                        string 自社受付番号, 
                        int 仕入伝票番号, 
                        string 仕入先コード, 
                        string 仕名, 
                        short 仕入分類, 
                        string 仕入事業所コード, 
                        string 仕入担当者コード, 
                        short 仕入切捨区分, 
                        short 仕入税区分, 
                        int 入金番号, 
                        bool チェック, 
                        bool 入金チェック, 
                        string 回収摘要, 
                        bool 検収チェック, 
                        bool 完了フラグ, 
                        short WS_ID, 
                        bool 発行済フラグ, 
                        bool 受注更新フラグ, 
                        bool 出荷更新フラグ, 
                        bool 得意先更新フラグ, 
                        bool 商品更新フラグ, 
                        bool 商品倉庫更新フラグ, 
                        bool 商品取引更新フラグ, 
                        string オペレーターコード, 
                        string 修正オペレーターコード, 
                        int 受注行, 
                        System.DateTime 処理月日, 
                        int 管理年月, 
                        short 一括消費税締日, 
                        int 発行済INDEX, 
                        int 受注行番号, 
                        int 売上行番号, 
                        decimal 定価, 
                        decimal 納品掛率, 
                        decimal 原価掛率, 
                        short 発注有無区分, 
                        System.DateTime 回答納期, 
                        decimal 在庫数, 
                        decimal 受注残数, 
                        decimal 発注残数, 
                        short 納品書発行フラグ, 
                        short 専用伝票発行フラグ, 
                        decimal 売上累計, 
                        decimal 受注番号受注残数, 
                        System.DateTime 納品書発行日時, 
                        int 取引先コード２, 
                        string 社名, 
                        string 店名, 
                        string 部名, 
                        int 発注区分, 
                        int 請求月, 
                        string ＥＯＳ区分, 
                        int 帳票区分, 
                        string 発注単位, 
                        string ＥＯＳ商品コード, 
                        string ＥＯＳ商品名, 
                        string ＥＯＳ規格, 
                        decimal 表示価格, 
                        decimal ＥＯＳ棚番, 
                        decimal ＪＡＮコード, 
                        string メーカー品番, 
                        string 棚番, 
                        string メーカー名, 
                        int 店コード, 
                        int 部コード, 
                        string エラー区分, 
                        int 更新ビット, 
                        string 商品番号, 
                        int 社コード, 
                        int 店コードＢ, 
                        int 直送区分, 
                        int 客注区分, 
                        int 経費区分, 
                        int 返品区分, 
                        decimal 本部原価単価, 
                        decimal 本部原価金額, 
                        decimal 納入単価, 
                        decimal 店舗売価, 
                        string 大分類コード, 
                        string 店舗備考, 
                        string 仕入先備考, 
                        int 登録番号, 
                        int ドラスタ発注番号, 
                        string 客注番号, 
                        short ドラスタ区分, 
                        short 欠品理由) {
                T売上明細ファイルRow rowT売上明細ファイルRow = ((T売上明細ファイルRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        本支店区分,
                        処理コード,
                        入力区分,
                        処理番号,
                        エラーフラグ,
                        受発注行数,
                        受注連番,
                        出荷番号,
                        出荷連番,
                        発注番号,
                        発注連番,
                        売上伝票番号,
                        処理日,
                        売上日,
                        納入日,
                        受注日,
                        納期,
                        発注納期,
                        処理区,
                        売上区分コード,
                        システム区分,
                        取引区分,
                        請求月区分コード,
                        得意先コード,
                        得名,
                        事業所コード,
                        ランク,
                        部課コード,
                        担当者コード,
                        代理店コード,
                        代名,
                        納入先コード,
                        納名,
                        取引先コード,
                        取引先名,
                        請求先コード,
                        売上切捨区分,
                        売上税区分,
                        伝票摘要,
                        商品コード,
                        商名,
                        規格,
                        形式寸法,
                        材質,
                        分類,
                        在庫管理区分,
                        品種コード,
                        メーカーコード,
                        入数,
                        単位コード,
                        倉庫コード,
                        ケース数,
                        数量,
                        売上単価,
                        売上金額,
                        税抜売上金額,
                        原価単価,
                        原価金額,
                        粗利,
                        消費税,
                        税抜仕入金額,
                        仕入消費税,
                        売上返品値引理由区分,
                        外内税区分,
                        消費税率,
                        新消費税率,
                        新消費税適用,
                        明細摘要,
                        受注番号,
                        相手先注文番号,
                        自社受付番号,
                        仕入伝票番号,
                        仕入先コード,
                        仕名,
                        仕入分類,
                        仕入事業所コード,
                        仕入担当者コード,
                        仕入切捨区分,
                        仕入税区分,
                        入金番号,
                        チェック,
                        入金チェック,
                        回収摘要,
                        検収チェック,
                        完了フラグ,
                        WS_ID,
                        発行済フラグ,
                        受注更新フラグ,
                        出荷更新フラグ,
                        得意先更新フラグ,
                        商品更新フラグ,
                        商品倉庫更新フラグ,
                        商品取引更新フラグ,
                        オペレーターコード,
                        修正オペレーターコード,
                        受注行,
                        処理月日,
                        管理年月,
                        一括消費税締日,
                        発行済INDEX,
                        受注行番号,
                        売上行番号,
                        定価,
                        納品掛率,
                        原価掛率,
                        発注有無区分,
                        回答納期,
                        在庫数,
                        受注残数,
                        発注残数,
                        納品書発行フラグ,
                        専用伝票発行フラグ,
                        売上累計,
                        受注番号受注残数,
                        納品書発行日時,
                        取引先コード２,
                        社名,
                        店名,
                        部名,
                        発注区分,
                        請求月,
                        ＥＯＳ区分,
                        帳票区分,
                        発注単位,
                        ＥＯＳ商品コード,
                        ＥＯＳ商品名,
                        ＥＯＳ規格,
                        表示価格,
                        ＥＯＳ棚番,
                        ＪＡＮコード,
                        メーカー品番,
                        棚番,
                        メーカー名,
                        店コード,
                        部コード,
                        エラー区分,
                        更新ビット,
                        商品番号,
                        社コード,
                        店コードＢ,
                        直送区分,
                        客注区分,
                        経費区分,
                        返品区分,
                        本部原価単価,
                        本部原価金額,
                        納入単価,
                        店舗売価,
                        大分類コード,
                        店舗備考,
                        仕入先備考,
                        登録番号,
                        ドラスタ発注番号,
                        客注番号,
                        ドラスタ区分,
                        欠品理由};
                rowT売上明細ファイルRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT売上明細ファイルRow);
                return rowT売上明細ファイルRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上明細ファイルRow FindBy売上連番(int 売上連番) {
                return ((T売上明細ファイルRow)(this.Rows.Find(new object[] {
                            売上連番})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T売上明細ファイルDataTable cln = ((T売上明細ファイルDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T売上明細ファイルDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column売上連番 = base.Columns["売上連番"];
                this.column本支店区分 = base.Columns["本支店区分"];
                this.column処理コード = base.Columns["処理コード"];
                this.column入力区分 = base.Columns["入力区分"];
                this.column処理番号 = base.Columns["処理番号"];
                this.columnエラーフラグ = base.Columns["エラーフラグ"];
                this.column受発注行数 = base.Columns["受発注行数"];
                this.column受注連番 = base.Columns["受注連番"];
                this.column出荷番号 = base.Columns["出荷番号"];
                this.column出荷連番 = base.Columns["出荷連番"];
                this.column発注番号 = base.Columns["発注番号"];
                this.column発注連番 = base.Columns["発注連番"];
                this.column売上伝票番号 = base.Columns["売上伝票番号"];
                this.column処理日 = base.Columns["処理日"];
                this.column売上日 = base.Columns["売上日"];
                this.column納入日 = base.Columns["納入日"];
                this.column受注日 = base.Columns["受注日"];
                this.column納期 = base.Columns["納期"];
                this.column発注納期 = base.Columns["発注納期"];
                this.column処理区 = base.Columns["処理区"];
                this.column売上区分コード = base.Columns["売上区分コード"];
                this.columnシステム区分 = base.Columns["システム区分"];
                this.column取引区分 = base.Columns["取引区分"];
                this.column請求月区分コード = base.Columns["請求月区分コード"];
                this.column得意先コード = base.Columns["得意先コード"];
                this.column得名 = base.Columns["得名"];
                this.column事業所コード = base.Columns["事業所コード"];
                this.columnランク = base.Columns["ランク"];
                this.column部課コード = base.Columns["部課コード"];
                this.column担当者コード = base.Columns["担当者コード"];
                this.column代理店コード = base.Columns["代理店コード"];
                this.column代名 = base.Columns["代名"];
                this.column納入先コード = base.Columns["納入先コード"];
                this.column納名 = base.Columns["納名"];
                this.column取引先コード = base.Columns["取引先コード"];
                this.column取引先名 = base.Columns["取引先名"];
                this.column請求先コード = base.Columns["請求先コード"];
                this.column売上切捨区分 = base.Columns["売上切捨区分"];
                this.column売上税区分 = base.Columns["売上税区分"];
                this.column伝票摘要 = base.Columns["伝票摘要"];
                this.column商品コード = base.Columns["商品コード"];
                this.column商名 = base.Columns["商名"];
                this.column規格 = base.Columns["規格"];
                this.column形式寸法 = base.Columns["形式寸法"];
                this.column材質 = base.Columns["材質"];
                this.column分類 = base.Columns["分類"];
                this.column在庫管理区分 = base.Columns["在庫管理区分"];
                this.column品種コード = base.Columns["品種コード"];
                this.columnメーカーコード = base.Columns["メーカーコード"];
                this.column入数 = base.Columns["入数"];
                this.column単位コード = base.Columns["単位コード"];
                this.column倉庫コード = base.Columns["倉庫コード"];
                this.columnケース数 = base.Columns["ケース数"];
                this.column数量 = base.Columns["数量"];
                this.column売上単価 = base.Columns["売上単価"];
                this.column売上金額 = base.Columns["売上金額"];
                this.column税抜売上金額 = base.Columns["税抜売上金額"];
                this.column原価単価 = base.Columns["原価単価"];
                this.column原価金額 = base.Columns["原価金額"];
                this.column粗利 = base.Columns["粗利"];
                this.column消費税 = base.Columns["消費税"];
                this.column税抜仕入金額 = base.Columns["税抜仕入金額"];
                this.column仕入消費税 = base.Columns["仕入消費税"];
                this.column売上返品値引理由区分 = base.Columns["売上返品値引理由区分"];
                this.column外内税区分 = base.Columns["外内税区分"];
                this.column消費税率 = base.Columns["消費税率"];
                this.column新消費税率 = base.Columns["新消費税率"];
                this.column新消費税適用 = base.Columns["新消費税適用"];
                this.column明細摘要 = base.Columns["明細摘要"];
                this.column受注番号 = base.Columns["受注番号"];
                this.column相手先注文番号 = base.Columns["相手先注文番号"];
                this.column自社受付番号 = base.Columns["自社受付番号"];
                this.column仕入伝票番号 = base.Columns["仕入伝票番号"];
                this.column仕入先コード = base.Columns["仕入先コード"];
                this.column仕名 = base.Columns["仕名"];
                this.column仕入分類 = base.Columns["仕入分類"];
                this.column仕入事業所コード = base.Columns["仕入事業所コード"];
                this.column仕入担当者コード = base.Columns["仕入担当者コード"];
                this.column仕入切捨区分 = base.Columns["仕入切捨区分"];
                this.column仕入税区分 = base.Columns["仕入税区分"];
                this.column入金番号 = base.Columns["入金番号"];
                this.columnチェック = base.Columns["チェック"];
                this.column入金チェック = base.Columns["入金チェック"];
                this.column回収摘要 = base.Columns["回収摘要"];
                this.column検収チェック = base.Columns["検収チェック"];
                this.column完了フラグ = base.Columns["完了フラグ"];
                this.columnWS_ID = base.Columns["WS_ID"];
                this.column発行済フラグ = base.Columns["発行済フラグ"];
                this.column受注更新フラグ = base.Columns["受注更新フラグ"];
                this.column出荷更新フラグ = base.Columns["出荷更新フラグ"];
                this.column得意先更新フラグ = base.Columns["得意先更新フラグ"];
                this.column商品更新フラグ = base.Columns["商品更新フラグ"];
                this.column商品倉庫更新フラグ = base.Columns["商品倉庫更新フラグ"];
                this.column商品取引更新フラグ = base.Columns["商品取引更新フラグ"];
                this.columnオペレーターコード = base.Columns["オペレーターコード"];
                this.column修正オペレーターコード = base.Columns["修正オペレーターコード"];
                this.column受注行 = base.Columns["受注行"];
                this.column処理月日 = base.Columns["処理月日"];
                this.column管理年月 = base.Columns["管理年月"];
                this.column一括消費税締日 = base.Columns["一括消費税締日"];
                this.column発行済INDEX = base.Columns["発行済INDEX"];
                this.column受注行番号 = base.Columns["受注行番号"];
                this.column売上行番号 = base.Columns["売上行番号"];
                this.column定価 = base.Columns["定価"];
                this.column納品掛率 = base.Columns["納品掛率"];
                this.column原価掛率 = base.Columns["原価掛率"];
                this.column発注有無区分 = base.Columns["発注有無区分"];
                this.column回答納期 = base.Columns["回答納期"];
                this.column在庫数 = base.Columns["在庫数"];
                this.column受注残数 = base.Columns["受注残数"];
                this.column発注残数 = base.Columns["発注残数"];
                this.column納品書発行フラグ = base.Columns["納品書発行フラグ"];
                this.column専用伝票発行フラグ = base.Columns["専用伝票発行フラグ"];
                this.column売上累計 = base.Columns["売上累計"];
                this.column受注番号受注残数 = base.Columns["受注番号受注残数"];
                this.column納品書発行日時 = base.Columns["納品書発行日時"];
                this.column取引先コード２ = base.Columns["取引先コード２"];
                this.column社名 = base.Columns["社名"];
                this.column店名 = base.Columns["店名"];
                this.column部名 = base.Columns["部名"];
                this.column発注区分 = base.Columns["発注区分"];
                this.column請求月 = base.Columns["請求月"];
                this.columnＥＯＳ区分 = base.Columns["ＥＯＳ区分"];
                this.column帳票区分 = base.Columns["帳票区分"];
                this.column発注単位 = base.Columns["発注単位"];
                this.columnＥＯＳ商品コード = base.Columns["ＥＯＳ商品コード"];
                this.columnＥＯＳ商品名 = base.Columns["ＥＯＳ商品名"];
                this.columnＥＯＳ規格 = base.Columns["ＥＯＳ規格"];
                this.column表示価格 = base.Columns["表示価格"];
                this.columnＥＯＳ棚番 = base.Columns["ＥＯＳ棚番"];
                this.columnＪＡＮコード = base.Columns["ＪＡＮコード"];
                this.columnメーカー品番 = base.Columns["メーカー品番"];
                this.column棚番 = base.Columns["棚番"];
                this.columnメーカー名 = base.Columns["メーカー名"];
                this.column店コード = base.Columns["店コード"];
                this.column部コード = base.Columns["部コード"];
                this.columnエラー区分 = base.Columns["エラー区分"];
                this.column更新ビット = base.Columns["更新ビット"];
                this.column商品番号 = base.Columns["商品番号"];
                this.column社コード = base.Columns["社コード"];
                this.column店コードＢ = base.Columns["店コードＢ"];
                this.column直送区分 = base.Columns["直送区分"];
                this.column客注区分 = base.Columns["客注区分"];
                this.column経費区分 = base.Columns["経費区分"];
                this.column返品区分 = base.Columns["返品区分"];
                this.column本部原価単価 = base.Columns["本部原価単価"];
                this.column本部原価金額 = base.Columns["本部原価金額"];
                this.column納入単価 = base.Columns["納入単価"];
                this.column店舗売価 = base.Columns["店舗売価"];
                this.column大分類コード = base.Columns["大分類コード"];
                this.column店舗備考 = base.Columns["店舗備考"];
                this.column仕入先備考 = base.Columns["仕入先備考"];
                this.column登録番号 = base.Columns["登録番号"];
                this.columnドラスタ発注番号 = base.Columns["ドラスタ発注番号"];
                this.column客注番号 = base.Columns["客注番号"];
                this.columnドラスタ区分 = base.Columns["ドラスタ区分"];
                this.column欠品理由 = base.Columns["欠品理由"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column売上連番 = new global::System.Data.DataColumn("売上連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上連番);
                this.column本支店区分 = new global::System.Data.DataColumn("本支店区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本支店区分);
                this.column処理コード = new global::System.Data.DataColumn("処理コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理コード);
                this.column入力区分 = new global::System.Data.DataColumn("入力区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入力区分);
                this.column処理番号 = new global::System.Data.DataColumn("処理番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理番号);
                this.columnエラーフラグ = new global::System.Data.DataColumn("エラーフラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnエラーフラグ);
                this.column受発注行数 = new global::System.Data.DataColumn("受発注行数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受発注行数);
                this.column受注連番 = new global::System.Data.DataColumn("受注連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注連番);
                this.column出荷番号 = new global::System.Data.DataColumn("出荷番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷番号);
                this.column出荷連番 = new global::System.Data.DataColumn("出荷連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷連番);
                this.column発注番号 = new global::System.Data.DataColumn("発注番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注番号);
                this.column発注連番 = new global::System.Data.DataColumn("発注連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注連番);
                this.column売上伝票番号 = new global::System.Data.DataColumn("売上伝票番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上伝票番号);
                this.column処理日 = new global::System.Data.DataColumn("処理日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理日);
                this.column売上日 = new global::System.Data.DataColumn("売上日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上日);
                this.column納入日 = new global::System.Data.DataColumn("納入日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納入日);
                this.column受注日 = new global::System.Data.DataColumn("受注日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注日);
                this.column納期 = new global::System.Data.DataColumn("納期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納期);
                this.column発注納期 = new global::System.Data.DataColumn("発注納期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注納期);
                this.column処理区 = new global::System.Data.DataColumn("処理区", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理区);
                this.column売上区分コード = new global::System.Data.DataColumn("売上区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上区分コード);
                this.columnシステム区分 = new global::System.Data.DataColumn("システム区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnシステム区分);
                this.column取引区分 = new global::System.Data.DataColumn("取引区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取引区分);
                this.column請求月区分コード = new global::System.Data.DataColumn("請求月区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column請求月区分コード);
                this.column得意先コード = new global::System.Data.DataColumn("得意先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column得意先コード);
                this.column得名 = new global::System.Data.DataColumn("得名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column得名);
                this.column事業所コード = new global::System.Data.DataColumn("事業所コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column事業所コード);
                this.columnランク = new global::System.Data.DataColumn("ランク", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnランク);
                this.column部課コード = new global::System.Data.DataColumn("部課コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部課コード);
                this.column担当者コード = new global::System.Data.DataColumn("担当者コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column担当者コード);
                this.column代理店コード = new global::System.Data.DataColumn("代理店コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column代理店コード);
                this.column代名 = new global::System.Data.DataColumn("代名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column代名);
                this.column納入先コード = new global::System.Data.DataColumn("納入先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納入先コード);
                this.column納名 = new global::System.Data.DataColumn("納名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納名);
                this.column取引先コード = new global::System.Data.DataColumn("取引先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取引先コード);
                this.column取引先名 = new global::System.Data.DataColumn("取引先名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取引先名);
                this.column請求先コード = new global::System.Data.DataColumn("請求先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column請求先コード);
                this.column売上切捨区分 = new global::System.Data.DataColumn("売上切捨区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上切捨区分);
                this.column売上税区分 = new global::System.Data.DataColumn("売上税区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上税区分);
                this.column伝票摘要 = new global::System.Data.DataColumn("伝票摘要", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column伝票摘要);
                this.column商品コード = new global::System.Data.DataColumn("商品コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品コード);
                this.column商名 = new global::System.Data.DataColumn("商名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商名);
                this.column規格 = new global::System.Data.DataColumn("規格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column規格);
                this.column形式寸法 = new global::System.Data.DataColumn("形式寸法", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column形式寸法);
                this.column材質 = new global::System.Data.DataColumn("材質", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材質);
                this.column分類 = new global::System.Data.DataColumn("分類", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分類);
                this.column在庫管理区分 = new global::System.Data.DataColumn("在庫管理区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column在庫管理区分);
                this.column品種コード = new global::System.Data.DataColumn("品種コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column品種コード);
                this.columnメーカーコード = new global::System.Data.DataColumn("メーカーコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnメーカーコード);
                this.column入数 = new global::System.Data.DataColumn("入数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入数);
                this.column単位コード = new global::System.Data.DataColumn("単位コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column単位コード);
                this.column倉庫コード = new global::System.Data.DataColumn("倉庫コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column倉庫コード);
                this.columnケース数 = new global::System.Data.DataColumn("ケース数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnケース数);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column売上単価 = new global::System.Data.DataColumn("売上単価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上単価);
                this.column売上金額 = new global::System.Data.DataColumn("売上金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上金額);
                this.column税抜売上金額 = new global::System.Data.DataColumn("税抜売上金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column税抜売上金額);
                this.column原価単価 = new global::System.Data.DataColumn("原価単価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column原価単価);
                this.column原価金額 = new global::System.Data.DataColumn("原価金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column原価金額);
                this.column粗利 = new global::System.Data.DataColumn("粗利", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column粗利);
                this.column消費税 = new global::System.Data.DataColumn("消費税", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column消費税);
                this.column税抜仕入金額 = new global::System.Data.DataColumn("税抜仕入金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column税抜仕入金額);
                this.column仕入消費税 = new global::System.Data.DataColumn("仕入消費税", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入消費税);
                this.column売上返品値引理由区分 = new global::System.Data.DataColumn("売上返品値引理由区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上返品値引理由区分);
                this.column外内税区分 = new global::System.Data.DataColumn("外内税区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column外内税区分);
                this.column消費税率 = new global::System.Data.DataColumn("消費税率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column消費税率);
                this.column新消費税率 = new global::System.Data.DataColumn("新消費税率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column新消費税率);
                this.column新消費税適用 = new global::System.Data.DataColumn("新消費税適用", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column新消費税適用);
                this.column明細摘要 = new global::System.Data.DataColumn("明細摘要", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column明細摘要);
                this.column受注番号 = new global::System.Data.DataColumn("受注番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注番号);
                this.column相手先注文番号 = new global::System.Data.DataColumn("相手先注文番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column相手先注文番号);
                this.column自社受付番号 = new global::System.Data.DataColumn("自社受付番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column自社受付番号);
                this.column仕入伝票番号 = new global::System.Data.DataColumn("仕入伝票番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入伝票番号);
                this.column仕入先コード = new global::System.Data.DataColumn("仕入先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入先コード);
                this.column仕名 = new global::System.Data.DataColumn("仕名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕名);
                this.column仕入分類 = new global::System.Data.DataColumn("仕入分類", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入分類);
                this.column仕入事業所コード = new global::System.Data.DataColumn("仕入事業所コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入事業所コード);
                this.column仕入担当者コード = new global::System.Data.DataColumn("仕入担当者コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入担当者コード);
                this.column仕入切捨区分 = new global::System.Data.DataColumn("仕入切捨区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入切捨区分);
                this.column仕入税区分 = new global::System.Data.DataColumn("仕入税区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入税区分);
                this.column入金番号 = new global::System.Data.DataColumn("入金番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入金番号);
                this.columnチェック = new global::System.Data.DataColumn("チェック", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnチェック);
                this.column入金チェック = new global::System.Data.DataColumn("入金チェック", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入金チェック);
                this.column回収摘要 = new global::System.Data.DataColumn("回収摘要", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column回収摘要);
                this.column検収チェック = new global::System.Data.DataColumn("検収チェック", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column検収チェック);
                this.column完了フラグ = new global::System.Data.DataColumn("完了フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column完了フラグ);
                this.columnWS_ID = new global::System.Data.DataColumn("WS_ID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWS_ID);
                this.column発行済フラグ = new global::System.Data.DataColumn("発行済フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発行済フラグ);
                this.column受注更新フラグ = new global::System.Data.DataColumn("受注更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注更新フラグ);
                this.column出荷更新フラグ = new global::System.Data.DataColumn("出荷更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷更新フラグ);
                this.column得意先更新フラグ = new global::System.Data.DataColumn("得意先更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column得意先更新フラグ);
                this.column商品更新フラグ = new global::System.Data.DataColumn("商品更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品更新フラグ);
                this.column商品倉庫更新フラグ = new global::System.Data.DataColumn("商品倉庫更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品倉庫更新フラグ);
                this.column商品取引更新フラグ = new global::System.Data.DataColumn("商品取引更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品取引更新フラグ);
                this.columnオペレーターコード = new global::System.Data.DataColumn("オペレーターコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnオペレーターコード);
                this.column修正オペレーターコード = new global::System.Data.DataColumn("修正オペレーターコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column修正オペレーターコード);
                this.column受注行 = new global::System.Data.DataColumn("受注行", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注行);
                this.column処理月日 = new global::System.Data.DataColumn("処理月日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理月日);
                this.column管理年月 = new global::System.Data.DataColumn("管理年月", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column管理年月);
                this.column一括消費税締日 = new global::System.Data.DataColumn("一括消費税締日", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column一括消費税締日);
                this.column発行済INDEX = new global::System.Data.DataColumn("発行済INDEX", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発行済INDEX);
                this.column受注行番号 = new global::System.Data.DataColumn("受注行番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注行番号);
                this.column売上行番号 = new global::System.Data.DataColumn("売上行番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上行番号);
                this.column定価 = new global::System.Data.DataColumn("定価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column定価);
                this.column納品掛率 = new global::System.Data.DataColumn("納品掛率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納品掛率);
                this.column原価掛率 = new global::System.Data.DataColumn("原価掛率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column原価掛率);
                this.column発注有無区分 = new global::System.Data.DataColumn("発注有無区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注有無区分);
                this.column回答納期 = new global::System.Data.DataColumn("回答納期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column回答納期);
                this.column在庫数 = new global::System.Data.DataColumn("在庫数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column在庫数);
                this.column受注残数 = new global::System.Data.DataColumn("受注残数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注残数);
                this.column発注残数 = new global::System.Data.DataColumn("発注残数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注残数);
                this.column納品書発行フラグ = new global::System.Data.DataColumn("納品書発行フラグ", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納品書発行フラグ);
                this.column専用伝票発行フラグ = new global::System.Data.DataColumn("専用伝票発行フラグ", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column専用伝票発行フラグ);
                this.column売上累計 = new global::System.Data.DataColumn("売上累計", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上累計);
                this.column受注番号受注残数 = new global::System.Data.DataColumn("受注番号受注残数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注番号受注残数);
                this.column納品書発行日時 = new global::System.Data.DataColumn("納品書発行日時", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納品書発行日時);
                this.column取引先コード２ = new global::System.Data.DataColumn("取引先コード２", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取引先コード２);
                this.column社名 = new global::System.Data.DataColumn("社名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column社名);
                this.column店名 = new global::System.Data.DataColumn("店名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column店名);
                this.column部名 = new global::System.Data.DataColumn("部名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部名);
                this.column発注区分 = new global::System.Data.DataColumn("発注区分", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注区分);
                this.column請求月 = new global::System.Data.DataColumn("請求月", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column請求月);
                this.columnＥＯＳ区分 = new global::System.Data.DataColumn("ＥＯＳ区分", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＥＯＳ区分);
                this.column帳票区分 = new global::System.Data.DataColumn("帳票区分", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column帳票区分);
                this.column発注単位 = new global::System.Data.DataColumn("発注単位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注単位);
                this.columnＥＯＳ商品コード = new global::System.Data.DataColumn("ＥＯＳ商品コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＥＯＳ商品コード);
                this.columnＥＯＳ商品名 = new global::System.Data.DataColumn("ＥＯＳ商品名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＥＯＳ商品名);
                this.columnＥＯＳ規格 = new global::System.Data.DataColumn("ＥＯＳ規格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＥＯＳ規格);
                this.column表示価格 = new global::System.Data.DataColumn("表示価格", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column表示価格);
                this.columnＥＯＳ棚番 = new global::System.Data.DataColumn("ＥＯＳ棚番", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＥＯＳ棚番);
                this.columnＪＡＮコード = new global::System.Data.DataColumn("ＪＡＮコード", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＪＡＮコード);
                this.columnメーカー品番 = new global::System.Data.DataColumn("メーカー品番", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnメーカー品番);
                this.column棚番 = new global::System.Data.DataColumn("棚番", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column棚番);
                this.columnメーカー名 = new global::System.Data.DataColumn("メーカー名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnメーカー名);
                this.column店コード = new global::System.Data.DataColumn("店コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column店コード);
                this.column部コード = new global::System.Data.DataColumn("部コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部コード);
                this.columnエラー区分 = new global::System.Data.DataColumn("エラー区分", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnエラー区分);
                this.column更新ビット = new global::System.Data.DataColumn("更新ビット", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column更新ビット);
                this.column商品番号 = new global::System.Data.DataColumn("商品番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品番号);
                this.column社コード = new global::System.Data.DataColumn("社コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column社コード);
                this.column店コードＢ = new global::System.Data.DataColumn("店コードＢ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column店コードＢ);
                this.column直送区分 = new global::System.Data.DataColumn("直送区分", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column直送区分);
                this.column客注区分 = new global::System.Data.DataColumn("客注区分", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column客注区分);
                this.column経費区分 = new global::System.Data.DataColumn("経費区分", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column経費区分);
                this.column返品区分 = new global::System.Data.DataColumn("返品区分", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column返品区分);
                this.column本部原価単価 = new global::System.Data.DataColumn("本部原価単価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本部原価単価);
                this.column本部原価金額 = new global::System.Data.DataColumn("本部原価金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本部原価金額);
                this.column納入単価 = new global::System.Data.DataColumn("納入単価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納入単価);
                this.column店舗売価 = new global::System.Data.DataColumn("店舗売価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column店舗売価);
                this.column大分類コード = new global::System.Data.DataColumn("大分類コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column大分類コード);
                this.column店舗備考 = new global::System.Data.DataColumn("店舗備考", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column店舗備考);
                this.column仕入先備考 = new global::System.Data.DataColumn("仕入先備考", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入先備考);
                this.column登録番号 = new global::System.Data.DataColumn("登録番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登録番号);
                this.columnドラスタ発注番号 = new global::System.Data.DataColumn("ドラスタ発注番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnドラスタ発注番号);
                this.column客注番号 = new global::System.Data.DataColumn("客注番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column客注番号);
                this.columnドラスタ区分 = new global::System.Data.DataColumn("ドラスタ区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnドラスタ区分);
                this.column欠品理由 = new global::System.Data.DataColumn("欠品理由", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column欠品理由);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column売上連番}, true));
                this.column売上連番.AutoIncrement = true;
                this.column売上連番.AutoIncrementSeed = -1;
                this.column売上連番.AutoIncrementStep = -1;
                this.column売上連番.AllowDBNull = false;
                this.column売上連番.ReadOnly = true;
                this.column売上連番.Unique = true;
                this.columnエラーフラグ.AllowDBNull = false;
                this.columnシステム区分.AllowDBNull = false;
                this.column得意先コード.MaxLength = 8;
                this.column得名.MaxLength = 32;
                this.column事業所コード.MaxLength = 8;
                this.column部課コード.MaxLength = 4;
                this.column担当者コード.MaxLength = 6;
                this.column代理店コード.MaxLength = 8;
                this.column代名.MaxLength = 32;
                this.column納入先コード.MaxLength = 8;
                this.column納名.MaxLength = 32;
                this.column取引先コード.MaxLength = 8;
                this.column取引先名.MaxLength = 32;
                this.column請求先コード.MaxLength = 8;
                this.column伝票摘要.MaxLength = 40;
                this.column商品コード.MaxLength = 13;
                this.column商名.MaxLength = 40;
                this.column規格.MaxLength = 24;
                this.column形式寸法.MaxLength = 40;
                this.column材質.MaxLength = 40;
                this.column在庫管理区分.AllowDBNull = false;
                this.column品種コード.MaxLength = 6;
                this.columnメーカーコード.MaxLength = 8;
                this.column倉庫コード.MaxLength = 6;
                this.column明細摘要.MaxLength = 40;
                this.column相手先注文番号.MaxLength = 20;
                this.column自社受付番号.MaxLength = 20;
                this.column仕入先コード.MaxLength = 8;
                this.column仕名.MaxLength = 32;
                this.column仕入事業所コード.MaxLength = 8;
                this.column仕入担当者コード.MaxLength = 6;
                this.columnチェック.AllowDBNull = false;
                this.column入金チェック.AllowDBNull = false;
                this.column回収摘要.MaxLength = 40;
                this.column検収チェック.AllowDBNull = false;
                this.column完了フラグ.AllowDBNull = false;
                this.column発行済フラグ.AllowDBNull = false;
                this.column受注更新フラグ.AllowDBNull = false;
                this.column出荷更新フラグ.AllowDBNull = false;
                this.column得意先更新フラグ.AllowDBNull = false;
                this.column商品更新フラグ.AllowDBNull = false;
                this.column商品倉庫更新フラグ.AllowDBNull = false;
                this.column商品取引更新フラグ.AllowDBNull = false;
                this.columnオペレーターコード.MaxLength = 20;
                this.column修正オペレーターコード.MaxLength = 20;
                this.column社名.MaxLength = 20;
                this.column店名.MaxLength = 10;
                this.column部名.MaxLength = 10;
                this.columnＥＯＳ区分.MaxLength = 2;
                this.column発注単位.MaxLength = 2;
                this.columnＥＯＳ商品コード.MaxLength = 13;
                this.columnＥＯＳ商品名.MaxLength = 20;
                this.columnＥＯＳ規格.MaxLength = 9;
                this.columnメーカー品番.MaxLength = 20;
                this.column棚番.MaxLength = 5;
                this.columnメーカー名.MaxLength = 32;
                this.columnエラー区分.MaxLength = 10;
                this.column商品番号.MaxLength = 15;
                this.column大分類コード.MaxLength = 10;
                this.column店舗備考.MaxLength = 100;
                this.column仕入先備考.MaxLength = 100;
                this.column客注番号.MaxLength = 11;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上明細ファイルRow NewT売上明細ファイルRow() {
                return ((T売上明細ファイルRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T売上明細ファイルRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T売上明細ファイルRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T売上明細ファイルRowChanged != null)) {
                    this.T売上明細ファイルRowChanged(this, new T売上明細ファイルRowChangeEvent(((T売上明細ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T売上明細ファイルRowChanging != null)) {
                    this.T売上明細ファイルRowChanging(this, new T売上明細ファイルRowChangeEvent(((T売上明細ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T売上明細ファイルRowDeleted != null)) {
                    this.T売上明細ファイルRowDeleted(this, new T売上明細ファイルRowChangeEvent(((T売上明細ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T売上明細ファイルRowDeleting != null)) {
                    this.T売上明細ファイルRowDeleting(this, new T売上明細ファイルRowChangeEvent(((T売上明細ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT売上明細ファイルRow(T売上明細ファイルRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                売上計上DataSet ds = new 売上計上DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T売上明細ファイルDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T処理履歴テーブルDataTable : global::System.Data.TypedTableBase<T処理履歴テーブルRow> {
            
            private global::System.Data.DataColumn columnカウント;
            
            private global::System.Data.DataColumn column本支店区分;
            
            private global::System.Data.DataColumn column処理コード;
            
            private global::System.Data.DataColumn column処理名;
            
            private global::System.Data.DataColumn column入力区分;
            
            private global::System.Data.DataColumn column事業所コード;
            
            private global::System.Data.DataColumn column処理番号;
            
            private global::System.Data.DataColumn column売上仕入区分コード;
            
            private global::System.Data.DataColumn columnシステム区分;
            
            private global::System.Data.DataColumn column売上伝票番号;
            
            private global::System.Data.DataColumn column受注番号;
            
            private global::System.Data.DataColumn column出荷番号;
            
            private global::System.Data.DataColumn column発注番号;
            
            private global::System.Data.DataColumn column仕入伝票番号;
            
            private global::System.Data.DataColumn column入荷番号;
            
            private global::System.Data.DataColumn column入金番号;
            
            private global::System.Data.DataColumn column支払番号;
            
            private global::System.Data.DataColumn column移動番号;
            
            private global::System.Data.DataColumn column棚卸番号;
            
            private global::System.Data.DataColumn column処理日;
            
            private global::System.Data.DataColumn column更新フラグ;
            
            private global::System.Data.DataColumn column更新INDEX;
            
            private global::System.Data.DataColumn column更新処理日;
            
            private global::System.Data.DataColumn columnオペレーターコード;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルDataTable() {
                this.TableName = "T処理履歴テーブル";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T処理履歴テーブルDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T処理履歴テーブルDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn カウントColumn {
                get {
                    return this.columnカウント;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 本支店区分Column {
                get {
                    return this.column本支店区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理コードColumn {
                get {
                    return this.column処理コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理名Column {
                get {
                    return this.column処理名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入力区分Column {
                get {
                    return this.column入力区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 事業所コードColumn {
                get {
                    return this.column事業所コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理番号Column {
                get {
                    return this.column処理番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上仕入区分コードColumn {
                get {
                    return this.column売上仕入区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn システム区分Column {
                get {
                    return this.columnシステム区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上伝票番号Column {
                get {
                    return this.column売上伝票番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注番号Column {
                get {
                    return this.column受注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出荷番号Column {
                get {
                    return this.column出荷番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注番号Column {
                get {
                    return this.column発注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入伝票番号Column {
                get {
                    return this.column仕入伝票番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入荷番号Column {
                get {
                    return this.column入荷番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入金番号Column {
                get {
                    return this.column入金番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払番号Column {
                get {
                    return this.column支払番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 移動番号Column {
                get {
                    return this.column移動番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 棚卸番号Column {
                get {
                    return this.column棚卸番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理日Column {
                get {
                    return this.column処理日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 更新フラグColumn {
                get {
                    return this.column更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 更新INDEXColumn {
                get {
                    return this.column更新INDEX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 更新処理日Column {
                get {
                    return this.column更新処理日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn オペレーターコードColumn {
                get {
                    return this.columnオペレーターコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルRow this[int index] {
                get {
                    return ((T処理履歴テーブルRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T処理履歴テーブルRowChangeEventHandler T処理履歴テーブルRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T処理履歴テーブルRowChangeEventHandler T処理履歴テーブルRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T処理履歴テーブルRowChangeEventHandler T処理履歴テーブルRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T処理履歴テーブルRowChangeEventHandler T処理履歴テーブルRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT処理履歴テーブルRow(T処理履歴テーブルRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルRow AddT処理履歴テーブルRow(
                        short 本支店区分, 
                        int 処理コード, 
                        string 処理名, 
                        short 入力区分, 
                        string 事業所コード, 
                        int 処理番号, 
                        short 売上仕入区分コード, 
                        short システム区分, 
                        int 売上伝票番号, 
                        int 受注番号, 
                        int 出荷番号, 
                        int 発注番号, 
                        int 仕入伝票番号, 
                        int 入荷番号, 
                        int 入金番号, 
                        int 支払番号, 
                        int 移動番号, 
                        int 棚卸番号, 
                        System.DateTime 処理日, 
                        bool 更新フラグ, 
                        int 更新INDEX, 
                        System.DateTime 更新処理日, 
                        string オペレーターコード) {
                T処理履歴テーブルRow rowT処理履歴テーブルRow = ((T処理履歴テーブルRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        本支店区分,
                        処理コード,
                        処理名,
                        入力区分,
                        事業所コード,
                        処理番号,
                        売上仕入区分コード,
                        システム区分,
                        売上伝票番号,
                        受注番号,
                        出荷番号,
                        発注番号,
                        仕入伝票番号,
                        入荷番号,
                        入金番号,
                        支払番号,
                        移動番号,
                        棚卸番号,
                        処理日,
                        更新フラグ,
                        更新INDEX,
                        更新処理日,
                        オペレーターコード};
                rowT処理履歴テーブルRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT処理履歴テーブルRow);
                return rowT処理履歴テーブルRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルRow FindByカウント(int カウント) {
                return ((T処理履歴テーブルRow)(this.Rows.Find(new object[] {
                            カウント})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T処理履歴テーブルDataTable cln = ((T処理履歴テーブルDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T処理履歴テーブルDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnカウント = base.Columns["カウント"];
                this.column本支店区分 = base.Columns["本支店区分"];
                this.column処理コード = base.Columns["処理コード"];
                this.column処理名 = base.Columns["処理名"];
                this.column入力区分 = base.Columns["入力区分"];
                this.column事業所コード = base.Columns["事業所コード"];
                this.column処理番号 = base.Columns["処理番号"];
                this.column売上仕入区分コード = base.Columns["売上仕入区分コード"];
                this.columnシステム区分 = base.Columns["システム区分"];
                this.column売上伝票番号 = base.Columns["売上伝票番号"];
                this.column受注番号 = base.Columns["受注番号"];
                this.column出荷番号 = base.Columns["出荷番号"];
                this.column発注番号 = base.Columns["発注番号"];
                this.column仕入伝票番号 = base.Columns["仕入伝票番号"];
                this.column入荷番号 = base.Columns["入荷番号"];
                this.column入金番号 = base.Columns["入金番号"];
                this.column支払番号 = base.Columns["支払番号"];
                this.column移動番号 = base.Columns["移動番号"];
                this.column棚卸番号 = base.Columns["棚卸番号"];
                this.column処理日 = base.Columns["処理日"];
                this.column更新フラグ = base.Columns["更新フラグ"];
                this.column更新INDEX = base.Columns["更新INDEX"];
                this.column更新処理日 = base.Columns["更新処理日"];
                this.columnオペレーターコード = base.Columns["オペレーターコード"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnカウント = new global::System.Data.DataColumn("カウント", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnカウント);
                this.column本支店区分 = new global::System.Data.DataColumn("本支店区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本支店区分);
                this.column処理コード = new global::System.Data.DataColumn("処理コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理コード);
                this.column処理名 = new global::System.Data.DataColumn("処理名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理名);
                this.column入力区分 = new global::System.Data.DataColumn("入力区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入力区分);
                this.column事業所コード = new global::System.Data.DataColumn("事業所コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column事業所コード);
                this.column処理番号 = new global::System.Data.DataColumn("処理番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理番号);
                this.column売上仕入区分コード = new global::System.Data.DataColumn("売上仕入区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上仕入区分コード);
                this.columnシステム区分 = new global::System.Data.DataColumn("システム区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnシステム区分);
                this.column売上伝票番号 = new global::System.Data.DataColumn("売上伝票番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上伝票番号);
                this.column受注番号 = new global::System.Data.DataColumn("受注番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注番号);
                this.column出荷番号 = new global::System.Data.DataColumn("出荷番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷番号);
                this.column発注番号 = new global::System.Data.DataColumn("発注番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注番号);
                this.column仕入伝票番号 = new global::System.Data.DataColumn("仕入伝票番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入伝票番号);
                this.column入荷番号 = new global::System.Data.DataColumn("入荷番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入荷番号);
                this.column入金番号 = new global::System.Data.DataColumn("入金番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入金番号);
                this.column支払番号 = new global::System.Data.DataColumn("支払番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払番号);
                this.column移動番号 = new global::System.Data.DataColumn("移動番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column移動番号);
                this.column棚卸番号 = new global::System.Data.DataColumn("棚卸番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column棚卸番号);
                this.column処理日 = new global::System.Data.DataColumn("処理日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理日);
                this.column更新フラグ = new global::System.Data.DataColumn("更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column更新フラグ);
                this.column更新INDEX = new global::System.Data.DataColumn("更新INDEX", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column更新INDEX);
                this.column更新処理日 = new global::System.Data.DataColumn("更新処理日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column更新処理日);
                this.columnオペレーターコード = new global::System.Data.DataColumn("オペレーターコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnオペレーターコード);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnカウント}, true));
                this.columnカウント.AutoIncrement = true;
                this.columnカウント.AutoIncrementSeed = -1;
                this.columnカウント.AutoIncrementStep = -1;
                this.columnカウント.AllowDBNull = false;
                this.columnカウント.ReadOnly = true;
                this.columnカウント.Unique = true;
                this.column処理名.MaxLength = 20;
                this.column事業所コード.MaxLength = 8;
                this.column更新フラグ.AllowDBNull = false;
                this.column更新INDEX.AllowDBNull = false;
                this.columnオペレーターコード.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルRow NewT処理履歴テーブルRow() {
                return ((T処理履歴テーブルRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T処理履歴テーブルRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T処理履歴テーブルRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T処理履歴テーブルRowChanged != null)) {
                    this.T処理履歴テーブルRowChanged(this, new T処理履歴テーブルRowChangeEvent(((T処理履歴テーブルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T処理履歴テーブルRowChanging != null)) {
                    this.T処理履歴テーブルRowChanging(this, new T処理履歴テーブルRowChangeEvent(((T処理履歴テーブルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T処理履歴テーブルRowDeleted != null)) {
                    this.T処理履歴テーブルRowDeleted(this, new T処理履歴テーブルRowChangeEvent(((T処理履歴テーブルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T処理履歴テーブルRowDeleting != null)) {
                    this.T処理履歴テーブルRowDeleting(this, new T処理履歴テーブルRowChangeEvent(((T処理履歴テーブルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT処理履歴テーブルRow(T処理履歴テーブルRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                売上計上DataSet ds = new 売上計上DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T処理履歴テーブルDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T売上修正戻ファイルRow : global::System.Data.DataRow {
            
            private T売上修正戻ファイルDataTable tableT売上修正戻ファイル;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T売上修正戻ファイルRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT売上修正戻ファイル = ((T売上修正戻ファイルDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 売上修正連番 {
                get {
                    return ((int)(this[this.tableT売上修正戻ファイル.売上修正連番Column]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.売上修正連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 修正処理年月日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上修正戻ファイル.修正処理年月日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'修正処理年月日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.修正処理年月日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 本支店区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.本支店区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'本支店区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.本支店区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理コード {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.処理コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'処理コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.処理コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 入力区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.入力区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'入力区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.入力区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.処理番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'処理番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.処理番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool エラーフラグ {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.エラーフラグColumn]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.エラーフラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受発注行数 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.受発注行数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'受発注行数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.受発注行数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受注連番 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.受注連番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'受注連番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.受注連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 出荷番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.出荷番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'出荷番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.出荷番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 出荷連番 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.出荷連番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'出荷連番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.出荷連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.発注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'発注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.発注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注連番 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.発注連番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'発注連番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.発注連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 売上伝票番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.売上伝票番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'売上伝票番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.売上伝票番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 処理日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上修正戻ファイル.処理日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'処理日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.処理日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 売上日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上修正戻ファイル.売上日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'売上日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.売上日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 納入日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上修正戻ファイル.納入日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'納入日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.納入日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 受注日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上修正戻ファイル.受注日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'受注日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.受注日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 納期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上修正戻ファイル.納期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'納期\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.納期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 発注納期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上修正戻ファイル.発注納期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'発注納期\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.発注納期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 処理区 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.処理区Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'処理区\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.処理区Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上区分コード {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.売上区分コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'売上区分コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.売上区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short システム区分 {
                get {
                    return ((short)(this[this.tableT売上修正戻ファイル.システム区分Column]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.システム区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 取引区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.取引区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'取引区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.取引区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 請求月区分コード {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.請求月区分コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'請求月区分コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.請求月区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 得意先コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.得意先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'得意先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.得意先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 得名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.得名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'得名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.得名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 事業所コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.事業所コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'事業所コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.事業所コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ランク {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.ランクColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'ランク\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.ランクColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 部課コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.部課コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'部課コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.部課コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 担当者コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.担当者コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'担当者コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.担当者コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 代理店コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.代理店コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'代理店コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.代理店コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 代名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.代名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'代名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.代名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 納入先コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.納入先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'納入先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.納入先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 納名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.納名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'納名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.納名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 取引先コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.取引先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'取引先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.取引先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 取引先名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.取引先名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'取引先名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.取引先名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 請求先コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.請求先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'請求先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.請求先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上切捨区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.売上切捨区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'売上切捨区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.売上切捨区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上税区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.売上税区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'売上税区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.売上税区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 伝票摘要 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.伝票摘要Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'伝票摘要\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.伝票摘要Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 商品コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.商品コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'商品コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.商品コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 商名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.商名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'商名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.商名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 規格 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.規格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'規格\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.規格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 形式寸法 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.形式寸法Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'形式寸法\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.形式寸法Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 材質 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.材質Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'材質\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.材質Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 分類 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.分類Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'分類\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.分類Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 在庫管理区分 {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.在庫管理区分Column]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.在庫管理区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 品種コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.品種コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'品種コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.品種コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string メーカーコード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.メーカーコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'メーカーコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.メーカーコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 入数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.入数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'入数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.入数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 単位コード {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.単位コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'単位コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.単位コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 倉庫コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.倉庫コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'倉庫コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.倉庫コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ケース数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.ケース数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'ケース数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.ケース数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 数量 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'数量\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 売上単価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.売上単価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'売上単価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.売上単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 売上金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.売上金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'売上金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.売上金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 税抜売上金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.税抜売上金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'税抜売上金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.税抜売上金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 原価単価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.原価単価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'原価単価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.原価単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 原価金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.原価金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'原価金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.原価金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 粗利 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.粗利Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'粗利\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.粗利Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 消費税 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.消費税Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'消費税\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.消費税Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 税抜仕入金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.税抜仕入金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'税抜仕入金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.税抜仕入金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 仕入消費税 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.仕入消費税Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'仕入消費税\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.仕入消費税Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上返品値引理由区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.売上返品値引理由区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'売上返品値引理由区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.売上返品値引理由区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 外内税区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.外内税区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'外内税区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.外内税区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 消費税率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.消費税率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'消費税率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.消費税率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 新消費税率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.新消費税率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'新消費税率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.新消費税率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 新消費税適用 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上修正戻ファイル.新消費税適用Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'新消費税適用\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.新消費税適用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 明細摘要 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.明細摘要Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'明細摘要\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.明細摘要Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受注番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.受注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'受注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.受注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 相手先注文番号 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.相手先注文番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'相手先注文番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.相手先注文番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 自社受付番号 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.自社受付番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'自社受付番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.自社受付番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 仕入伝票番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.仕入伝票番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'仕入伝票番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.仕入伝票番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕入先コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.仕入先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'仕入先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.仕入先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.仕名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'仕名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.仕名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入分類 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.仕入分類Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'仕入分類\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.仕入分類Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕入事業所コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.仕入事業所コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'仕入事業所コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.仕入事業所コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕入担当者コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.仕入担当者コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'仕入担当者コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.仕入担当者コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入切捨区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.仕入切捨区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'仕入切捨区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.仕入切捨区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入税区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.仕入税区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'仕入税区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.仕入税区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 入金番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.入金番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'入金番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.入金番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool チェック {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.チェックColumn]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.チェックColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 入金チェック {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.入金チェックColumn]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.入金チェックColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 回収摘要 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.回収摘要Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'回収摘要\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.回収摘要Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 検収チェック {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.検収チェックColumn]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.検収チェックColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 完了フラグ {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.完了フラグColumn]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.完了フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short WS_ID {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.WS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'WS_ID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.WS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 発行済フラグ {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.発行済フラグColumn]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.発行済フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 受注更新フラグ {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.受注更新フラグColumn]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.受注更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 出荷更新フラグ {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.出荷更新フラグColumn]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.出荷更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 得意先更新フラグ {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.得意先更新フラグColumn]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.得意先更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 商品更新フラグ {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.商品更新フラグColumn]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.商品更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 商品倉庫更新フラグ {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.商品倉庫更新フラグColumn]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.商品倉庫更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 商品取引更新フラグ {
                get {
                    return ((bool)(this[this.tableT売上修正戻ファイル.商品取引更新フラグColumn]));
                }
                set {
                    this[this.tableT売上修正戻ファイル.商品取引更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string オペレーターコード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.オペレーターコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'オペレーターコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.オペレーターコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 修正オペレーターコード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.修正オペレーターコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'修正オペレーターコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.修正オペレーターコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受注行 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.受注行Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'受注行\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.受注行Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 処理月日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上修正戻ファイル.処理月日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'処理月日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.処理月日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 管理年月 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.管理年月Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'管理年月\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.管理年月Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受注行番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.受注行番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'受注行番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.受注行番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 売上行番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.売上行番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'売上行番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.売上行番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 定価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.定価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'定価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.定価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 納品掛率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.納品掛率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'納品掛率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.納品掛率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 原価掛率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.原価掛率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'原価掛率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.原価掛率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 発注有無区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.発注有無区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'発注有無区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.発注有無区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 回答納期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上修正戻ファイル.回答納期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'回答納期\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.回答納期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 在庫数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.在庫数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'在庫数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.在庫数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 受注残数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.受注残数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'受注残数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.受注残数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 発注残数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.発注残数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'発注残数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.発注残数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 納品書発行フラグ {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.納品書発行フラグColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'納品書発行フラグ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.納品書発行フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 専用伝票発行フラグ {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.専用伝票発行フラグColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'専用伝票発行フラグ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.専用伝票発行フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 売上累計 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.売上累計Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'売上累計\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.売上累計Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 受注番号受注残数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.受注番号受注残数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'受注番号受注残数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.受注番号受注残数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 取引先コード２ {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.取引先コード２Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'取引先コード２\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.取引先コード２Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 社名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.社名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'社名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.社名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 店名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.店名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'店名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.店名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 部名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.部名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'部名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.部名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注区分 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.発注区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'発注区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.発注区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 請求月 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.請求月Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'請求月\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.請求月Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ＥＯＳ区分 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.ＥＯＳ区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'ＥＯＳ区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.ＥＯＳ区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 帳票区分 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.帳票区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'帳票区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.帳票区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 発注単位 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.発注単位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'発注単位\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.発注単位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ＥＯＳ商品コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.ＥＯＳ商品コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'ＥＯＳ商品コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.ＥＯＳ商品コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ＥＯＳ商品名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.ＥＯＳ商品名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'ＥＯＳ商品名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.ＥＯＳ商品名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ＥＯＳ規格 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.ＥＯＳ規格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'ＥＯＳ規格\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.ＥＯＳ規格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 表示価格 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.表示価格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'表示価格\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.表示価格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ＥＯＳ棚番 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.ＥＯＳ棚番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'ＥＯＳ棚番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.ＥＯＳ棚番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ＪＡＮコード {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.ＪＡＮコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'ＪＡＮコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.ＪＡＮコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string メーカー品番 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.メーカー品番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'メーカー品番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.メーカー品番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 棚番 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.棚番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'棚番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.棚番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string メーカー名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.メーカー名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'メーカー名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.メーカー名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 店コード {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.店コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'店コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.店コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 部コード {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.部コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'部コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.部コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string エラー区分 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.エラー区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'エラー区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.エラー区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 更新ビット {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.更新ビットColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'更新ビット\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.更新ビットColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 商品番号 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.商品番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'商品番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.商品番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 社コード {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.社コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'社コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.社コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 店コードＢ {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.店コードＢColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'店コードＢ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.店コードＢColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 直送区分 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.直送区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'直送区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.直送区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 客注区分 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.客注区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'客注区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.客注区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 経費区分 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.経費区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'経費区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.経費区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 返品区分 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.返品区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'返品区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.返品区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 本部原価単価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.本部原価単価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'本部原価単価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.本部原価単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 本部原価金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.本部原価金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'本部原価金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.本部原価金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 納入単価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.納入単価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'納入単価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.納入単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 店舗売価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上修正戻ファイル.店舗売価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'店舗売価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.店舗売価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 大分類コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.大分類コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'大分類コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.大分類コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 店舗備考 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.店舗備考Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'店舗備考\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.店舗備考Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕入先備考 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.仕入先備考Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'仕入先備考\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.仕入先備考Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 登録番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.登録番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'登録番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.登録番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ドラスタ発注番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上修正戻ファイル.ドラスタ発注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'ドラスタ発注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.ドラスタ発注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 客注番号 {
                get {
                    try {
                        return ((string)(this[this.tableT売上修正戻ファイル.客注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'客注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.客注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ドラスタ区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.ドラスタ区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'ドラスタ区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.ドラスタ区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 欠品理由 {
                get {
                    try {
                        return ((short)(this[this.tableT売上修正戻ファイル.欠品理由Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上修正戻ファイル\' にある列 \'欠品理由\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上修正戻ファイル.欠品理由Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is修正処理年月日Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.修正処理年月日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set修正処理年月日Null() {
                this[this.tableT売上修正戻ファイル.修正処理年月日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is本支店区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.本支店区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set本支店区分Null() {
                this[this.tableT売上修正戻ファイル.本支店区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.処理コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理コードNull() {
                this[this.tableT売上修正戻ファイル.処理コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入力区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.入力区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入力区分Null() {
                this[this.tableT売上修正戻ファイル.入力区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.処理番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理番号Null() {
                this[this.tableT売上修正戻ファイル.処理番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受発注行数Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.受発注行数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受発注行数Null() {
                this[this.tableT売上修正戻ファイル.受発注行数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注連番Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.受注連番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注連番Null() {
                this[this.tableT売上修正戻ファイル.受注連番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出荷番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.出荷番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出荷番号Null() {
                this[this.tableT売上修正戻ファイル.出荷番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出荷連番Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.出荷連番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出荷連番Null() {
                this[this.tableT売上修正戻ファイル.出荷連番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.発注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注番号Null() {
                this[this.tableT売上修正戻ファイル.発注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注連番Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.発注連番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注連番Null() {
                this[this.tableT売上修正戻ファイル.発注連番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上伝票番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.売上伝票番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上伝票番号Null() {
                this[this.tableT売上修正戻ファイル.売上伝票番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理日Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.処理日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理日Null() {
                this[this.tableT売上修正戻ファイル.処理日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上日Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.売上日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上日Null() {
                this[this.tableT売上修正戻ファイル.売上日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納入日Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.納入日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納入日Null() {
                this[this.tableT売上修正戻ファイル.納入日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注日Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.受注日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注日Null() {
                this[this.tableT売上修正戻ファイル.受注日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納期Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.納期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納期Null() {
                this[this.tableT売上修正戻ファイル.納期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注納期Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.発注納期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注納期Null() {
                this[this.tableT売上修正戻ファイル.発注納期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理区Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.処理区Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理区Null() {
                this[this.tableT売上修正戻ファイル.処理区Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上区分コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.売上区分コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上区分コードNull() {
                this[this.tableT売上修正戻ファイル.売上区分コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取引区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.取引区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取引区分Null() {
                this[this.tableT売上修正戻ファイル.取引区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is請求月区分コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.請求月区分コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set請求月区分コードNull() {
                this[this.tableT売上修正戻ファイル.請求月区分コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is得意先コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.得意先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set得意先コードNull() {
                this[this.tableT売上修正戻ファイル.得意先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is得名Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.得名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set得名Null() {
                this[this.tableT売上修正戻ファイル.得名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is事業所コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.事業所コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set事業所コードNull() {
                this[this.tableT売上修正戻ファイル.事業所コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsランクNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.ランクColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetランクNull() {
                this[this.tableT売上修正戻ファイル.ランクColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is部課コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.部課コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set部課コードNull() {
                this[this.tableT売上修正戻ファイル.部課コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is担当者コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.担当者コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set担当者コードNull() {
                this[this.tableT売上修正戻ファイル.担当者コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is代理店コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.代理店コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set代理店コードNull() {
                this[this.tableT売上修正戻ファイル.代理店コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is代名Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.代名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set代名Null() {
                this[this.tableT売上修正戻ファイル.代名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納入先コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.納入先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納入先コードNull() {
                this[this.tableT売上修正戻ファイル.納入先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納名Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.納名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納名Null() {
                this[this.tableT売上修正戻ファイル.納名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取引先コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.取引先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取引先コードNull() {
                this[this.tableT売上修正戻ファイル.取引先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取引先名Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.取引先名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取引先名Null() {
                this[this.tableT売上修正戻ファイル.取引先名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is請求先コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.請求先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set請求先コードNull() {
                this[this.tableT売上修正戻ファイル.請求先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上切捨区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.売上切捨区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上切捨区分Null() {
                this[this.tableT売上修正戻ファイル.売上切捨区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上税区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.売上税区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上税区分Null() {
                this[this.tableT売上修正戻ファイル.売上税区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is伝票摘要Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.伝票摘要Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set伝票摘要Null() {
                this[this.tableT売上修正戻ファイル.伝票摘要Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is商品コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.商品コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set商品コードNull() {
                this[this.tableT売上修正戻ファイル.商品コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is商名Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.商名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set商名Null() {
                this[this.tableT売上修正戻ファイル.商名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is規格Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.規格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set規格Null() {
                this[this.tableT売上修正戻ファイル.規格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is形式寸法Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.形式寸法Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set形式寸法Null() {
                this[this.tableT売上修正戻ファイル.形式寸法Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is材質Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.材質Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set材質Null() {
                this[this.tableT売上修正戻ファイル.材質Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is分類Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.分類Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set分類Null() {
                this[this.tableT売上修正戻ファイル.分類Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is品種コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.品種コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set品種コードNull() {
                this[this.tableT売上修正戻ファイル.品種コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsメーカーコードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.メーカーコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetメーカーコードNull() {
                this[this.tableT売上修正戻ファイル.メーカーコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入数Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.入数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入数Null() {
                this[this.tableT売上修正戻ファイル.入数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is単位コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.単位コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set単位コードNull() {
                this[this.tableT売上修正戻ファイル.単位コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is倉庫コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.倉庫コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set倉庫コードNull() {
                this[this.tableT売上修正戻ファイル.倉庫コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isケース数Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.ケース数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setケース数Null() {
                this[this.tableT売上修正戻ファイル.ケース数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is数量Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set数量Null() {
                this[this.tableT売上修正戻ファイル.数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上単価Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.売上単価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上単価Null() {
                this[this.tableT売上修正戻ファイル.売上単価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上金額Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.売上金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上金額Null() {
                this[this.tableT売上修正戻ファイル.売上金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is税抜売上金額Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.税抜売上金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set税抜売上金額Null() {
                this[this.tableT売上修正戻ファイル.税抜売上金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is原価単価Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.原価単価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set原価単価Null() {
                this[this.tableT売上修正戻ファイル.原価単価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is原価金額Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.原価金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set原価金額Null() {
                this[this.tableT売上修正戻ファイル.原価金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is粗利Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.粗利Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set粗利Null() {
                this[this.tableT売上修正戻ファイル.粗利Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is消費税Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.消費税Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set消費税Null() {
                this[this.tableT売上修正戻ファイル.消費税Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is税抜仕入金額Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.税抜仕入金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set税抜仕入金額Null() {
                this[this.tableT売上修正戻ファイル.税抜仕入金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入消費税Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.仕入消費税Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入消費税Null() {
                this[this.tableT売上修正戻ファイル.仕入消費税Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上返品値引理由区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.売上返品値引理由区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上返品値引理由区分Null() {
                this[this.tableT売上修正戻ファイル.売上返品値引理由区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is外内税区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.外内税区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set外内税区分Null() {
                this[this.tableT売上修正戻ファイル.外内税区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is消費税率Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.消費税率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set消費税率Null() {
                this[this.tableT売上修正戻ファイル.消費税率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is新消費税率Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.新消費税率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set新消費税率Null() {
                this[this.tableT売上修正戻ファイル.新消費税率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is新消費税適用Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.新消費税適用Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set新消費税適用Null() {
                this[this.tableT売上修正戻ファイル.新消費税適用Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is明細摘要Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.明細摘要Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set明細摘要Null() {
                this[this.tableT売上修正戻ファイル.明細摘要Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.受注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注番号Null() {
                this[this.tableT売上修正戻ファイル.受注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is相手先注文番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.相手先注文番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set相手先注文番号Null() {
                this[this.tableT売上修正戻ファイル.相手先注文番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is自社受付番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.自社受付番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set自社受付番号Null() {
                this[this.tableT売上修正戻ファイル.自社受付番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入伝票番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.仕入伝票番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入伝票番号Null() {
                this[this.tableT売上修正戻ファイル.仕入伝票番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入先コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.仕入先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入先コードNull() {
                this[this.tableT売上修正戻ファイル.仕入先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕名Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.仕名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕名Null() {
                this[this.tableT売上修正戻ファイル.仕名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入分類Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.仕入分類Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入分類Null() {
                this[this.tableT売上修正戻ファイル.仕入分類Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入事業所コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.仕入事業所コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入事業所コードNull() {
                this[this.tableT売上修正戻ファイル.仕入事業所コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入担当者コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.仕入担当者コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入担当者コードNull() {
                this[this.tableT売上修正戻ファイル.仕入担当者コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入切捨区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.仕入切捨区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入切捨区分Null() {
                this[this.tableT売上修正戻ファイル.仕入切捨区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入税区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.仕入税区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入税区分Null() {
                this[this.tableT売上修正戻ファイル.仕入税区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入金番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.入金番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入金番号Null() {
                this[this.tableT売上修正戻ファイル.入金番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is回収摘要Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.回収摘要Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set回収摘要Null() {
                this[this.tableT売上修正戻ファイル.回収摘要Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWS_IDNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.WS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWS_IDNull() {
                this[this.tableT売上修正戻ファイル.WS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsオペレーターコードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.オペレーターコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetオペレーターコードNull() {
                this[this.tableT売上修正戻ファイル.オペレーターコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is修正オペレーターコードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.修正オペレーターコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set修正オペレーターコードNull() {
                this[this.tableT売上修正戻ファイル.修正オペレーターコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注行Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.受注行Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注行Null() {
                this[this.tableT売上修正戻ファイル.受注行Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理月日Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.処理月日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理月日Null() {
                this[this.tableT売上修正戻ファイル.処理月日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is管理年月Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.管理年月Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set管理年月Null() {
                this[this.tableT売上修正戻ファイル.管理年月Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注行番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.受注行番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注行番号Null() {
                this[this.tableT売上修正戻ファイル.受注行番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上行番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.売上行番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上行番号Null() {
                this[this.tableT売上修正戻ファイル.売上行番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is定価Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.定価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set定価Null() {
                this[this.tableT売上修正戻ファイル.定価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納品掛率Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.納品掛率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納品掛率Null() {
                this[this.tableT売上修正戻ファイル.納品掛率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is原価掛率Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.原価掛率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set原価掛率Null() {
                this[this.tableT売上修正戻ファイル.原価掛率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注有無区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.発注有無区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注有無区分Null() {
                this[this.tableT売上修正戻ファイル.発注有無区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is回答納期Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.回答納期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set回答納期Null() {
                this[this.tableT売上修正戻ファイル.回答納期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is在庫数Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.在庫数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set在庫数Null() {
                this[this.tableT売上修正戻ファイル.在庫数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注残数Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.受注残数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注残数Null() {
                this[this.tableT売上修正戻ファイル.受注残数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注残数Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.発注残数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注残数Null() {
                this[this.tableT売上修正戻ファイル.発注残数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納品書発行フラグNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.納品書発行フラグColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納品書発行フラグNull() {
                this[this.tableT売上修正戻ファイル.納品書発行フラグColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is専用伝票発行フラグNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.専用伝票発行フラグColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set専用伝票発行フラグNull() {
                this[this.tableT売上修正戻ファイル.専用伝票発行フラグColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上累計Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.売上累計Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上累計Null() {
                this[this.tableT売上修正戻ファイル.売上累計Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注番号受注残数Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.受注番号受注残数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注番号受注残数Null() {
                this[this.tableT売上修正戻ファイル.受注番号受注残数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取引先コード２Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.取引先コード２Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取引先コード２Null() {
                this[this.tableT売上修正戻ファイル.取引先コード２Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is社名Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.社名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set社名Null() {
                this[this.tableT売上修正戻ファイル.社名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is店名Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.店名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set店名Null() {
                this[this.tableT売上修正戻ファイル.店名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is部名Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.部名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set部名Null() {
                this[this.tableT売上修正戻ファイル.部名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.発注区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注区分Null() {
                this[this.tableT売上修正戻ファイル.発注区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is請求月Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.請求月Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set請求月Null() {
                this[this.tableT売上修正戻ファイル.請求月Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＥＯＳ区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.ＥＯＳ区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＥＯＳ区分Null() {
                this[this.tableT売上修正戻ファイル.ＥＯＳ区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is帳票区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.帳票区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set帳票区分Null() {
                this[this.tableT売上修正戻ファイル.帳票区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注単位Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.発注単位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注単位Null() {
                this[this.tableT売上修正戻ファイル.発注単位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＥＯＳ商品コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.ＥＯＳ商品コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＥＯＳ商品コードNull() {
                this[this.tableT売上修正戻ファイル.ＥＯＳ商品コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＥＯＳ商品名Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.ＥＯＳ商品名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＥＯＳ商品名Null() {
                this[this.tableT売上修正戻ファイル.ＥＯＳ商品名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＥＯＳ規格Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.ＥＯＳ規格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＥＯＳ規格Null() {
                this[this.tableT売上修正戻ファイル.ＥＯＳ規格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is表示価格Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.表示価格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set表示価格Null() {
                this[this.tableT売上修正戻ファイル.表示価格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＥＯＳ棚番Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.ＥＯＳ棚番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＥＯＳ棚番Null() {
                this[this.tableT売上修正戻ファイル.ＥＯＳ棚番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＪＡＮコードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.ＪＡＮコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＪＡＮコードNull() {
                this[this.tableT売上修正戻ファイル.ＪＡＮコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isメーカー品番Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.メーカー品番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setメーカー品番Null() {
                this[this.tableT売上修正戻ファイル.メーカー品番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is棚番Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.棚番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set棚番Null() {
                this[this.tableT売上修正戻ファイル.棚番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isメーカー名Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.メーカー名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setメーカー名Null() {
                this[this.tableT売上修正戻ファイル.メーカー名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is店コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.店コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set店コードNull() {
                this[this.tableT売上修正戻ファイル.店コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is部コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.部コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set部コードNull() {
                this[this.tableT売上修正戻ファイル.部コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isエラー区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.エラー区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setエラー区分Null() {
                this[this.tableT売上修正戻ファイル.エラー区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is更新ビットNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.更新ビットColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set更新ビットNull() {
                this[this.tableT売上修正戻ファイル.更新ビットColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is商品番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.商品番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set商品番号Null() {
                this[this.tableT売上修正戻ファイル.商品番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is社コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.社コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set社コードNull() {
                this[this.tableT売上修正戻ファイル.社コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is店コードＢNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.店コードＢColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set店コードＢNull() {
                this[this.tableT売上修正戻ファイル.店コードＢColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is直送区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.直送区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set直送区分Null() {
                this[this.tableT売上修正戻ファイル.直送区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is客注区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.客注区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set客注区分Null() {
                this[this.tableT売上修正戻ファイル.客注区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is経費区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.経費区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set経費区分Null() {
                this[this.tableT売上修正戻ファイル.経費区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is返品区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.返品区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set返品区分Null() {
                this[this.tableT売上修正戻ファイル.返品区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is本部原価単価Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.本部原価単価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set本部原価単価Null() {
                this[this.tableT売上修正戻ファイル.本部原価単価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is本部原価金額Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.本部原価金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set本部原価金額Null() {
                this[this.tableT売上修正戻ファイル.本部原価金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納入単価Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.納入単価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納入単価Null() {
                this[this.tableT売上修正戻ファイル.納入単価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is店舗売価Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.店舗売価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set店舗売価Null() {
                this[this.tableT売上修正戻ファイル.店舗売価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is大分類コードNull() {
                return this.IsNull(this.tableT売上修正戻ファイル.大分類コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set大分類コードNull() {
                this[this.tableT売上修正戻ファイル.大分類コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is店舗備考Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.店舗備考Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set店舗備考Null() {
                this[this.tableT売上修正戻ファイル.店舗備考Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入先備考Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.仕入先備考Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入先備考Null() {
                this[this.tableT売上修正戻ファイル.仕入先備考Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is登録番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.登録番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set登録番号Null() {
                this[this.tableT売上修正戻ファイル.登録番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isドラスタ発注番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.ドラスタ発注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setドラスタ発注番号Null() {
                this[this.tableT売上修正戻ファイル.ドラスタ発注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is客注番号Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.客注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set客注番号Null() {
                this[this.tableT売上修正戻ファイル.客注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isドラスタ区分Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.ドラスタ区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setドラスタ区分Null() {
                this[this.tableT売上修正戻ファイル.ドラスタ区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is欠品理由Null() {
                return this.IsNull(this.tableT売上修正戻ファイル.欠品理由Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set欠品理由Null() {
                this[this.tableT売上修正戻ファイル.欠品理由Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T売上明細ファイルRow : global::System.Data.DataRow {
            
            private T売上明細ファイルDataTable tableT売上明細ファイル;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T売上明細ファイルRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT売上明細ファイル = ((T売上明細ファイルDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 売上連番 {
                get {
                    return ((int)(this[this.tableT売上明細ファイル.売上連番Column]));
                }
                set {
                    this[this.tableT売上明細ファイル.売上連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 本支店区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.本支店区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'本支店区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.本支店区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理コード {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.処理コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'処理コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.処理コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 入力区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.入力区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'入力区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.入力区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.処理番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'処理番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.処理番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool エラーフラグ {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.エラーフラグColumn]));
                }
                set {
                    this[this.tableT売上明細ファイル.エラーフラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受発注行数 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.受発注行数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'受発注行数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.受発注行数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受注連番 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.受注連番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'受注連番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.受注連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 出荷番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.出荷番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'出荷番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.出荷番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 出荷連番 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.出荷連番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'出荷連番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.出荷連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.発注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'発注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.発注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注連番 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.発注連番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'発注連番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.発注連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 売上伝票番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.売上伝票番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'売上伝票番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.売上伝票番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 処理日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上明細ファイル.処理日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'処理日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.処理日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 売上日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上明細ファイル.売上日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'売上日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.売上日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 納入日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上明細ファイル.納入日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'納入日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.納入日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 受注日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上明細ファイル.受注日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'受注日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.受注日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 納期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上明細ファイル.納期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'納期\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.納期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 発注納期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上明細ファイル.発注納期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'発注納期\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.発注納期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 処理区 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.処理区Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'処理区\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.処理区Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上区分コード {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.売上区分コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'売上区分コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.売上区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short システム区分 {
                get {
                    return ((short)(this[this.tableT売上明細ファイル.システム区分Column]));
                }
                set {
                    this[this.tableT売上明細ファイル.システム区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 取引区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.取引区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'取引区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.取引区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 請求月区分コード {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.請求月区分コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'請求月区分コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.請求月区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 得意先コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.得意先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'得意先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.得意先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 得名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.得名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'得名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.得名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 事業所コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.事業所コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'事業所コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.事業所コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ランク {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.ランクColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'ランク\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.ランクColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 部課コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.部課コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'部課コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.部課コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 担当者コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.担当者コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'担当者コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.担当者コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 代理店コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.代理店コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'代理店コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.代理店コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 代名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.代名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'代名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.代名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 納入先コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.納入先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'納入先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.納入先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 納名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.納名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'納名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.納名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 取引先コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.取引先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'取引先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.取引先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 取引先名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.取引先名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'取引先名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.取引先名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 請求先コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.請求先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'請求先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.請求先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上切捨区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.売上切捨区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'売上切捨区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.売上切捨区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上税区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.売上税区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'売上税区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.売上税区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 伝票摘要 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.伝票摘要Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'伝票摘要\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.伝票摘要Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 商品コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.商品コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'商品コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.商品コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 商名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.商名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'商名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.商名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 規格 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.規格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'規格\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.規格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 形式寸法 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.形式寸法Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'形式寸法\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.形式寸法Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 材質 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.材質Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'材質\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.材質Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 分類 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.分類Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'分類\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.分類Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 在庫管理区分 {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.在庫管理区分Column]));
                }
                set {
                    this[this.tableT売上明細ファイル.在庫管理区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 品種コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.品種コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'品種コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.品種コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string メーカーコード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.メーカーコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'メーカーコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.メーカーコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 入数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.入数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'入数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.入数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 単位コード {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.単位コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'単位コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.単位コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 倉庫コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.倉庫コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'倉庫コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.倉庫コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ケース数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.ケース数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'ケース数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.ケース数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 数量 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'数量\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 売上単価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.売上単価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'売上単価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.売上単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 売上金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.売上金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'売上金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.売上金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 税抜売上金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.税抜売上金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'税抜売上金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.税抜売上金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 原価単価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.原価単価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'原価単価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.原価単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 原価金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.原価金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'原価金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.原価金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 粗利 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.粗利Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'粗利\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.粗利Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 消費税 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.消費税Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'消費税\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.消費税Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 税抜仕入金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.税抜仕入金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'税抜仕入金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.税抜仕入金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 仕入消費税 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.仕入消費税Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'仕入消費税\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.仕入消費税Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上返品値引理由区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.売上返品値引理由区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'売上返品値引理由区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.売上返品値引理由区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 外内税区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.外内税区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'外内税区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.外内税区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 消費税率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.消費税率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'消費税率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.消費税率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 新消費税率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.新消費税率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'新消費税率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.新消費税率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 新消費税適用 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上明細ファイル.新消費税適用Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'新消費税適用\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.新消費税適用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 明細摘要 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.明細摘要Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'明細摘要\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.明細摘要Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受注番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.受注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'受注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.受注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 相手先注文番号 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.相手先注文番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'相手先注文番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.相手先注文番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 自社受付番号 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.自社受付番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'自社受付番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.自社受付番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 仕入伝票番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.仕入伝票番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'仕入伝票番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.仕入伝票番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕入先コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.仕入先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'仕入先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.仕入先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.仕名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'仕名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.仕名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入分類 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.仕入分類Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'仕入分類\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.仕入分類Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕入事業所コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.仕入事業所コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'仕入事業所コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.仕入事業所コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕入担当者コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.仕入担当者コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'仕入担当者コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.仕入担当者コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入切捨区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.仕入切捨区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'仕入切捨区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.仕入切捨区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入税区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.仕入税区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'仕入税区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.仕入税区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 入金番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.入金番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'入金番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.入金番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool チェック {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.チェックColumn]));
                }
                set {
                    this[this.tableT売上明細ファイル.チェックColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 入金チェック {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.入金チェックColumn]));
                }
                set {
                    this[this.tableT売上明細ファイル.入金チェックColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 回収摘要 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.回収摘要Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'回収摘要\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.回収摘要Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 検収チェック {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.検収チェックColumn]));
                }
                set {
                    this[this.tableT売上明細ファイル.検収チェックColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 完了フラグ {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.完了フラグColumn]));
                }
                set {
                    this[this.tableT売上明細ファイル.完了フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short WS_ID {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.WS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'WS_ID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.WS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 発行済フラグ {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.発行済フラグColumn]));
                }
                set {
                    this[this.tableT売上明細ファイル.発行済フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 受注更新フラグ {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.受注更新フラグColumn]));
                }
                set {
                    this[this.tableT売上明細ファイル.受注更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 出荷更新フラグ {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.出荷更新フラグColumn]));
                }
                set {
                    this[this.tableT売上明細ファイル.出荷更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 得意先更新フラグ {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.得意先更新フラグColumn]));
                }
                set {
                    this[this.tableT売上明細ファイル.得意先更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 商品更新フラグ {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.商品更新フラグColumn]));
                }
                set {
                    this[this.tableT売上明細ファイル.商品更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 商品倉庫更新フラグ {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.商品倉庫更新フラグColumn]));
                }
                set {
                    this[this.tableT売上明細ファイル.商品倉庫更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 商品取引更新フラグ {
                get {
                    return ((bool)(this[this.tableT売上明細ファイル.商品取引更新フラグColumn]));
                }
                set {
                    this[this.tableT売上明細ファイル.商品取引更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string オペレーターコード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.オペレーターコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'オペレーターコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.オペレーターコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 修正オペレーターコード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.修正オペレーターコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'修正オペレーターコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.修正オペレーターコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受注行 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.受注行Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'受注行\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.受注行Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 処理月日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上明細ファイル.処理月日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'処理月日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.処理月日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 管理年月 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.管理年月Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'管理年月\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.管理年月Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 一括消費税締日 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.一括消費税締日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'一括消費税締日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.一括消費税締日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発行済INDEX {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.発行済INDEXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'発行済INDEX\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.発行済INDEXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受注行番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.受注行番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'受注行番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.受注行番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 売上行番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.売上行番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'売上行番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.売上行番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 定価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.定価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'定価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.定価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 納品掛率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.納品掛率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'納品掛率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.納品掛率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 原価掛率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.原価掛率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'原価掛率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.原価掛率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 発注有無区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.発注有無区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'発注有無区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.発注有無区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 回答納期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上明細ファイル.回答納期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'回答納期\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.回答納期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 在庫数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.在庫数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'在庫数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.在庫数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 受注残数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.受注残数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'受注残数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.受注残数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 発注残数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.発注残数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'発注残数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.発注残数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 納品書発行フラグ {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.納品書発行フラグColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'納品書発行フラグ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.納品書発行フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 専用伝票発行フラグ {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.専用伝票発行フラグColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'専用伝票発行フラグ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.専用伝票発行フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 売上累計 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.売上累計Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'売上累計\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.売上累計Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 受注番号受注残数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.受注番号受注残数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'受注番号受注残数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.受注番号受注残数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 納品書発行日時 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT売上明細ファイル.納品書発行日時Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'納品書発行日時\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.納品書発行日時Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 取引先コード２ {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.取引先コード２Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'取引先コード２\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.取引先コード２Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 社名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.社名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'社名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.社名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 店名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.店名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'店名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.店名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 部名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.部名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'部名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.部名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注区分 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.発注区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'発注区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.発注区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 請求月 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.請求月Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'請求月\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.請求月Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ＥＯＳ区分 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.ＥＯＳ区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'ＥＯＳ区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.ＥＯＳ区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 帳票区分 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.帳票区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'帳票区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.帳票区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 発注単位 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.発注単位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'発注単位\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.発注単位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ＥＯＳ商品コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.ＥＯＳ商品コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'ＥＯＳ商品コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.ＥＯＳ商品コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ＥＯＳ商品名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.ＥＯＳ商品名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'ＥＯＳ商品名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.ＥＯＳ商品名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ＥＯＳ規格 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.ＥＯＳ規格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'ＥＯＳ規格\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.ＥＯＳ規格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 表示価格 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.表示価格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'表示価格\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.表示価格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ＥＯＳ棚番 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.ＥＯＳ棚番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'ＥＯＳ棚番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.ＥＯＳ棚番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ＪＡＮコード {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.ＪＡＮコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'ＪＡＮコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.ＪＡＮコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string メーカー品番 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.メーカー品番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'メーカー品番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.メーカー品番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 棚番 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.棚番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'棚番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.棚番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string メーカー名 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.メーカー名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'メーカー名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.メーカー名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 店コード {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.店コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'店コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.店コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 部コード {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.部コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'部コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.部コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string エラー区分 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.エラー区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'エラー区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.エラー区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 更新ビット {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.更新ビットColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'更新ビット\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.更新ビットColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 商品番号 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.商品番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'商品番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.商品番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 社コード {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.社コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'社コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.社コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 店コードＢ {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.店コードＢColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'店コードＢ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.店コードＢColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 直送区分 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.直送区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'直送区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.直送区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 客注区分 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.客注区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'客注区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.客注区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 経費区分 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.経費区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'経費区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.経費区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 返品区分 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.返品区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'返品区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.返品区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 本部原価単価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.本部原価単価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'本部原価単価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.本部原価単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 本部原価金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.本部原価金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'本部原価金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.本部原価金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 納入単価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.納入単価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'納入単価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.納入単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 店舗売価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT売上明細ファイル.店舗売価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'店舗売価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.店舗売価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 大分類コード {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.大分類コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'大分類コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.大分類コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 店舗備考 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.店舗備考Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'店舗備考\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.店舗備考Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕入先備考 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.仕入先備考Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'仕入先備考\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.仕入先備考Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 登録番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.登録番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'登録番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.登録番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ドラスタ発注番号 {
                get {
                    try {
                        return ((int)(this[this.tableT売上明細ファイル.ドラスタ発注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'ドラスタ発注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.ドラスタ発注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 客注番号 {
                get {
                    try {
                        return ((string)(this[this.tableT売上明細ファイル.客注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'客注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.客注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ドラスタ区分 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.ドラスタ区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'ドラスタ区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.ドラスタ区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 欠品理由 {
                get {
                    try {
                        return ((short)(this[this.tableT売上明細ファイル.欠品理由Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T売上明細ファイル\' にある列 \'欠品理由\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT売上明細ファイル.欠品理由Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is本支店区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.本支店区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set本支店区分Null() {
                this[this.tableT売上明細ファイル.本支店区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.処理コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理コードNull() {
                this[this.tableT売上明細ファイル.処理コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入力区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.入力区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入力区分Null() {
                this[this.tableT売上明細ファイル.入力区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.処理番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理番号Null() {
                this[this.tableT売上明細ファイル.処理番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受発注行数Null() {
                return this.IsNull(this.tableT売上明細ファイル.受発注行数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受発注行数Null() {
                this[this.tableT売上明細ファイル.受発注行数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注連番Null() {
                return this.IsNull(this.tableT売上明細ファイル.受注連番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注連番Null() {
                this[this.tableT売上明細ファイル.受注連番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出荷番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.出荷番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出荷番号Null() {
                this[this.tableT売上明細ファイル.出荷番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出荷連番Null() {
                return this.IsNull(this.tableT売上明細ファイル.出荷連番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出荷連番Null() {
                this[this.tableT売上明細ファイル.出荷連番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.発注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注番号Null() {
                this[this.tableT売上明細ファイル.発注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注連番Null() {
                return this.IsNull(this.tableT売上明細ファイル.発注連番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注連番Null() {
                this[this.tableT売上明細ファイル.発注連番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上伝票番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.売上伝票番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上伝票番号Null() {
                this[this.tableT売上明細ファイル.売上伝票番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理日Null() {
                return this.IsNull(this.tableT売上明細ファイル.処理日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理日Null() {
                this[this.tableT売上明細ファイル.処理日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上日Null() {
                return this.IsNull(this.tableT売上明細ファイル.売上日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上日Null() {
                this[this.tableT売上明細ファイル.売上日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納入日Null() {
                return this.IsNull(this.tableT売上明細ファイル.納入日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納入日Null() {
                this[this.tableT売上明細ファイル.納入日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注日Null() {
                return this.IsNull(this.tableT売上明細ファイル.受注日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注日Null() {
                this[this.tableT売上明細ファイル.受注日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納期Null() {
                return this.IsNull(this.tableT売上明細ファイル.納期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納期Null() {
                this[this.tableT売上明細ファイル.納期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注納期Null() {
                return this.IsNull(this.tableT売上明細ファイル.発注納期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注納期Null() {
                this[this.tableT売上明細ファイル.発注納期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理区Null() {
                return this.IsNull(this.tableT売上明細ファイル.処理区Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理区Null() {
                this[this.tableT売上明細ファイル.処理区Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上区分コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.売上区分コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上区分コードNull() {
                this[this.tableT売上明細ファイル.売上区分コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取引区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.取引区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取引区分Null() {
                this[this.tableT売上明細ファイル.取引区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is請求月区分コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.請求月区分コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set請求月区分コードNull() {
                this[this.tableT売上明細ファイル.請求月区分コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is得意先コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.得意先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set得意先コードNull() {
                this[this.tableT売上明細ファイル.得意先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is得名Null() {
                return this.IsNull(this.tableT売上明細ファイル.得名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set得名Null() {
                this[this.tableT売上明細ファイル.得名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is事業所コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.事業所コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set事業所コードNull() {
                this[this.tableT売上明細ファイル.事業所コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsランクNull() {
                return this.IsNull(this.tableT売上明細ファイル.ランクColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetランクNull() {
                this[this.tableT売上明細ファイル.ランクColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is部課コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.部課コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set部課コードNull() {
                this[this.tableT売上明細ファイル.部課コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is担当者コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.担当者コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set担当者コードNull() {
                this[this.tableT売上明細ファイル.担当者コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is代理店コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.代理店コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set代理店コードNull() {
                this[this.tableT売上明細ファイル.代理店コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is代名Null() {
                return this.IsNull(this.tableT売上明細ファイル.代名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set代名Null() {
                this[this.tableT売上明細ファイル.代名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納入先コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.納入先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納入先コードNull() {
                this[this.tableT売上明細ファイル.納入先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納名Null() {
                return this.IsNull(this.tableT売上明細ファイル.納名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納名Null() {
                this[this.tableT売上明細ファイル.納名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取引先コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.取引先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取引先コードNull() {
                this[this.tableT売上明細ファイル.取引先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取引先名Null() {
                return this.IsNull(this.tableT売上明細ファイル.取引先名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取引先名Null() {
                this[this.tableT売上明細ファイル.取引先名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is請求先コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.請求先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set請求先コードNull() {
                this[this.tableT売上明細ファイル.請求先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上切捨区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.売上切捨区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上切捨区分Null() {
                this[this.tableT売上明細ファイル.売上切捨区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上税区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.売上税区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上税区分Null() {
                this[this.tableT売上明細ファイル.売上税区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is伝票摘要Null() {
                return this.IsNull(this.tableT売上明細ファイル.伝票摘要Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set伝票摘要Null() {
                this[this.tableT売上明細ファイル.伝票摘要Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is商品コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.商品コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set商品コードNull() {
                this[this.tableT売上明細ファイル.商品コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is商名Null() {
                return this.IsNull(this.tableT売上明細ファイル.商名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set商名Null() {
                this[this.tableT売上明細ファイル.商名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is規格Null() {
                return this.IsNull(this.tableT売上明細ファイル.規格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set規格Null() {
                this[this.tableT売上明細ファイル.規格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is形式寸法Null() {
                return this.IsNull(this.tableT売上明細ファイル.形式寸法Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set形式寸法Null() {
                this[this.tableT売上明細ファイル.形式寸法Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is材質Null() {
                return this.IsNull(this.tableT売上明細ファイル.材質Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set材質Null() {
                this[this.tableT売上明細ファイル.材質Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is分類Null() {
                return this.IsNull(this.tableT売上明細ファイル.分類Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set分類Null() {
                this[this.tableT売上明細ファイル.分類Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is品種コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.品種コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set品種コードNull() {
                this[this.tableT売上明細ファイル.品種コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsメーカーコードNull() {
                return this.IsNull(this.tableT売上明細ファイル.メーカーコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetメーカーコードNull() {
                this[this.tableT売上明細ファイル.メーカーコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入数Null() {
                return this.IsNull(this.tableT売上明細ファイル.入数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入数Null() {
                this[this.tableT売上明細ファイル.入数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is単位コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.単位コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set単位コードNull() {
                this[this.tableT売上明細ファイル.単位コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is倉庫コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.倉庫コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set倉庫コードNull() {
                this[this.tableT売上明細ファイル.倉庫コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isケース数Null() {
                return this.IsNull(this.tableT売上明細ファイル.ケース数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setケース数Null() {
                this[this.tableT売上明細ファイル.ケース数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is数量Null() {
                return this.IsNull(this.tableT売上明細ファイル.数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set数量Null() {
                this[this.tableT売上明細ファイル.数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上単価Null() {
                return this.IsNull(this.tableT売上明細ファイル.売上単価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上単価Null() {
                this[this.tableT売上明細ファイル.売上単価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上金額Null() {
                return this.IsNull(this.tableT売上明細ファイル.売上金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上金額Null() {
                this[this.tableT売上明細ファイル.売上金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is税抜売上金額Null() {
                return this.IsNull(this.tableT売上明細ファイル.税抜売上金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set税抜売上金額Null() {
                this[this.tableT売上明細ファイル.税抜売上金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is原価単価Null() {
                return this.IsNull(this.tableT売上明細ファイル.原価単価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set原価単価Null() {
                this[this.tableT売上明細ファイル.原価単価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is原価金額Null() {
                return this.IsNull(this.tableT売上明細ファイル.原価金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set原価金額Null() {
                this[this.tableT売上明細ファイル.原価金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is粗利Null() {
                return this.IsNull(this.tableT売上明細ファイル.粗利Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set粗利Null() {
                this[this.tableT売上明細ファイル.粗利Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is消費税Null() {
                return this.IsNull(this.tableT売上明細ファイル.消費税Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set消費税Null() {
                this[this.tableT売上明細ファイル.消費税Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is税抜仕入金額Null() {
                return this.IsNull(this.tableT売上明細ファイル.税抜仕入金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set税抜仕入金額Null() {
                this[this.tableT売上明細ファイル.税抜仕入金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入消費税Null() {
                return this.IsNull(this.tableT売上明細ファイル.仕入消費税Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入消費税Null() {
                this[this.tableT売上明細ファイル.仕入消費税Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上返品値引理由区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.売上返品値引理由区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上返品値引理由区分Null() {
                this[this.tableT売上明細ファイル.売上返品値引理由区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is外内税区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.外内税区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set外内税区分Null() {
                this[this.tableT売上明細ファイル.外内税区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is消費税率Null() {
                return this.IsNull(this.tableT売上明細ファイル.消費税率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set消費税率Null() {
                this[this.tableT売上明細ファイル.消費税率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is新消費税率Null() {
                return this.IsNull(this.tableT売上明細ファイル.新消費税率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set新消費税率Null() {
                this[this.tableT売上明細ファイル.新消費税率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is新消費税適用Null() {
                return this.IsNull(this.tableT売上明細ファイル.新消費税適用Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set新消費税適用Null() {
                this[this.tableT売上明細ファイル.新消費税適用Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is明細摘要Null() {
                return this.IsNull(this.tableT売上明細ファイル.明細摘要Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set明細摘要Null() {
                this[this.tableT売上明細ファイル.明細摘要Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.受注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注番号Null() {
                this[this.tableT売上明細ファイル.受注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is相手先注文番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.相手先注文番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set相手先注文番号Null() {
                this[this.tableT売上明細ファイル.相手先注文番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is自社受付番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.自社受付番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set自社受付番号Null() {
                this[this.tableT売上明細ファイル.自社受付番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入伝票番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.仕入伝票番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入伝票番号Null() {
                this[this.tableT売上明細ファイル.仕入伝票番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入先コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.仕入先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入先コードNull() {
                this[this.tableT売上明細ファイル.仕入先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕名Null() {
                return this.IsNull(this.tableT売上明細ファイル.仕名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕名Null() {
                this[this.tableT売上明細ファイル.仕名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入分類Null() {
                return this.IsNull(this.tableT売上明細ファイル.仕入分類Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入分類Null() {
                this[this.tableT売上明細ファイル.仕入分類Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入事業所コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.仕入事業所コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入事業所コードNull() {
                this[this.tableT売上明細ファイル.仕入事業所コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入担当者コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.仕入担当者コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入担当者コードNull() {
                this[this.tableT売上明細ファイル.仕入担当者コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入切捨区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.仕入切捨区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入切捨区分Null() {
                this[this.tableT売上明細ファイル.仕入切捨区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入税区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.仕入税区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入税区分Null() {
                this[this.tableT売上明細ファイル.仕入税区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入金番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.入金番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入金番号Null() {
                this[this.tableT売上明細ファイル.入金番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is回収摘要Null() {
                return this.IsNull(this.tableT売上明細ファイル.回収摘要Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set回収摘要Null() {
                this[this.tableT売上明細ファイル.回収摘要Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWS_IDNull() {
                return this.IsNull(this.tableT売上明細ファイル.WS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWS_IDNull() {
                this[this.tableT売上明細ファイル.WS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsオペレーターコードNull() {
                return this.IsNull(this.tableT売上明細ファイル.オペレーターコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetオペレーターコードNull() {
                this[this.tableT売上明細ファイル.オペレーターコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is修正オペレーターコードNull() {
                return this.IsNull(this.tableT売上明細ファイル.修正オペレーターコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set修正オペレーターコードNull() {
                this[this.tableT売上明細ファイル.修正オペレーターコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注行Null() {
                return this.IsNull(this.tableT売上明細ファイル.受注行Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注行Null() {
                this[this.tableT売上明細ファイル.受注行Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理月日Null() {
                return this.IsNull(this.tableT売上明細ファイル.処理月日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理月日Null() {
                this[this.tableT売上明細ファイル.処理月日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is管理年月Null() {
                return this.IsNull(this.tableT売上明細ファイル.管理年月Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set管理年月Null() {
                this[this.tableT売上明細ファイル.管理年月Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is一括消費税締日Null() {
                return this.IsNull(this.tableT売上明細ファイル.一括消費税締日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set一括消費税締日Null() {
                this[this.tableT売上明細ファイル.一括消費税締日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発行済INDEXNull() {
                return this.IsNull(this.tableT売上明細ファイル.発行済INDEXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発行済INDEXNull() {
                this[this.tableT売上明細ファイル.発行済INDEXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注行番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.受注行番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注行番号Null() {
                this[this.tableT売上明細ファイル.受注行番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上行番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.売上行番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上行番号Null() {
                this[this.tableT売上明細ファイル.売上行番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is定価Null() {
                return this.IsNull(this.tableT売上明細ファイル.定価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set定価Null() {
                this[this.tableT売上明細ファイル.定価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納品掛率Null() {
                return this.IsNull(this.tableT売上明細ファイル.納品掛率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納品掛率Null() {
                this[this.tableT売上明細ファイル.納品掛率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is原価掛率Null() {
                return this.IsNull(this.tableT売上明細ファイル.原価掛率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set原価掛率Null() {
                this[this.tableT売上明細ファイル.原価掛率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注有無区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.発注有無区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注有無区分Null() {
                this[this.tableT売上明細ファイル.発注有無区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is回答納期Null() {
                return this.IsNull(this.tableT売上明細ファイル.回答納期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set回答納期Null() {
                this[this.tableT売上明細ファイル.回答納期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is在庫数Null() {
                return this.IsNull(this.tableT売上明細ファイル.在庫数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set在庫数Null() {
                this[this.tableT売上明細ファイル.在庫数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注残数Null() {
                return this.IsNull(this.tableT売上明細ファイル.受注残数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注残数Null() {
                this[this.tableT売上明細ファイル.受注残数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注残数Null() {
                return this.IsNull(this.tableT売上明細ファイル.発注残数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注残数Null() {
                this[this.tableT売上明細ファイル.発注残数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納品書発行フラグNull() {
                return this.IsNull(this.tableT売上明細ファイル.納品書発行フラグColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納品書発行フラグNull() {
                this[this.tableT売上明細ファイル.納品書発行フラグColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is専用伝票発行フラグNull() {
                return this.IsNull(this.tableT売上明細ファイル.専用伝票発行フラグColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set専用伝票発行フラグNull() {
                this[this.tableT売上明細ファイル.専用伝票発行フラグColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上累計Null() {
                return this.IsNull(this.tableT売上明細ファイル.売上累計Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上累計Null() {
                this[this.tableT売上明細ファイル.売上累計Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注番号受注残数Null() {
                return this.IsNull(this.tableT売上明細ファイル.受注番号受注残数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注番号受注残数Null() {
                this[this.tableT売上明細ファイル.受注番号受注残数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納品書発行日時Null() {
                return this.IsNull(this.tableT売上明細ファイル.納品書発行日時Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納品書発行日時Null() {
                this[this.tableT売上明細ファイル.納品書発行日時Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取引先コード２Null() {
                return this.IsNull(this.tableT売上明細ファイル.取引先コード２Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取引先コード２Null() {
                this[this.tableT売上明細ファイル.取引先コード２Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is社名Null() {
                return this.IsNull(this.tableT売上明細ファイル.社名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set社名Null() {
                this[this.tableT売上明細ファイル.社名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is店名Null() {
                return this.IsNull(this.tableT売上明細ファイル.店名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set店名Null() {
                this[this.tableT売上明細ファイル.店名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is部名Null() {
                return this.IsNull(this.tableT売上明細ファイル.部名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set部名Null() {
                this[this.tableT売上明細ファイル.部名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.発注区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注区分Null() {
                this[this.tableT売上明細ファイル.発注区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is請求月Null() {
                return this.IsNull(this.tableT売上明細ファイル.請求月Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set請求月Null() {
                this[this.tableT売上明細ファイル.請求月Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＥＯＳ区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.ＥＯＳ区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＥＯＳ区分Null() {
                this[this.tableT売上明細ファイル.ＥＯＳ区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is帳票区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.帳票区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set帳票区分Null() {
                this[this.tableT売上明細ファイル.帳票区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注単位Null() {
                return this.IsNull(this.tableT売上明細ファイル.発注単位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注単位Null() {
                this[this.tableT売上明細ファイル.発注単位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＥＯＳ商品コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.ＥＯＳ商品コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＥＯＳ商品コードNull() {
                this[this.tableT売上明細ファイル.ＥＯＳ商品コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＥＯＳ商品名Null() {
                return this.IsNull(this.tableT売上明細ファイル.ＥＯＳ商品名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＥＯＳ商品名Null() {
                this[this.tableT売上明細ファイル.ＥＯＳ商品名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＥＯＳ規格Null() {
                return this.IsNull(this.tableT売上明細ファイル.ＥＯＳ規格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＥＯＳ規格Null() {
                this[this.tableT売上明細ファイル.ＥＯＳ規格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is表示価格Null() {
                return this.IsNull(this.tableT売上明細ファイル.表示価格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set表示価格Null() {
                this[this.tableT売上明細ファイル.表示価格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＥＯＳ棚番Null() {
                return this.IsNull(this.tableT売上明細ファイル.ＥＯＳ棚番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＥＯＳ棚番Null() {
                this[this.tableT売上明細ファイル.ＥＯＳ棚番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＪＡＮコードNull() {
                return this.IsNull(this.tableT売上明細ファイル.ＪＡＮコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＪＡＮコードNull() {
                this[this.tableT売上明細ファイル.ＪＡＮコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isメーカー品番Null() {
                return this.IsNull(this.tableT売上明細ファイル.メーカー品番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setメーカー品番Null() {
                this[this.tableT売上明細ファイル.メーカー品番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is棚番Null() {
                return this.IsNull(this.tableT売上明細ファイル.棚番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set棚番Null() {
                this[this.tableT売上明細ファイル.棚番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isメーカー名Null() {
                return this.IsNull(this.tableT売上明細ファイル.メーカー名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setメーカー名Null() {
                this[this.tableT売上明細ファイル.メーカー名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is店コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.店コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set店コードNull() {
                this[this.tableT売上明細ファイル.店コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is部コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.部コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set部コードNull() {
                this[this.tableT売上明細ファイル.部コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isエラー区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.エラー区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setエラー区分Null() {
                this[this.tableT売上明細ファイル.エラー区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is更新ビットNull() {
                return this.IsNull(this.tableT売上明細ファイル.更新ビットColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set更新ビットNull() {
                this[this.tableT売上明細ファイル.更新ビットColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is商品番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.商品番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set商品番号Null() {
                this[this.tableT売上明細ファイル.商品番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is社コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.社コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set社コードNull() {
                this[this.tableT売上明細ファイル.社コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is店コードＢNull() {
                return this.IsNull(this.tableT売上明細ファイル.店コードＢColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set店コードＢNull() {
                this[this.tableT売上明細ファイル.店コードＢColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is直送区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.直送区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set直送区分Null() {
                this[this.tableT売上明細ファイル.直送区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is客注区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.客注区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set客注区分Null() {
                this[this.tableT売上明細ファイル.客注区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is経費区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.経費区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set経費区分Null() {
                this[this.tableT売上明細ファイル.経費区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is返品区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.返品区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set返品区分Null() {
                this[this.tableT売上明細ファイル.返品区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is本部原価単価Null() {
                return this.IsNull(this.tableT売上明細ファイル.本部原価単価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set本部原価単価Null() {
                this[this.tableT売上明細ファイル.本部原価単価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is本部原価金額Null() {
                return this.IsNull(this.tableT売上明細ファイル.本部原価金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set本部原価金額Null() {
                this[this.tableT売上明細ファイル.本部原価金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納入単価Null() {
                return this.IsNull(this.tableT売上明細ファイル.納入単価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納入単価Null() {
                this[this.tableT売上明細ファイル.納入単価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is店舗売価Null() {
                return this.IsNull(this.tableT売上明細ファイル.店舗売価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set店舗売価Null() {
                this[this.tableT売上明細ファイル.店舗売価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is大分類コードNull() {
                return this.IsNull(this.tableT売上明細ファイル.大分類コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set大分類コードNull() {
                this[this.tableT売上明細ファイル.大分類コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is店舗備考Null() {
                return this.IsNull(this.tableT売上明細ファイル.店舗備考Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set店舗備考Null() {
                this[this.tableT売上明細ファイル.店舗備考Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入先備考Null() {
                return this.IsNull(this.tableT売上明細ファイル.仕入先備考Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入先備考Null() {
                this[this.tableT売上明細ファイル.仕入先備考Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is登録番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.登録番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set登録番号Null() {
                this[this.tableT売上明細ファイル.登録番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isドラスタ発注番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.ドラスタ発注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setドラスタ発注番号Null() {
                this[this.tableT売上明細ファイル.ドラスタ発注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is客注番号Null() {
                return this.IsNull(this.tableT売上明細ファイル.客注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set客注番号Null() {
                this[this.tableT売上明細ファイル.客注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isドラスタ区分Null() {
                return this.IsNull(this.tableT売上明細ファイル.ドラスタ区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setドラスタ区分Null() {
                this[this.tableT売上明細ファイル.ドラスタ区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is欠品理由Null() {
                return this.IsNull(this.tableT売上明細ファイル.欠品理由Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set欠品理由Null() {
                this[this.tableT売上明細ファイル.欠品理由Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T処理履歴テーブルRow : global::System.Data.DataRow {
            
            private T処理履歴テーブルDataTable tableT処理履歴テーブル;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T処理履歴テーブルRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT処理履歴テーブル = ((T処理履歴テーブルDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int カウント {
                get {
                    return ((int)(this[this.tableT処理履歴テーブル.カウントColumn]));
                }
                set {
                    this[this.tableT処理履歴テーブル.カウントColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 本支店区分 {
                get {
                    try {
                        return ((short)(this[this.tableT処理履歴テーブル.本支店区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'本支店区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.本支店区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理コード {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.処理コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'処理コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.処理コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 処理名 {
                get {
                    try {
                        return ((string)(this[this.tableT処理履歴テーブル.処理名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'処理名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.処理名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 入力区分 {
                get {
                    try {
                        return ((short)(this[this.tableT処理履歴テーブル.入力区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'入力区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.入力区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 事業所コード {
                get {
                    try {
                        return ((string)(this[this.tableT処理履歴テーブル.事業所コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'事業所コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.事業所コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.処理番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'処理番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.処理番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上仕入区分コード {
                get {
                    try {
                        return ((short)(this[this.tableT処理履歴テーブル.売上仕入区分コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'売上仕入区分コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.売上仕入区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short システム区分 {
                get {
                    try {
                        return ((short)(this[this.tableT処理履歴テーブル.システム区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'システム区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.システム区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 売上伝票番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.売上伝票番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'売上伝票番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.売上伝票番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受注番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.受注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'受注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.受注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 出荷番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.出荷番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'出荷番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.出荷番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.発注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'発注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.発注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 仕入伝票番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.仕入伝票番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'仕入伝票番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.仕入伝票番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 入荷番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.入荷番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'入荷番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.入荷番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 入金番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.入金番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'入金番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.入金番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 支払番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.支払番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'支払番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.支払番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 移動番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.移動番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'移動番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.移動番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 棚卸番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.棚卸番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'棚卸番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.棚卸番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 処理日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT処理履歴テーブル.処理日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'処理日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.処理日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 更新フラグ {
                get {
                    return ((bool)(this[this.tableT処理履歴テーブル.更新フラグColumn]));
                }
                set {
                    this[this.tableT処理履歴テーブル.更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 更新INDEX {
                get {
                    return ((int)(this[this.tableT処理履歴テーブル.更新INDEXColumn]));
                }
                set {
                    this[this.tableT処理履歴テーブル.更新INDEXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 更新処理日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT処理履歴テーブル.更新処理日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'更新処理日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.更新処理日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string オペレーターコード {
                get {
                    try {
                        return ((string)(this[this.tableT処理履歴テーブル.オペレーターコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'オペレーターコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.オペレーターコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is本支店区分Null() {
                return this.IsNull(this.tableT処理履歴テーブル.本支店区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set本支店区分Null() {
                this[this.tableT処理履歴テーブル.本支店区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理コードNull() {
                return this.IsNull(this.tableT処理履歴テーブル.処理コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理コードNull() {
                this[this.tableT処理履歴テーブル.処理コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理名Null() {
                return this.IsNull(this.tableT処理履歴テーブル.処理名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理名Null() {
                this[this.tableT処理履歴テーブル.処理名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入力区分Null() {
                return this.IsNull(this.tableT処理履歴テーブル.入力区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入力区分Null() {
                this[this.tableT処理履歴テーブル.入力区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is事業所コードNull() {
                return this.IsNull(this.tableT処理履歴テーブル.事業所コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set事業所コードNull() {
                this[this.tableT処理履歴テーブル.事業所コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.処理番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理番号Null() {
                this[this.tableT処理履歴テーブル.処理番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上仕入区分コードNull() {
                return this.IsNull(this.tableT処理履歴テーブル.売上仕入区分コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上仕入区分コードNull() {
                this[this.tableT処理履歴テーブル.売上仕入区分コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isシステム区分Null() {
                return this.IsNull(this.tableT処理履歴テーブル.システム区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setシステム区分Null() {
                this[this.tableT処理履歴テーブル.システム区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上伝票番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.売上伝票番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上伝票番号Null() {
                this[this.tableT処理履歴テーブル.売上伝票番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.受注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注番号Null() {
                this[this.tableT処理履歴テーブル.受注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出荷番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.出荷番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出荷番号Null() {
                this[this.tableT処理履歴テーブル.出荷番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.発注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注番号Null() {
                this[this.tableT処理履歴テーブル.発注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入伝票番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.仕入伝票番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入伝票番号Null() {
                this[this.tableT処理履歴テーブル.仕入伝票番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入荷番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.入荷番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入荷番号Null() {
                this[this.tableT処理履歴テーブル.入荷番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入金番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.入金番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入金番号Null() {
                this[this.tableT処理履歴テーブル.入金番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is支払番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.支払番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set支払番号Null() {
                this[this.tableT処理履歴テーブル.支払番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is移動番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.移動番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set移動番号Null() {
                this[this.tableT処理履歴テーブル.移動番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is棚卸番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.棚卸番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set棚卸番号Null() {
                this[this.tableT処理履歴テーブル.棚卸番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理日Null() {
                return this.IsNull(this.tableT処理履歴テーブル.処理日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理日Null() {
                this[this.tableT処理履歴テーブル.処理日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is更新処理日Null() {
                return this.IsNull(this.tableT処理履歴テーブル.更新処理日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set更新処理日Null() {
                this[this.tableT処理履歴テーブル.更新処理日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsオペレーターコードNull() {
                return this.IsNull(this.tableT処理履歴テーブル.オペレーターコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetオペレーターコードNull() {
                this[this.tableT処理履歴テーブル.オペレーターコードColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T売上修正戻ファイルRowChangeEvent : global::System.EventArgs {
            
            private T売上修正戻ファイルRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上修正戻ファイルRowChangeEvent(T売上修正戻ファイルRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上修正戻ファイルRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T売上明細ファイルRowChangeEvent : global::System.EventArgs {
            
            private T売上明細ファイルRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上明細ファイルRowChangeEvent(T売上明細ファイルRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T売上明細ファイルRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T処理履歴テーブルRowChangeEvent : global::System.EventArgs {
            
            private T処理履歴テーブルRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルRowChangeEvent(T処理履歴テーブルRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace db_test.売上計上DataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T売上修正戻ファイルTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T売上修正戻ファイルTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T売上修正戻ファイル";
            tableMapping.ColumnMappings.Add("売上修正連番", "売上修正連番");
            tableMapping.ColumnMappings.Add("修正処理年月日", "修正処理年月日");
            tableMapping.ColumnMappings.Add("本支店区分", "本支店区分");
            tableMapping.ColumnMappings.Add("処理コード", "処理コード");
            tableMapping.ColumnMappings.Add("入力区分", "入力区分");
            tableMapping.ColumnMappings.Add("処理番号", "処理番号");
            tableMapping.ColumnMappings.Add("エラーフラグ", "エラーフラグ");
            tableMapping.ColumnMappings.Add("受発注行数", "受発注行数");
            tableMapping.ColumnMappings.Add("受注連番", "受注連番");
            tableMapping.ColumnMappings.Add("出荷番号", "出荷番号");
            tableMapping.ColumnMappings.Add("出荷連番", "出荷連番");
            tableMapping.ColumnMappings.Add("発注番号", "発注番号");
            tableMapping.ColumnMappings.Add("発注連番", "発注連番");
            tableMapping.ColumnMappings.Add("売上伝票番号", "売上伝票番号");
            tableMapping.ColumnMappings.Add("処理日", "処理日");
            tableMapping.ColumnMappings.Add("売上日", "売上日");
            tableMapping.ColumnMappings.Add("納入日", "納入日");
            tableMapping.ColumnMappings.Add("受注日", "受注日");
            tableMapping.ColumnMappings.Add("納期", "納期");
            tableMapping.ColumnMappings.Add("発注納期", "発注納期");
            tableMapping.ColumnMappings.Add("処理区", "処理区");
            tableMapping.ColumnMappings.Add("売上区分コード", "売上区分コード");
            tableMapping.ColumnMappings.Add("システム区分", "システム区分");
            tableMapping.ColumnMappings.Add("取引区分", "取引区分");
            tableMapping.ColumnMappings.Add("請求月区分コード", "請求月区分コード");
            tableMapping.ColumnMappings.Add("得意先コード", "得意先コード");
            tableMapping.ColumnMappings.Add("得名", "得名");
            tableMapping.ColumnMappings.Add("事業所コード", "事業所コード");
            tableMapping.ColumnMappings.Add("ランク", "ランク");
            tableMapping.ColumnMappings.Add("部課コード", "部課コード");
            tableMapping.ColumnMappings.Add("担当者コード", "担当者コード");
            tableMapping.ColumnMappings.Add("代理店コード", "代理店コード");
            tableMapping.ColumnMappings.Add("代名", "代名");
            tableMapping.ColumnMappings.Add("納入先コード", "納入先コード");
            tableMapping.ColumnMappings.Add("納名", "納名");
            tableMapping.ColumnMappings.Add("取引先コード", "取引先コード");
            tableMapping.ColumnMappings.Add("取引先名", "取引先名");
            tableMapping.ColumnMappings.Add("請求先コード", "請求先コード");
            tableMapping.ColumnMappings.Add("売上切捨区分", "売上切捨区分");
            tableMapping.ColumnMappings.Add("売上税区分", "売上税区分");
            tableMapping.ColumnMappings.Add("伝票摘要", "伝票摘要");
            tableMapping.ColumnMappings.Add("商品コード", "商品コード");
            tableMapping.ColumnMappings.Add("商名", "商名");
            tableMapping.ColumnMappings.Add("規格", "規格");
            tableMapping.ColumnMappings.Add("形式寸法", "形式寸法");
            tableMapping.ColumnMappings.Add("材質", "材質");
            tableMapping.ColumnMappings.Add("分類", "分類");
            tableMapping.ColumnMappings.Add("在庫管理区分", "在庫管理区分");
            tableMapping.ColumnMappings.Add("品種コード", "品種コード");
            tableMapping.ColumnMappings.Add("メーカーコード", "メーカーコード");
            tableMapping.ColumnMappings.Add("入数", "入数");
            tableMapping.ColumnMappings.Add("単位コード", "単位コード");
            tableMapping.ColumnMappings.Add("倉庫コード", "倉庫コード");
            tableMapping.ColumnMappings.Add("ケース数", "ケース数");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("売上単価", "売上単価");
            tableMapping.ColumnMappings.Add("売上金額", "売上金額");
            tableMapping.ColumnMappings.Add("税抜売上金額", "税抜売上金額");
            tableMapping.ColumnMappings.Add("原価単価", "原価単価");
            tableMapping.ColumnMappings.Add("原価金額", "原価金額");
            tableMapping.ColumnMappings.Add("粗利", "粗利");
            tableMapping.ColumnMappings.Add("消費税", "消費税");
            tableMapping.ColumnMappings.Add("税抜仕入金額", "税抜仕入金額");
            tableMapping.ColumnMappings.Add("仕入消費税", "仕入消費税");
            tableMapping.ColumnMappings.Add("売上返品値引理由区分", "売上返品値引理由区分");
            tableMapping.ColumnMappings.Add("外内税区分", "外内税区分");
            tableMapping.ColumnMappings.Add("消費税率", "消費税率");
            tableMapping.ColumnMappings.Add("新消費税率", "新消費税率");
            tableMapping.ColumnMappings.Add("新消費税適用", "新消費税適用");
            tableMapping.ColumnMappings.Add("明細摘要", "明細摘要");
            tableMapping.ColumnMappings.Add("受注番号", "受注番号");
            tableMapping.ColumnMappings.Add("相手先注文番号", "相手先注文番号");
            tableMapping.ColumnMappings.Add("自社受付番号", "自社受付番号");
            tableMapping.ColumnMappings.Add("仕入伝票番号", "仕入伝票番号");
            tableMapping.ColumnMappings.Add("仕入先コード", "仕入先コード");
            tableMapping.ColumnMappings.Add("仕名", "仕名");
            tableMapping.ColumnMappings.Add("仕入分類", "仕入分類");
            tableMapping.ColumnMappings.Add("仕入事業所コード", "仕入事業所コード");
            tableMapping.ColumnMappings.Add("仕入担当者コード", "仕入担当者コード");
            tableMapping.ColumnMappings.Add("仕入切捨区分", "仕入切捨区分");
            tableMapping.ColumnMappings.Add("仕入税区分", "仕入税区分");
            tableMapping.ColumnMappings.Add("入金番号", "入金番号");
            tableMapping.ColumnMappings.Add("チェック", "チェック");
            tableMapping.ColumnMappings.Add("入金チェック", "入金チェック");
            tableMapping.ColumnMappings.Add("回収摘要", "回収摘要");
            tableMapping.ColumnMappings.Add("検収チェック", "検収チェック");
            tableMapping.ColumnMappings.Add("完了フラグ", "完了フラグ");
            tableMapping.ColumnMappings.Add("WS_ID", "WS_ID");
            tableMapping.ColumnMappings.Add("発行済フラグ", "発行済フラグ");
            tableMapping.ColumnMappings.Add("受注更新フラグ", "受注更新フラグ");
            tableMapping.ColumnMappings.Add("出荷更新フラグ", "出荷更新フラグ");
            tableMapping.ColumnMappings.Add("得意先更新フラグ", "得意先更新フラグ");
            tableMapping.ColumnMappings.Add("商品更新フラグ", "商品更新フラグ");
            tableMapping.ColumnMappings.Add("商品倉庫更新フラグ", "商品倉庫更新フラグ");
            tableMapping.ColumnMappings.Add("商品取引更新フラグ", "商品取引更新フラグ");
            tableMapping.ColumnMappings.Add("オペレーターコード", "オペレーターコード");
            tableMapping.ColumnMappings.Add("修正オペレーターコード", "修正オペレーターコード");
            tableMapping.ColumnMappings.Add("受注行", "受注行");
            tableMapping.ColumnMappings.Add("処理月日", "処理月日");
            tableMapping.ColumnMappings.Add("管理年月", "管理年月");
            tableMapping.ColumnMappings.Add("受注行番号", "受注行番号");
            tableMapping.ColumnMappings.Add("売上行番号", "売上行番号");
            tableMapping.ColumnMappings.Add("定価", "定価");
            tableMapping.ColumnMappings.Add("納品掛率", "納品掛率");
            tableMapping.ColumnMappings.Add("原価掛率", "原価掛率");
            tableMapping.ColumnMappings.Add("発注有無区分", "発注有無区分");
            tableMapping.ColumnMappings.Add("回答納期", "回答納期");
            tableMapping.ColumnMappings.Add("在庫数", "在庫数");
            tableMapping.ColumnMappings.Add("受注残数", "受注残数");
            tableMapping.ColumnMappings.Add("発注残数", "発注残数");
            tableMapping.ColumnMappings.Add("納品書発行フラグ", "納品書発行フラグ");
            tableMapping.ColumnMappings.Add("専用伝票発行フラグ", "専用伝票発行フラグ");
            tableMapping.ColumnMappings.Add("売上累計", "売上累計");
            tableMapping.ColumnMappings.Add("受注番号受注残数", "受注番号受注残数");
            tableMapping.ColumnMappings.Add("取引先コード２", "取引先コード２");
            tableMapping.ColumnMappings.Add("社名", "社名");
            tableMapping.ColumnMappings.Add("店名", "店名");
            tableMapping.ColumnMappings.Add("部名", "部名");
            tableMapping.ColumnMappings.Add("発注区分", "発注区分");
            tableMapping.ColumnMappings.Add("請求月", "請求月");
            tableMapping.ColumnMappings.Add("ＥＯＳ区分", "ＥＯＳ区分");
            tableMapping.ColumnMappings.Add("帳票区分", "帳票区分");
            tableMapping.ColumnMappings.Add("発注単位", "発注単位");
            tableMapping.ColumnMappings.Add("ＥＯＳ商品コード", "ＥＯＳ商品コード");
            tableMapping.ColumnMappings.Add("ＥＯＳ商品名", "ＥＯＳ商品名");
            tableMapping.ColumnMappings.Add("ＥＯＳ規格", "ＥＯＳ規格");
            tableMapping.ColumnMappings.Add("表示価格", "表示価格");
            tableMapping.ColumnMappings.Add("ＥＯＳ棚番", "ＥＯＳ棚番");
            tableMapping.ColumnMappings.Add("ＪＡＮコード", "ＪＡＮコード");
            tableMapping.ColumnMappings.Add("メーカー品番", "メーカー品番");
            tableMapping.ColumnMappings.Add("棚番", "棚番");
            tableMapping.ColumnMappings.Add("メーカー名", "メーカー名");
            tableMapping.ColumnMappings.Add("店コード", "店コード");
            tableMapping.ColumnMappings.Add("部コード", "部コード");
            tableMapping.ColumnMappings.Add("エラー区分", "エラー区分");
            tableMapping.ColumnMappings.Add("更新ビット", "更新ビット");
            tableMapping.ColumnMappings.Add("商品番号", "商品番号");
            tableMapping.ColumnMappings.Add("社コード", "社コード");
            tableMapping.ColumnMappings.Add("店コードＢ", "店コードＢ");
            tableMapping.ColumnMappings.Add("直送区分", "直送区分");
            tableMapping.ColumnMappings.Add("客注区分", "客注区分");
            tableMapping.ColumnMappings.Add("経費区分", "経費区分");
            tableMapping.ColumnMappings.Add("返品区分", "返品区分");
            tableMapping.ColumnMappings.Add("本部原価単価", "本部原価単価");
            tableMapping.ColumnMappings.Add("本部原価金額", "本部原価金額");
            tableMapping.ColumnMappings.Add("納入単価", "納入単価");
            tableMapping.ColumnMappings.Add("店舗売価", "店舗売価");
            tableMapping.ColumnMappings.Add("大分類コード", "大分類コード");
            tableMapping.ColumnMappings.Add("店舗備考", "店舗備考");
            tableMapping.ColumnMappings.Add("仕入先備考", "仕入先備考");
            tableMapping.ColumnMappings.Add("登録番号", "登録番号");
            tableMapping.ColumnMappings.Add("ドラスタ発注番号", "ドラスタ発注番号");
            tableMapping.ColumnMappings.Add("客注番号", "客注番号");
            tableMapping.ColumnMappings.Add("ドラスタ区分", "ドラスタ区分");
            tableMapping.ColumnMappings.Add("欠品理由", "欠品理由");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T売上修正戻ファイル] WHERE (([売上修正連番] = @Original_売上修正連番) AND ((@IsNull" +
                "_修正処理年月日 = 1 AND [修正処理年月日] IS NULL) OR ([修正処理年月日] = @Original_修正処理年月日)) AND ((@I" +
                "sNull_本支店区分 = 1 AND [本支店区分] IS NULL) OR ([本支店区分] = @Original_本支店区分)) AND ((@IsNu" +
                "ll_処理コード = 1 AND [処理コード] IS NULL) OR ([処理コード] = @Original_処理コード)) AND ((@IsNull_" +
                "入力区分 = 1 AND [入力区分] IS NULL) OR ([入力区分] = @Original_入力区分)) AND ((@IsNull_処理番号 = " +
                "1 AND [処理番号] IS NULL) OR ([処理番号] = @Original_処理番号)) AND ([エラーフラグ] = @Original_エラ" +
                "ーフラグ) AND ((@IsNull_受発注行数 = 1 AND [受発注行数] IS NULL) OR ([受発注行数] = @Original_受発注行数" +
                ")) AND ((@IsNull_受注連番 = 1 AND [受注連番] IS NULL) OR ([受注連番] = @Original_受注連番)) AND " +
                "((@IsNull_出荷番号 = 1 AND [出荷番号] IS NULL) OR ([出荷番号] = @Original_出荷番号)) AND ((@IsNu" +
                "ll_出荷連番 = 1 AND [出荷連番] IS NULL) OR ([出荷連番] = @Original_出荷連番)) AND ((@IsNull_発注番号" +
                " = 1 AND [発注番号] IS NULL) OR ([発注番号] = @Original_発注番号)) AND ((@IsNull_発注連番 = 1 AN" +
                "D [発注連番] IS NULL) OR ([発注連番] = @Original_発注連番)) AND ((@IsNull_売上伝票番号 = 1 AND [売上" +
                "伝票番号] IS NULL) OR ([売上伝票番号] = @Original_売上伝票番号)) AND ((@IsNull_処理日 = 1 AND [処理日]" +
                " IS NULL) OR ([処理日] = @Original_処理日)) AND ((@IsNull_売上日 = 1 AND [売上日] IS NULL) O" +
                "R ([売上日] = @Original_売上日)) AND ((@IsNull_納入日 = 1 AND [納入日] IS NULL) OR ([納入日] = " +
                "@Original_納入日)) AND ((@IsNull_受注日 = 1 AND [受注日] IS NULL) OR ([受注日] = @Original_受" +
                "注日)) AND ((@IsNull_納期 = 1 AND [納期] IS NULL) OR ([納期] = @Original_納期)) AND ((@IsN" +
                "ull_発注納期 = 1 AND [発注納期] IS NULL) OR ([発注納期] = @Original_発注納期)) AND ((@IsNull_処理区" +
                " = 1 AND [処理区] IS NULL) OR ([処理区] = @Original_処理区)) AND ((@IsNull_売上区分コード = 1 AN" +
                "D [売上区分コード] IS NULL) OR ([売上区分コード] = @Original_売上区分コード)) AND ([システム区分] = @Origin" +
                "al_システム区分) AND ((@IsNull_取引区分 = 1 AND [取引区分] IS NULL) OR ([取引区分] = @Original_取引区" +
                "分)) AND ((@IsNull_請求月区分コード = 1 AND [請求月区分コード] IS NULL) OR ([請求月区分コード] = @Origina" +
                "l_請求月区分コード)) AND ((@IsNull_得意先コード = 1 AND [得意先コード] IS NULL) OR ([得意先コード] = @Orig" +
                "inal_得意先コード)) AND ((@IsNull_得名 = 1 AND [得名] IS NULL) OR ([得名] = @Original_得名)) A" +
                "ND ((@IsNull_事業所コード = 1 AND [事業所コード] IS NULL) OR ([事業所コード] = @Original_事業所コード)) " +
                "AND ((@IsNull_ランク = 1 AND [ランク] IS NULL) OR ([ランク] = @Original_ランク)) AND ((@IsNu" +
                "ll_部課コード = 1 AND [部課コード] IS NULL) OR ([部課コード] = @Original_部課コード)) AND ((@IsNull_" +
                "担当者コード = 1 AND [担当者コード] IS NULL) OR ([担当者コード] = @Original_担当者コード)) AND ((@IsNull" +
                "_代理店コード = 1 AND [代理店コード] IS NULL) OR ([代理店コード] = @Original_代理店コード)) AND ((@IsNul" +
                "l_代名 = 1 AND [代名] IS NULL) OR ([代名] = @Original_代名)) AND ((@IsNull_納入先コード = 1 AN" +
                "D [納入先コード] IS NULL) OR ([納入先コード] = @Original_納入先コード)) AND ((@IsNull_納名 = 1 AND [" +
                "納名] IS NULL) OR ([納名] = @Original_納名)) AND ((@IsNull_取引先コード = 1 AND [取引先コード] IS " +
                "NULL) OR ([取引先コード] = @Original_取引先コード)) AND ((@IsNull_取引先名 = 1 AND [取引先名] IS NUL" +
                "L) OR ([取引先名] = @Original_取引先名)) AND ((@IsNull_請求先コード = 1 AND [請求先コード] IS NULL) " +
                "OR ([請求先コード] = @Original_請求先コード)) AND ((@IsNull_売上切捨区分 = 1 AND [売上切捨区分] IS NULL)" +
                " OR ([売上切捨区分] = @Original_売上切捨区分)) AND ((@IsNull_売上税区分 = 1 AND [売上税区分] IS NULL) " +
                "OR ([売上税区分] = @Original_売上税区分)) AND ((@IsNull_伝票摘要 = 1 AND [伝票摘要] IS NULL) OR ([" +
                "伝票摘要] = @Original_伝票摘要)) AND ((@IsNull_商品コード = 1 AND [商品コード] IS NULL) OR ([商品コード" +
                "] = @Original_商品コード)) AND ((@IsNull_商名 = 1 AND [商名] IS NULL) OR ([商名] = @Origina" +
                "l_商名)) AND ((@IsNull_規格 = 1 AND [規格] IS NULL) OR ([規格] = @Original_規格)) AND ((@I" +
                "sNull_形式寸法 = 1 AND [形式寸法] IS NULL) OR ([形式寸法] = @Original_形式寸法)) AND ((@IsNull_材" +
                "質 = 1 AND [材質] IS NULL) OR ([材質] = @Original_材質)) AND ((@IsNull_分類 = 1 AND [分類] " +
                "IS NULL) OR ([分類] = @Original_分類)) AND ([在庫管理区分] = @Original_在庫管理区分) AND ((@IsNu" +
                "ll_品種コード = 1 AND [品種コード] IS NULL) OR ([品種コード] = @Original_品種コード)) AND ((@IsNull_" +
                "メーカーコード = 1 AND [メーカーコード] IS NULL) OR ([メーカーコード] = @Original_メーカーコード)) AND ((@Is" +
                "Null_入数 = 1 AND [入数] IS NULL) OR ([入数] = @Original_入数)) AND ((@IsNull_単位コード = 1 " +
                "AND [単位コード] IS NULL) OR ([単位コード] = @Original_単位コード)) AND ((@IsNull_倉庫コード = 1 AND" +
                " [倉庫コード] IS NULL) OR ([倉庫コード] = @Original_倉庫コード)) AND ((@IsNull_ケース数 = 1 AND [ケー" +
                "ス数] IS NULL) OR ([ケース数] = @Original_ケース数)) AND ((@IsNull_数量 = 1 AND [数量] IS NULL" +
                ") OR ([数量] = @Original_数量)) AND ((@IsNull_売上単価 = 1 AND [売上単価] IS NULL) OR ([売上単価" +
                "] = @Original_売上単価)) AND ((@IsNull_売上金額 = 1 AND [売上金額] IS NULL) OR ([売上金額] = @Or" +
                "iginal_売上金額)) AND ((@IsNull_税抜売上金額 = 1 AND [税抜売上金額] IS NULL) OR ([税抜売上金額] = @Ori" +
                "ginal_税抜売上金額)) AND ((@IsNull_原価単価 = 1 AND [原価単価] IS NULL) OR ([原価単価] = @Original" +
                "_原価単価)) AND ((@IsNull_原価金額 = 1 AND [原価金額] IS NULL) OR ([原価金額] = @Original_原価金額))" +
                " AND ((@IsNull_粗利 = 1 AND [粗利] IS NULL) OR ([粗利] = @Original_粗利)) AND ((@IsNull_" +
                "消費税 = 1 AND [消費税] IS NULL) OR ([消費税] = @Original_消費税)) AND ((@IsNull_税抜仕入金額 = 1 " +
                "AND [税抜仕入金額] IS NULL) OR ([税抜仕入金額] = @Original_税抜仕入金額)) AND ((@IsNull_仕入消費税 = 1 " +
                "AND [仕入消費税] IS NULL) OR ([仕入消費税] = @Original_仕入消費税)) AND ((@IsNull_売上返品値引理由区分 = " +
                "1 AND [売上返品値引理由区分] IS NULL) OR ([売上返品値引理由区分] = @Original_売上返品値引理由区分)) AND ((@IsN" +
                "ull_外内税区分 = 1 AND [外内税区分] IS NULL) OR ([外内税区分] = @Original_外内税区分)) AND ((@IsNull" +
                "_消費税率 = 1 AND [消費税率] IS NULL) OR ([消費税率] = @Original_消費税率)) AND ((@IsNull_新消費税率 " +
                "= 1 AND [新消費税率] IS NULL) OR ([新消費税率] = @Original_新消費税率)) AND ((@IsNull_新消費税適用 = " +
                "1 AND [新消費税適用] IS NULL) OR ([新消費税適用] = @Original_新消費税適用)) AND ((@IsNull_明細摘要 = 1" +
                " AND [明細摘要] IS NULL) OR ([明細摘要] = @Original_明細摘要)) AND ((@IsNull_受注番号 = 1 AND [受" +
                "注番号] IS NULL) OR ([受注番号] = @Original_受注番号)) AND ((@IsNull_相手先注文番号 = 1 AND [相手先注文" +
                "番号] IS NULL) OR ([相手先注文番号] = @Original_相手先注文番号)) AND ((@IsNull_自社受付番号 = 1 AND [自" +
                "社受付番号] IS NULL) OR ([自社受付番号] = @Original_自社受付番号)) AND ((@IsNull_仕入伝票番号 = 1 AND [" +
                "仕入伝票番号] IS NULL) OR ([仕入伝票番号] = @Original_仕入伝票番号)) AND ((@IsNull_仕入先コード = 1 AND " +
                "[仕入先コード] IS NULL) OR ([仕入先コード] = @Original_仕入先コード)) AND ((@IsNull_仕名 = 1 AND [仕名" +
                "] IS NULL) OR ([仕名] = @Original_仕名)) AND ((@IsNull_仕入分類 = 1 AND [仕入分類] IS NULL) " +
                "OR ([仕入分類] = @Original_仕入分類)) AND ((@IsNull_仕入事業所コード = 1 AND [仕入事業所コード] IS NULL)" +
                " OR ([仕入事業所コード] = @Original_仕入事業所コード)) AND ((@IsNull_仕入担当者コード = 1 AND [仕入担当者コード]" +
                " IS NULL) OR ([仕入担当者コード] = @Original_仕入担当者コード)) AND ((@IsNull_仕入切捨区分 = 1 AND [仕入" +
                "切捨区分] IS NULL) OR ([仕入切捨区分] = @Original_仕入切捨区分)) AND ((@IsNull_仕入税区分 = 1 AND [仕入" +
                "税区分] IS NULL) OR ([仕入税区分] = @Original_仕入税区分)) AND ((@IsNull_入金番号 = 1 AND [入金番号] " +
                "IS NULL) OR ([入金番号] = @Original_入金番号)) AND ([チェック] = @Original_チェック) AND ([入金チェッ" +
                "ク] = @Original_入金チェック) AND ((@IsNull_回収摘要 = 1 AND [回収摘要] IS NULL) OR ([回収摘要] = @" +
                "Original_回収摘要)) AND ([検収チェック] = @Original_検収チェック) AND ([完了フラグ] = @Original_完了フラグ" +
                ") AND ((@IsNull_WS_ID = 1 AND [WS_ID] IS NULL) OR ([WS_ID] = @Original_WS_ID)) A" +
                "ND ([発行済フラグ] = @Original_発行済フラグ) AND ([受注更新フラグ] = @Original_受注更新フラグ) AND ([出荷更新フ" +
                "ラグ] = @Original_出荷更新フラグ) AND ([得意先更新フラグ] = @Original_得意先更新フラグ) AND ([商品更新フラグ] = " +
                "@Original_商品更新フラグ) AND ([商品倉庫更新フラグ] = @Original_商品倉庫更新フラグ) AND ([商品取引更新フラグ] = @O" +
                "riginal_商品取引更新フラグ) AND ((@IsNull_オペレーターコード = 1 AND [オペレーターコード] IS NULL) OR ([オペレ" +
                "ーターコード] = @Original_オペレーターコード)) AND ((@IsNull_修正オペレーターコード = 1 AND [修正オペレーターコード] " +
                "IS NULL) OR ([修正オペレーターコード] = @Original_修正オペレーターコード)) AND ((@IsNull_受注行 = 1 AND [" +
                "受注行] IS NULL) OR ([受注行] = @Original_受注行)) AND ((@IsNull_処理月日 = 1 AND [処理月日] IS N" +
                "ULL) OR ([処理月日] = @Original_処理月日)) AND ((@IsNull_管理年月 = 1 AND [管理年月] IS NULL) OR" +
                " ([管理年月] = @Original_管理年月)) AND ((@IsNull_受注行番号 = 1 AND [受注行番号] IS NULL) OR ([受注" +
                "行番号] = @Original_受注行番号)) AND ((@IsNull_売上行番号 = 1 AND [売上行番号] IS NULL) OR ([売上行番号" +
                "] = @Original_売上行番号)) AND ((@IsNull_定価 = 1 AND [定価] IS NULL) OR ([定価] = @Origina" +
                "l_定価)) AND ((@IsNull_納品掛率 = 1 AND [納品掛率] IS NULL) OR ([納品掛率] = @Original_納品掛率)) " +
                "AND ((@IsNull_原価掛率 = 1 AND [原価掛率] IS NULL) OR ([原価掛率] = @Original_原価掛率)) AND ((@" +
                "IsNull_発注有無区分 = 1 AND [発注有無区分] IS NULL) OR ([発注有無区分] = @Original_発注有無区分)) AND ((" +
                "@IsNull_回答納期 = 1 AND [回答納期] IS NULL) OR ([回答納期] = @Original_回答納期)) AND ((@IsNull" +
                "_在庫数 = 1 AND [在庫数] IS NULL) OR ([在庫数] = @Original_在庫数)) AND ((@IsNull_受注残数 = 1 A" +
                "ND [受注残数] IS NULL) OR ([受注残数] = @Original_受注残数)) AND ((@IsNull_発注残数 = 1 AND [発注残" +
                "数] IS NULL) OR ([発注残数] = @Original_発注残数)) AND ((@IsNull_納品書発行フラグ = 1 AND [納品書発行フ" +
                "ラグ] IS NULL) OR ([納品書発行フラグ] = @Original_納品書発行フラグ)) AND ((@IsNull_専用伝票発行フラグ = 1 A" +
                "ND [専用伝票発行フラグ] IS NULL) OR ([専用伝票発行フラグ] = @Original_専用伝票発行フラグ)) AND ((@IsNull_売上" +
                "累計 = 1 AND [売上累計] IS NULL) OR ([売上累計] = @Original_売上累計)) AND ((@IsNull_受注番号受注残数 " +
                "= 1 AND [受注番号受注残数] IS NULL) OR ([受注番号受注残数] = @Original_受注番号受注残数)) AND ((@IsNull_" +
                "取引先コード２ = 1 AND [取引先コード２] IS NULL) OR ([取引先コード２] = @Original_取引先コード２)) AND ((@Is" +
                "Null_社名 = 1 AND [社名] IS NULL) OR ([社名] = @Original_社名)) AND ((@IsNull_店名 = 1 AND" +
                " [店名] IS NULL) OR ([店名] = @Original_店名)) AND ((@IsNull_部名 = 1 AND [部名] IS NULL) " +
                "OR ([部名] = @Original_部名)) AND ((@IsNull_発注区分 = 1 AND [発注区分] IS NULL) OR ([発注区分] " +
                "= @Original_発注区分)) AND ((@IsNull_請求月 = 1 AND [請求月] IS NULL) OR ([請求月] = @Origina" +
                "l_請求月)) AND ((@IsNull_ＥＯＳ区分 = 1 AND [ＥＯＳ区分] IS NULL) OR ([ＥＯＳ区分] = @Original_ＥＯＳ" +
                "区分)) AND ((@IsNull_帳票区分 = 1 AND [帳票区分] IS NULL) OR ([帳票区分] = @Original_帳票区分)) AN" +
                "D ((@IsNull_発注単位 = 1 AND [発注単位] IS NULL) OR ([発注単位] = @Original_発注単位)) AND ((@Is" +
                "Null_ＥＯＳ商品コード = 1 AND [ＥＯＳ商品コード] IS NULL) OR ([ＥＯＳ商品コード] = @Original_ＥＯＳ商品コード)) " +
                "AND ((@IsNull_ＥＯＳ商品名 = 1 AND [ＥＯＳ商品名] IS NULL) OR ([ＥＯＳ商品名] = @Original_ＥＯＳ商品名))" +
                " AND ((@IsNull_ＥＯＳ規格 = 1 AND [ＥＯＳ規格] IS NULL) OR ([ＥＯＳ規格] = @Original_ＥＯＳ規格)) AN" +
                "D ((@IsNull_表示価格 = 1 AND [表示価格] IS NULL) OR ([表示価格] = @Original_表示価格)) AND ((@Is" +
                "Null_ＥＯＳ棚番 = 1 AND [ＥＯＳ棚番] IS NULL) OR ([ＥＯＳ棚番] = @Original_ＥＯＳ棚番)) AND ((@IsNul" +
                "l_ＪＡＮコード = 1 AND [ＪＡＮコード] IS NULL) OR ([ＪＡＮコード] = @Original_ＪＡＮコード)) AND ((@IsNu" +
                "ll_メーカー品番 = 1 AND [メーカー品番] IS NULL) OR ([メーカー品番] = @Original_メーカー品番)) AND ((@IsN" +
                "ull_棚番 = 1 AND [棚番] IS NULL) OR ([棚番] = @Original_棚番)) AND ((@IsNull_メーカー名 = 1 A" +
                "ND [メーカー名] IS NULL) OR ([メーカー名] = @Original_メーカー名)) AND ((@IsNull_店コード = 1 AND [" +
                "店コード] IS NULL) OR ([店コード] = @Original_店コード)) AND ((@IsNull_部コード = 1 AND [部コード] I" +
                "S NULL) OR ([部コード] = @Original_部コード)) AND ((@IsNull_エラー区分 = 1 AND [エラー区分] IS NUL" +
                "L) OR ([エラー区分] = @Original_エラー区分)) AND ((@IsNull_更新ビット = 1 AND [更新ビット] IS NULL) " +
                "OR ([更新ビット] = @Original_更新ビット)) AND ((@IsNull_商品番号 = 1 AND [商品番号] IS NULL) OR ([" +
                "商品番号] = @Original_商品番号)) AND ((@IsNull_社コード = 1 AND [社コード] IS NULL) OR ([社コード] =" +
                " @Original_社コード)) AND ((@IsNull_店コードＢ = 1 AND [店コードＢ] IS NULL) OR ([店コードＢ] = @Or" +
                "iginal_店コードＢ)) AND ((@IsNull_直送区分 = 1 AND [直送区分] IS NULL) OR ([直送区分] = @Original" +
                "_直送区分)) AND ((@IsNull_客注区分 = 1 AND [客注区分] IS NULL) OR ([客注区分] = @Original_客注区分))" +
                " AND ((@IsNull_経費区分 = 1 AND [経費区分] IS NULL) OR ([経費区分] = @Original_経費区分)) AND ((" +
                "@IsNull_返品区分 = 1 AND [返品区分] IS NULL) OR ([返品区分] = @Original_返品区分)) AND ((@IsNull" +
                "_本部原価単価 = 1 AND [本部原価単価] IS NULL) OR ([本部原価単価] = @Original_本部原価単価)) AND ((@IsNul" +
                "l_本部原価金額 = 1 AND [本部原価金額] IS NULL) OR ([本部原価金額] = @Original_本部原価金額)) AND ((@IsNu" +
                "ll_納入単価 = 1 AND [納入単価] IS NULL) OR ([納入単価] = @Original_納入単価)) AND ((@IsNull_店舗売価" +
                " = 1 AND [店舗売価] IS NULL) OR ([店舗売価] = @Original_店舗売価)) AND ((@IsNull_大分類コード = 1 " +
                "AND [大分類コード] IS NULL) OR ([大分類コード] = @Original_大分類コード)) AND ((@IsNull_店舗備考 = 1 A" +
                "ND [店舗備考] IS NULL) OR ([店舗備考] = @Original_店舗備考)) AND ((@IsNull_仕入先備考 = 1 AND [仕入" +
                "先備考] IS NULL) OR ([仕入先備考] = @Original_仕入先備考)) AND ((@IsNull_登録番号 = 1 AND [登録番号] " +
                "IS NULL) OR ([登録番号] = @Original_登録番号)) AND ((@IsNull_ドラスタ発注番号 = 1 AND [ドラスタ発注番号]" +
                " IS NULL) OR ([ドラスタ発注番号] = @Original_ドラスタ発注番号)) AND ((@IsNull_客注番号 = 1 AND [客注番号" +
                "] IS NULL) OR ([客注番号] = @Original_客注番号)) AND ((@IsNull_ドラスタ区分 = 1 AND [ドラスタ区分] I" +
                "S NULL) OR ([ドラスタ区分] = @Original_ドラスタ区分)) AND ((@IsNull_欠品理由 = 1 AND [欠品理由] IS N" +
                "ULL) OR ([欠品理由] = @Original_欠品理由)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上修正連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上修正連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_修正処理年月日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正処理年月日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_修正処理年月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正処理年月日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入力区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_出荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理区", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_請求月区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_得意先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_得名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ランク", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ランク", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ランク", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ランク", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部課コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部課コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部課コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部課コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_担当者コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "担当者コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "担当者コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_代理店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_代理店コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_代名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_代名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引先名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引先名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_請求先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上切捨区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上切捨区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上切捨区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_伝票摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商品コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_規格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_形式寸法", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_材質", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_品種コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカーコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_単位コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_倉庫コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ケース数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_数量", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_税抜売上金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜売上金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_税抜売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜売上金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_粗利", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "粗利", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_粗利", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "粗利", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_税抜仕入金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入消費税", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入消費税", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入消費税", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上返品値引理由区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上返品値引理由区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上返品値引理由区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_外内税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税適用", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_明細摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_相手先注文番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先注文番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_相手先注文番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先注文番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_自社受付番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社受付番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_自社受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社受付番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入担当者コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入切捨区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回収摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回収摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回収摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回収摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_検収チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "検収チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発行済フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得意先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品取引更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品取引更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_修正オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理月日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_定価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納品掛率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品掛率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納品掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "納品掛率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価掛率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価掛率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注有無区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注有無区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注有無区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注有無区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_在庫数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納品書発行フラグ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行フラグ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納品書発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_専用伝票発行フラグ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "専用伝票発行フラグ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_専用伝票発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "専用伝票発行フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上累計", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上累計", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上累計", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上累計", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注番号受注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号受注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注番号受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号受注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引先コード２", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード２", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引先コード２", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード２", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_社名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_社名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_請求月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_帳票区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "帳票区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_帳票区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "帳票区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注単位", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注単位", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注単位", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注単位", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ商品コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ商品名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ商品名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ規格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ規格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ規格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_表示価格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "表示価格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_表示価格", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "表示価格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ棚番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ棚番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ棚番", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ棚番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＪＡＮコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＪＡＮコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＪＡＮコード", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＪＡＮコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカー品番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_棚番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカー名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカー名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_エラー区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラー区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_エラー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラー区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_更新ビット", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新ビット", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新ビット", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新ビット", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商品番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_社コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_社コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店コードＢ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コードＢ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店コードＢ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コードＢ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_直送区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "直送区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_直送区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "直送区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_客注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_客注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_経費区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "経費区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_経費区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "経費区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_返品区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "返品区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_返品区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "返品区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本部原価単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本部原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本部原価金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本部原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店舗売価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗売価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店舗売価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗売価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_大分類コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大分類コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_大分類コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大分類コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店舗備考", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗備考", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店舗備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗備考", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入先備考", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先備考", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先備考", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_登録番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "登録番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_登録番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "登録番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ドラスタ発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ドラスタ発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_客注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_客注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ドラスタ区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ドラスタ区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_欠品理由", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "欠品理由", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_欠品理由", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "欠品理由", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T売上修正戻ファイル] ([修正処理年月日], [本支店区分], [処理コード], [入力区分], [処理番号], [エラー" +
                "フラグ], [受発注行数], [受注連番], [出荷番号], [出荷連番], [発注番号], [発注連番], [売上伝票番号], [処理日], [売上日], [" +
                "納入日], [受注日], [納期], [発注納期], [処理区], [売上区分コード], [システム区分], [取引区分], [請求月区分コード], [得意先コ" +
                "ード], [得名], [事業所コード], [ランク], [部課コード], [担当者コード], [代理店コード], [代名], [納入先コード], [納名], [" +
                "取引先コード], [取引先名], [請求先コード], [売上切捨区分], [売上税区分], [伝票摘要], [商品コード], [商名], [規格], [形式寸法" +
                "], [材質], [分類], [在庫管理区分], [品種コード], [メーカーコード], [入数], [単位コード], [倉庫コード], [ケース数], [数量" +
                "], [売上単価], [売上金額], [税抜売上金額], [原価単価], [原価金額], [粗利], [消費税], [税抜仕入金額], [仕入消費税], [売上" +
                "返品値引理由区分], [外内税区分], [消費税率], [新消費税率], [新消費税適用], [明細摘要], [受注番号], [相手先注文番号], [自社受付番" +
                "号], [仕入伝票番号], [仕入先コード], [仕名], [仕入分類], [仕入事業所コード], [仕入担当者コード], [仕入切捨区分], [仕入税区分]," +
                " [入金番号], [チェック], [入金チェック], [回収摘要], [検収チェック], [完了フラグ], [WS_ID], [発行済フラグ], [受注更新フラ" +
                "グ], [出荷更新フラグ], [得意先更新フラグ], [商品更新フラグ], [商品倉庫更新フラグ], [商品取引更新フラグ], [オペレーターコード], [修正" +
                "オペレーターコード], [受注行], [処理月日], [管理年月], [受注行番号], [売上行番号], [定価], [納品掛率], [原価掛率], [発注有無" +
                "区分], [回答納期], [在庫数], [受注残数], [発注残数], [納品書発行フラグ], [専用伝票発行フラグ], [売上累計], [受注番号受注残数]," +
                " [取引先コード２], [社名], [店名], [部名], [発注区分], [請求月], [ＥＯＳ区分], [帳票区分], [発注単位], [ＥＯＳ商品コード]" +
                ", [ＥＯＳ商品名], [ＥＯＳ規格], [表示価格], [ＥＯＳ棚番], [ＪＡＮコード], [メーカー品番], [棚番], [メーカー名], [店コード]," +
                " [部コード], [エラー区分], [更新ビット], [商品番号], [社コード], [店コードＢ], [直送区分], [客注区分], [経費区分], [返品区" +
                "分], [本部原価単価], [本部原価金額], [納入単価], [店舗売価], [大分類コード], [店舗備考], [仕入先備考], [登録番号], [ドラスタ" +
                "発注番号], [客注番号], [ドラスタ区分], [欠品理由]) VALUES (@修正処理年月日, @本支店区分, @処理コード, @入力区分, @処理番号," +
                " @エラーフラグ, @受発注行数, @受注連番, @出荷番号, @出荷連番, @発注番号, @発注連番, @売上伝票番号, @処理日, @売上日, @納入日, " +
                "@受注日, @納期, @発注納期, @処理区, @売上区分コード, @システム区分, @取引区分, @請求月区分コード, @得意先コード, @得名, @事業所コ" +
                "ード, @ランク, @部課コード, @担当者コード, @代理店コード, @代名, @納入先コード, @納名, @取引先コード, @取引先名, @請求先コード, " +
                "@売上切捨区分, @売上税区分, @伝票摘要, @商品コード, @商名, @規格, @形式寸法, @材質, @分類, @在庫管理区分, @品種コード, @メーカ" +
                "ーコード, @入数, @単位コード, @倉庫コード, @ケース数, @数量, @売上単価, @売上金額, @税抜売上金額, @原価単価, @原価金額, @粗利," +
                " @消費税, @税抜仕入金額, @仕入消費税, @売上返品値引理由区分, @外内税区分, @消費税率, @新消費税率, @新消費税適用, @明細摘要, @受注番" +
                "号, @相手先注文番号, @自社受付番号, @仕入伝票番号, @仕入先コード, @仕名, @仕入分類, @仕入事業所コード, @仕入担当者コード, @仕入切捨区" +
                "分, @仕入税区分, @入金番号, @チェック, @入金チェック, @回収摘要, @検収チェック, @完了フラグ, @WS_ID, @発行済フラグ, @受注更新" +
                "フラグ, @出荷更新フラグ, @得意先更新フラグ, @商品更新フラグ, @商品倉庫更新フラグ, @商品取引更新フラグ, @オペレーターコード, @修正オペレータ" +
                "ーコード, @受注行, @処理月日, @管理年月, @受注行番号, @売上行番号, @定価, @納品掛率, @原価掛率, @発注有無区分, @回答納期, @在庫" +
                "数, @受注残数, @発注残数, @納品書発行フラグ, @専用伝票発行フラグ, @売上累計, @受注番号受注残数, @取引先コード２, @社名, @店名, @部" +
                "名, @発注区分, @請求月, @ＥＯＳ区分, @帳票区分, @発注単位, @ＥＯＳ商品コード, @ＥＯＳ商品名, @ＥＯＳ規格, @表示価格, @ＥＯＳ棚番," +
                " @ＪＡＮコード, @メーカー品番, @棚番, @メーカー名, @店コード, @部コード, @エラー区分, @更新ビット, @商品番号, @社コード, @店コー" +
                "ドＢ, @直送区分, @客注区分, @経費区分, @返品区分, @本部原価単価, @本部原価金額, @納入単価, @店舗売価, @大分類コード, @店舗備考, " +
                "@仕入先備考, @登録番号, @ドラスタ発注番号, @客注番号, @ドラスタ区分, @欠品理由);\r\nSELECT 売上修正連番, 修正処理年月日, 本支店区分" +
                ", 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 受注連番, 出荷番号, 出荷連番, 発注番号, 発注連番, 売上伝票番号, 処理日, 売" +
                "上日, 納入日, 受注日, 納期, 発注納期, 処理区, 売上区分コード, システム区分, 取引区分, 請求月区分コード, 得意先コード, 得名, 事業所コード" +
                ", ランク, 部課コード, 担当者コード, 代理店コード, 代名, 納入先コード, 納名, 取引先コード, 取引先名, 請求先コード, 売上切捨区分, 売上税区" +
                "分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, " +
                "ケース数, 数量, 売上単価, 売上金額, 税抜売上金額, 原価単価, 原価金額, 粗利, 消費税, 税抜仕入金額, 仕入消費税, 売上返品値引理由区分, 外内" +
                "税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 受注番号, 相手先注文番号, 自社受付番号, 仕入伝票番号, 仕入先コード, 仕名, 仕入分類," +
                " 仕入事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 入金番号, チェック, 入金チェック, 回収摘要, 検収チェック, 完了フラグ, WS_" +
                "ID, 発行済フラグ, 受注更新フラグ, 出荷更新フラグ, 得意先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, 商品取引更新フラグ, オペレーターコード" +
                ", 修正オペレーターコード, 受注行, 処理月日, 管理年月, 受注行番号, 売上行番号, 定価, 納品掛率, 原価掛率, 発注有無区分, 回答納期, 在庫数," +
                " 受注残数, 発注残数, 納品書発行フラグ, 専用伝票発行フラグ, 売上累計, 受注番号受注残数, 取引先コード２, 社名, 店名, 部名, 発注区分, 請求月" +
                ", ＥＯＳ区分, 帳票区分, 発注単位, ＥＯＳ商品コード, ＥＯＳ商品名, ＥＯＳ規格, 表示価格, ＥＯＳ棚番, ＪＡＮコード, メーカー品番, 棚番, メ" +
                "ーカー名, 店コード, 部コード, エラー区分, 更新ビット, 商品番号, 社コード, 店コードＢ, 直送区分, 客注区分, 経費区分, 返品区分, 本部原価単" +
                "価, 本部原価金額, 納入単価, 店舗売価, 大分類コード, 店舗備考, 仕入先備考, 登録番号, ドラスタ発注番号, 客注番号, ドラスタ区分, 欠品理由 F" +
                "ROM T売上修正戻ファイル WHERE (売上修正連番 = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@修正処理年月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正処理年月日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ランク", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ランク", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部課コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部課コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "担当者コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@代理店コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@代名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引先名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上切捨区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@税抜売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜売上金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@粗利", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "粗利", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入消費税", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上返品値引理由区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@相手先注文番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先注文番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@自社受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社受付番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回収摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回収摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@検収チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "検収チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発行済フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得意先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品取引更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品取引更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納品掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "納品掛率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注有無区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注有無区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納品書発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@専用伝票発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "専用伝票発行フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上累計", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上累計", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号受注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引先コード２", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード２", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@社名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@帳票区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "帳票区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注単位", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注単位", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ商品名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ規格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@表示価格", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "表示価格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ棚番", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ棚番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＪＡＮコード", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＪＡＮコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカー名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@エラー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラー区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新ビット", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新ビット", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@社コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店コードＢ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コードＢ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@直送区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "直送区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@客注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@経費区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "経費区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@返品区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "返品区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本部原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本部原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店舗売価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗売価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@大分類コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大分類コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店舗備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗備考", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先備考", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@登録番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "登録番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ドラスタ発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@客注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ドラスタ区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@欠品理由", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "欠品理由", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T売上修正戻ファイル] SET [修正処理年月日] = @修正処理年月日, [本支店区分] = @本支店区分, [処理コード] = @" +
                "処理コード, [入力区分] = @入力区分, [処理番号] = @処理番号, [エラーフラグ] = @エラーフラグ, [受発注行数] = @受発注行数, [受注" +
                "連番] = @受注連番, [出荷番号] = @出荷番号, [出荷連番] = @出荷連番, [発注番号] = @発注番号, [発注連番] = @発注連番, [売上" +
                "伝票番号] = @売上伝票番号, [処理日] = @処理日, [売上日] = @売上日, [納入日] = @納入日, [受注日] = @受注日, [納期] = " +
                "@納期, [発注納期] = @発注納期, [処理区] = @処理区, [売上区分コード] = @売上区分コード, [システム区分] = @システム区分, [取引" +
                "区分] = @取引区分, [請求月区分コード] = @請求月区分コード, [得意先コード] = @得意先コード, [得名] = @得名, [事業所コード] = " +
                "@事業所コード, [ランク] = @ランク, [部課コード] = @部課コード, [担当者コード] = @担当者コード, [代理店コード] = @代理店コード," +
                " [代名] = @代名, [納入先コード] = @納入先コード, [納名] = @納名, [取引先コード] = @取引先コード, [取引先名] = @取引先名," +
                " [請求先コード] = @請求先コード, [売上切捨区分] = @売上切捨区分, [売上税区分] = @売上税区分, [伝票摘要] = @伝票摘要, [商品コー" +
                "ド] = @商品コード, [商名] = @商名, [規格] = @規格, [形式寸法] = @形式寸法, [材質] = @材質, [分類] = @分類, [在庫" +
                "管理区分] = @在庫管理区分, [品種コード] = @品種コード, [メーカーコード] = @メーカーコード, [入数] = @入数, [単位コード] = @" +
                "単位コード, [倉庫コード] = @倉庫コード, [ケース数] = @ケース数, [数量] = @数量, [売上単価] = @売上単価, [売上金額] = @売" +
                "上金額, [税抜売上金額] = @税抜売上金額, [原価単価] = @原価単価, [原価金額] = @原価金額, [粗利] = @粗利, [消費税] = @消費" +
                "税, [税抜仕入金額] = @税抜仕入金額, [仕入消費税] = @仕入消費税, [売上返品値引理由区分] = @売上返品値引理由区分, [外内税区分] = @" +
                "外内税区分, [消費税率] = @消費税率, [新消費税率] = @新消費税率, [新消費税適用] = @新消費税適用, [明細摘要] = @明細摘要, [受注" +
                "番号] = @受注番号, [相手先注文番号] = @相手先注文番号, [自社受付番号] = @自社受付番号, [仕入伝票番号] = @仕入伝票番号, [仕入先コ" +
                "ード] = @仕入先コード, [仕名] = @仕名, [仕入分類] = @仕入分類, [仕入事業所コード] = @仕入事業所コード, [仕入担当者コード] = " +
                "@仕入担当者コード, [仕入切捨区分] = @仕入切捨区分, [仕入税区分] = @仕入税区分, [入金番号] = @入金番号, [チェック] = @チェック," +
                " [入金チェック] = @入金チェック, [回収摘要] = @回収摘要, [検収チェック] = @検収チェック, [完了フラグ] = @完了フラグ, [WS_I" +
                "D] = @WS_ID, [発行済フラグ] = @発行済フラグ, [受注更新フラグ] = @受注更新フラグ, [出荷更新フラグ] = @出荷更新フラグ, [得意" +
                "先更新フラグ] = @得意先更新フラグ, [商品更新フラグ] = @商品更新フラグ, [商品倉庫更新フラグ] = @商品倉庫更新フラグ, [商品取引更新フラグ]" +
                " = @商品取引更新フラグ, [オペレーターコード] = @オペレーターコード, [修正オペレーターコード] = @修正オペレーターコード, [受注行] = @" +
                "受注行, [処理月日] = @処理月日, [管理年月] = @管理年月, [受注行番号] = @受注行番号, [売上行番号] = @売上行番号, [定価] = " +
                "@定価, [納品掛率] = @納品掛率, [原価掛率] = @原価掛率, [発注有無区分] = @発注有無区分, [回答納期] = @回答納期, [在庫数] =" +
                " @在庫数, [受注残数] = @受注残数, [発注残数] = @発注残数, [納品書発行フラグ] = @納品書発行フラグ, [専用伝票発行フラグ] = @専用" +
                "伝票発行フラグ, [売上累計] = @売上累計, [受注番号受注残数] = @受注番号受注残数, [取引先コード２] = @取引先コード２, [社名] = @社" +
                "名, [店名] = @店名, [部名] = @部名, [発注区分] = @発注区分, [請求月] = @請求月, [ＥＯＳ区分] = @ＥＯＳ区分, [帳票区分" +
                "] = @帳票区分, [発注単位] = @発注単位, [ＥＯＳ商品コード] = @ＥＯＳ商品コード, [ＥＯＳ商品名] = @ＥＯＳ商品名, [ＥＯＳ規格] =" +
                " @ＥＯＳ規格, [表示価格] = @表示価格, [ＥＯＳ棚番] = @ＥＯＳ棚番, [ＪＡＮコード] = @ＪＡＮコード, [メーカー品番] = @メーカー品" +
                "番, [棚番] = @棚番, [メーカー名] = @メーカー名, [店コード] = @店コード, [部コード] = @部コード, [エラー区分] = @エラー区" +
                "分, [更新ビット] = @更新ビット, [商品番号] = @商品番号, [社コード] = @社コード, [店コードＢ] = @店コードＢ, [直送区分] = " +
                "@直送区分, [客注区分] = @客注区分, [経費区分] = @経費区分, [返品区分] = @返品区分, [本部原価単価] = @本部原価単価, [本部原価" +
                "金額] = @本部原価金額, [納入単価] = @納入単価, [店舗売価] = @店舗売価, [大分類コード] = @大分類コード, [店舗備考] = @店舗備" +
                "考, [仕入先備考] = @仕入先備考, [登録番号] = @登録番号, [ドラスタ発注番号] = @ドラスタ発注番号, [客注番号] = @客注番号, [ドラ" +
                "スタ区分] = @ドラスタ区分, [欠品理由] = @欠品理由 WHERE (([売上修正連番] = @Original_売上修正連番) AND ((@IsNu" +
                "ll_修正処理年月日 = 1 AND [修正処理年月日] IS NULL) OR ([修正処理年月日] = @Original_修正処理年月日)) AND ((" +
                "@IsNull_本支店区分 = 1 AND [本支店区分] IS NULL) OR ([本支店区分] = @Original_本支店区分)) AND ((@Is" +
                "Null_処理コード = 1 AND [処理コード] IS NULL) OR ([処理コード] = @Original_処理コード)) AND ((@IsNul" +
                "l_入力区分 = 1 AND [入力区分] IS NULL) OR ([入力区分] = @Original_入力区分)) AND ((@IsNull_処理番号 " +
                "= 1 AND [処理番号] IS NULL) OR ([処理番号] = @Original_処理番号)) AND ([エラーフラグ] = @Original_" +
                "エラーフラグ) AND ((@IsNull_受発注行数 = 1 AND [受発注行数] IS NULL) OR ([受発注行数] = @Original_受発注" +
                "行数)) AND ((@IsNull_受注連番 = 1 AND [受注連番] IS NULL) OR ([受注連番] = @Original_受注連番)) AN" +
                "D ((@IsNull_出荷番号 = 1 AND [出荷番号] IS NULL) OR ([出荷番号] = @Original_出荷番号)) AND ((@Is" +
                "Null_出荷連番 = 1 AND [出荷連番] IS NULL) OR ([出荷連番] = @Original_出荷連番)) AND ((@IsNull_発注" +
                "番号 = 1 AND [発注番号] IS NULL) OR ([発注番号] = @Original_発注番号)) AND ((@IsNull_発注連番 = 1 " +
                "AND [発注連番] IS NULL) OR ([発注連番] = @Original_発注連番)) AND ((@IsNull_売上伝票番号 = 1 AND [" +
                "売上伝票番号] IS NULL) OR ([売上伝票番号] = @Original_売上伝票番号)) AND ((@IsNull_処理日 = 1 AND [処理" +
                "日] IS NULL) OR ([処理日] = @Original_処理日)) AND ((@IsNull_売上日 = 1 AND [売上日] IS NULL)" +
                " OR ([売上日] = @Original_売上日)) AND ((@IsNull_納入日 = 1 AND [納入日] IS NULL) OR ([納入日] " +
                "= @Original_納入日)) AND ((@IsNull_受注日 = 1 AND [受注日] IS NULL) OR ([受注日] = @Original" +
                "_受注日)) AND ((@IsNull_納期 = 1 AND [納期] IS NULL) OR ([納期] = @Original_納期)) AND ((@I" +
                "sNull_発注納期 = 1 AND [発注納期] IS NULL) OR ([発注納期] = @Original_発注納期)) AND ((@IsNull_処" +
                "理区 = 1 AND [処理区] IS NULL) OR ([処理区] = @Original_処理区)) AND ((@IsNull_売上区分コード = 1 " +
                "AND [売上区分コード] IS NULL) OR ([売上区分コード] = @Original_売上区分コード)) AND ([システム区分] = @Orig" +
                "inal_システム区分) AND ((@IsNull_取引区分 = 1 AND [取引区分] IS NULL) OR ([取引区分] = @Original_取" +
                "引区分)) AND ((@IsNull_請求月区分コード = 1 AND [請求月区分コード] IS NULL) OR ([請求月区分コード] = @Origi" +
                "nal_請求月区分コード)) AND ((@IsNull_得意先コード = 1 AND [得意先コード] IS NULL) OR ([得意先コード] = @Or" +
                "iginal_得意先コード)) AND ((@IsNull_得名 = 1 AND [得名] IS NULL) OR ([得名] = @Original_得名))" +
                " AND ((@IsNull_事業所コード = 1 AND [事業所コード] IS NULL) OR ([事業所コード] = @Original_事業所コード)" +
                ") AND ((@IsNull_ランク = 1 AND [ランク] IS NULL) OR ([ランク] = @Original_ランク)) AND ((@Is" +
                "Null_部課コード = 1 AND [部課コード] IS NULL) OR ([部課コード] = @Original_部課コード)) AND ((@IsNul" +
                "l_担当者コード = 1 AND [担当者コード] IS NULL) OR ([担当者コード] = @Original_担当者コード)) AND ((@IsNu" +
                "ll_代理店コード = 1 AND [代理店コード] IS NULL) OR ([代理店コード] = @Original_代理店コード)) AND ((@IsN" +
                "ull_代名 = 1 AND [代名] IS NULL) OR ([代名] = @Original_代名)) AND ((@IsNull_納入先コード = 1 " +
                "AND [納入先コード] IS NULL) OR ([納入先コード] = @Original_納入先コード)) AND ((@IsNull_納名 = 1 AND" +
                " [納名] IS NULL) OR ([納名] = @Original_納名)) AND ((@IsNull_取引先コード = 1 AND [取引先コード] I" +
                "S NULL) OR ([取引先コード] = @Original_取引先コード)) AND ((@IsNull_取引先名 = 1 AND [取引先名] IS N" +
                "ULL) OR ([取引先名] = @Original_取引先名)) AND ((@IsNull_請求先コード = 1 AND [請求先コード] IS NULL" +
                ") OR ([請求先コード] = @Original_請求先コード)) AND ((@IsNull_売上切捨区分 = 1 AND [売上切捨区分] IS NUL" +
                "L) OR ([売上切捨区分] = @Original_売上切捨区分)) AND ((@IsNull_売上税区分 = 1 AND [売上税区分] IS NULL" +
                ") OR ([売上税区分] = @Original_売上税区分)) AND ((@IsNull_伝票摘要 = 1 AND [伝票摘要] IS NULL) OR " +
                "([伝票摘要] = @Original_伝票摘要)) AND ((@IsNull_商品コード = 1 AND [商品コード] IS NULL) OR ([商品コ" +
                "ード] = @Original_商品コード)) AND ((@IsNull_商名 = 1 AND [商名] IS NULL) OR ([商名] = @Origi" +
                "nal_商名)) AND ((@IsNull_規格 = 1 AND [規格] IS NULL) OR ([規格] = @Original_規格)) AND ((" +
                "@IsNull_形式寸法 = 1 AND [形式寸法] IS NULL) OR ([形式寸法] = @Original_形式寸法)) AND ((@IsNull" +
                "_材質 = 1 AND [材質] IS NULL) OR ([材質] = @Original_材質)) AND ((@IsNull_分類 = 1 AND [分類" +
                "] IS NULL) OR ([分類] = @Original_分類)) AND ([在庫管理区分] = @Original_在庫管理区分) AND ((@Is" +
                "Null_品種コード = 1 AND [品種コード] IS NULL) OR ([品種コード] = @Original_品種コード)) AND ((@IsNul" +
                "l_メーカーコード = 1 AND [メーカーコード] IS NULL) OR ([メーカーコード] = @Original_メーカーコード)) AND ((@" +
                "IsNull_入数 = 1 AND [入数] IS NULL) OR ([入数] = @Original_入数)) AND ((@IsNull_単位コード = " +
                "1 AND [単位コード] IS NULL) OR ([単位コード] = @Original_単位コード)) AND ((@IsNull_倉庫コード = 1 A" +
                "ND [倉庫コード] IS NULL) OR ([倉庫コード] = @Original_倉庫コード)) AND ((@IsNull_ケース数 = 1 AND [" +
                "ケース数] IS NULL) OR ([ケース数] = @Original_ケース数)) AND ((@IsNull_数量 = 1 AND [数量] IS NU" +
                "LL) OR ([数量] = @Original_数量)) AND ((@IsNull_売上単価 = 1 AND [売上単価] IS NULL) OR ([売上" +
                "単価] = @Original_売上単価)) AND ((@IsNull_売上金額 = 1 AND [売上金額] IS NULL) OR ([売上金額] = @" +
                "Original_売上金額)) AND ((@IsNull_税抜売上金額 = 1 AND [税抜売上金額] IS NULL) OR ([税抜売上金額] = @O" +
                "riginal_税抜売上金額)) AND ((@IsNull_原価単価 = 1 AND [原価単価] IS NULL) OR ([原価単価] = @Origin" +
                "al_原価単価)) AND ((@IsNull_原価金額 = 1 AND [原価金額] IS NULL) OR ([原価金額] = @Original_原価金額" +
                ")) AND ((@IsNull_粗利 = 1 AND [粗利] IS NULL) OR ([粗利] = @Original_粗利)) AND ((@IsNul" +
                "l_消費税 = 1 AND [消費税] IS NULL) OR ([消費税] = @Original_消費税)) AND ((@IsNull_税抜仕入金額 = " +
                "1 AND [税抜仕入金額] IS NULL) OR ([税抜仕入金額] = @Original_税抜仕入金額)) AND ((@IsNull_仕入消費税 = " +
                "1 AND [仕入消費税] IS NULL) OR ([仕入消費税] = @Original_仕入消費税)) AND ((@IsNull_売上返品値引理由区分 " +
                "= 1 AND [売上返品値引理由区分] IS NULL) OR ([売上返品値引理由区分] = @Original_売上返品値引理由区分)) AND ((@I" +
                "sNull_外内税区分 = 1 AND [外内税区分] IS NULL) OR ([外内税区分] = @Original_外内税区分)) AND ((@IsNu" +
                "ll_消費税率 = 1 AND [消費税率] IS NULL) OR ([消費税率] = @Original_消費税率)) AND ((@IsNull_新消費税" +
                "率 = 1 AND [新消費税率] IS NULL) OR ([新消費税率] = @Original_新消費税率)) AND ((@IsNull_新消費税適用 " +
                "= 1 AND [新消費税適用] IS NULL) OR ([新消費税適用] = @Original_新消費税適用)) AND ((@IsNull_明細摘要 =" +
                " 1 AND [明細摘要] IS NULL) OR ([明細摘要] = @Original_明細摘要)) AND ((@IsNull_受注番号 = 1 AND " +
                "[受注番号] IS NULL) OR ([受注番号] = @Original_受注番号)) AND ((@IsNull_相手先注文番号 = 1 AND [相手先" +
                "注文番号] IS NULL) OR ([相手先注文番号] = @Original_相手先注文番号)) AND ((@IsNull_自社受付番号 = 1 AND " +
                "[自社受付番号] IS NULL) OR ([自社受付番号] = @Original_自社受付番号)) AND ((@IsNull_仕入伝票番号 = 1 AND" +
                " [仕入伝票番号] IS NULL) OR ([仕入伝票番号] = @Original_仕入伝票番号)) AND ((@IsNull_仕入先コード = 1 AN" +
                "D [仕入先コード] IS NULL) OR ([仕入先コード] = @Original_仕入先コード)) AND ((@IsNull_仕名 = 1 AND [" +
                "仕名] IS NULL) OR ([仕名] = @Original_仕名)) AND ((@IsNull_仕入分類 = 1 AND [仕入分類] IS NULL" +
                ") OR ([仕入分類] = @Original_仕入分類)) AND ((@IsNull_仕入事業所コード = 1 AND [仕入事業所コード] IS NUL" +
                "L) OR ([仕入事業所コード] = @Original_仕入事業所コード)) AND ((@IsNull_仕入担当者コード = 1 AND [仕入担当者コー" +
                "ド] IS NULL) OR ([仕入担当者コード] = @Original_仕入担当者コード)) AND ((@IsNull_仕入切捨区分 = 1 AND [" +
                "仕入切捨区分] IS NULL) OR ([仕入切捨区分] = @Original_仕入切捨区分)) AND ((@IsNull_仕入税区分 = 1 AND [" +
                "仕入税区分] IS NULL) OR ([仕入税区分] = @Original_仕入税区分)) AND ((@IsNull_入金番号 = 1 AND [入金番号" +
                "] IS NULL) OR ([入金番号] = @Original_入金番号)) AND ([チェック] = @Original_チェック) AND ([入金チ" +
                "ェック] = @Original_入金チェック) AND ((@IsNull_回収摘要 = 1 AND [回収摘要] IS NULL) OR ([回収摘要] =" +
                " @Original_回収摘要)) AND ([検収チェック] = @Original_検収チェック) AND ([完了フラグ] = @Original_完了フ" +
                "ラグ) AND ((@IsNull_WS_ID = 1 AND [WS_ID] IS NULL) OR ([WS_ID] = @Original_WS_ID))" +
                " AND ([発行済フラグ] = @Original_発行済フラグ) AND ([受注更新フラグ] = @Original_受注更新フラグ) AND ([出荷更" +
                "新フラグ] = @Original_出荷更新フラグ) AND ([得意先更新フラグ] = @Original_得意先更新フラグ) AND ([商品更新フラグ] " +
                "= @Original_商品更新フラグ) AND ([商品倉庫更新フラグ] = @Original_商品倉庫更新フラグ) AND ([商品取引更新フラグ] = " +
                "@Original_商品取引更新フラグ) AND ((@IsNull_オペレーターコード = 1 AND [オペレーターコード] IS NULL) OR ([オ" +
                "ペレーターコード] = @Original_オペレーターコード)) AND ((@IsNull_修正オペレーターコード = 1 AND [修正オペレーターコード" +
                "] IS NULL) OR ([修正オペレーターコード] = @Original_修正オペレーターコード)) AND ((@IsNull_受注行 = 1 AND" +
                " [受注行] IS NULL) OR ([受注行] = @Original_受注行)) AND ((@IsNull_処理月日 = 1 AND [処理月日] IS" +
                " NULL) OR ([処理月日] = @Original_処理月日)) AND ((@IsNull_管理年月 = 1 AND [管理年月] IS NULL) " +
                "OR ([管理年月] = @Original_管理年月)) AND ((@IsNull_受注行番号 = 1 AND [受注行番号] IS NULL) OR ([" +
                "受注行番号] = @Original_受注行番号)) AND ((@IsNull_売上行番号 = 1 AND [売上行番号] IS NULL) OR ([売上行" +
                "番号] = @Original_売上行番号)) AND ((@IsNull_定価 = 1 AND [定価] IS NULL) OR ([定価] = @Origi" +
                "nal_定価)) AND ((@IsNull_納品掛率 = 1 AND [納品掛率] IS NULL) OR ([納品掛率] = @Original_納品掛率)" +
                ") AND ((@IsNull_原価掛率 = 1 AND [原価掛率] IS NULL) OR ([原価掛率] = @Original_原価掛率)) AND (" +
                "(@IsNull_発注有無区分 = 1 AND [発注有無区分] IS NULL) OR ([発注有無区分] = @Original_発注有無区分)) AND " +
                "((@IsNull_回答納期 = 1 AND [回答納期] IS NULL) OR ([回答納期] = @Original_回答納期)) AND ((@IsNu" +
                "ll_在庫数 = 1 AND [在庫数] IS NULL) OR ([在庫数] = @Original_在庫数)) AND ((@IsNull_受注残数 = 1" +
                " AND [受注残数] IS NULL) OR ([受注残数] = @Original_受注残数)) AND ((@IsNull_発注残数 = 1 AND [発" +
                "注残数] IS NULL) OR ([発注残数] = @Original_発注残数)) AND ((@IsNull_納品書発行フラグ = 1 AND [納品書発" +
                "行フラグ] IS NULL) OR ([納品書発行フラグ] = @Original_納品書発行フラグ)) AND ((@IsNull_専用伝票発行フラグ = 1" +
                " AND [専用伝票発行フラグ] IS NULL) OR ([専用伝票発行フラグ] = @Original_専用伝票発行フラグ)) AND ((@IsNull_" +
                "売上累計 = 1 AND [売上累計] IS NULL) OR ([売上累計] = @Original_売上累計)) AND ((@IsNull_受注番号受注残" +
                "数 = 1 AND [受注番号受注残数] IS NULL) OR ([受注番号受注残数] = @Original_受注番号受注残数)) AND ((@IsNul" +
                "l_取引先コード２ = 1 AND [取引先コード２] IS NULL) OR ([取引先コード２] = @Original_取引先コード２)) AND ((@" +
                "IsNull_社名 = 1 AND [社名] IS NULL) OR ([社名] = @Original_社名)) AND ((@IsNull_店名 = 1 A" +
                "ND [店名] IS NULL) OR ([店名] = @Original_店名)) AND ((@IsNull_部名 = 1 AND [部名] IS NULL" +
                ") OR ([部名] = @Original_部名)) AND ((@IsNull_発注区分 = 1 AND [発注区分] IS NULL) OR ([発注区分" +
                "] = @Original_発注区分)) AND ((@IsNull_請求月 = 1 AND [請求月] IS NULL) OR ([請求月] = @Origi" +
                "nal_請求月)) AND ((@IsNull_ＥＯＳ区分 = 1 AND [ＥＯＳ区分] IS NULL) OR ([ＥＯＳ区分] = @Original_Ｅ" +
                "ＯＳ区分)) AND ((@IsNull_帳票区分 = 1 AND [帳票区分] IS NULL) OR ([帳票区分] = @Original_帳票区分)) " +
                "AND ((@IsNull_発注単位 = 1 AND [発注単位] IS NULL) OR ([発注単位] = @Original_発注単位)) AND ((@" +
                "IsNull_ＥＯＳ商品コード = 1 AND [ＥＯＳ商品コード] IS NULL) OR ([ＥＯＳ商品コード] = @Original_ＥＯＳ商品コード)" +
                ") AND ((@IsNull_ＥＯＳ商品名 = 1 AND [ＥＯＳ商品名] IS NULL) OR ([ＥＯＳ商品名] = @Original_ＥＯＳ商品名" +
                ")) AND ((@IsNull_ＥＯＳ規格 = 1 AND [ＥＯＳ規格] IS NULL) OR ([ＥＯＳ規格] = @Original_ＥＯＳ規格)) " +
                "AND ((@IsNull_表示価格 = 1 AND [表示価格] IS NULL) OR ([表示価格] = @Original_表示価格)) AND ((@" +
                "IsNull_ＥＯＳ棚番 = 1 AND [ＥＯＳ棚番] IS NULL) OR ([ＥＯＳ棚番] = @Original_ＥＯＳ棚番)) AND ((@IsN" +
                "ull_ＪＡＮコード = 1 AND [ＪＡＮコード] IS NULL) OR ([ＪＡＮコード] = @Original_ＪＡＮコード)) AND ((@Is" +
                "Null_メーカー品番 = 1 AND [メーカー品番] IS NULL) OR ([メーカー品番] = @Original_メーカー品番)) AND ((@I" +
                "sNull_棚番 = 1 AND [棚番] IS NULL) OR ([棚番] = @Original_棚番)) AND ((@IsNull_メーカー名 = 1" +
                " AND [メーカー名] IS NULL) OR ([メーカー名] = @Original_メーカー名)) AND ((@IsNull_店コード = 1 AND" +
                " [店コード] IS NULL) OR ([店コード] = @Original_店コード)) AND ((@IsNull_部コード = 1 AND [部コード]" +
                " IS NULL) OR ([部コード] = @Original_部コード)) AND ((@IsNull_エラー区分 = 1 AND [エラー区分] IS N" +
                "ULL) OR ([エラー区分] = @Original_エラー区分)) AND ((@IsNull_更新ビット = 1 AND [更新ビット] IS NULL" +
                ") OR ([更新ビット] = @Original_更新ビット)) AND ((@IsNull_商品番号 = 1 AND [商品番号] IS NULL) OR " +
                "([商品番号] = @Original_商品番号)) AND ((@IsNull_社コード = 1 AND [社コード] IS NULL) OR ([社コード]" +
                " = @Original_社コード)) AND ((@IsNull_店コードＢ = 1 AND [店コードＢ] IS NULL) OR ([店コードＢ] = @" +
                "Original_店コードＢ)) AND ((@IsNull_直送区分 = 1 AND [直送区分] IS NULL) OR ([直送区分] = @Origin" +
                "al_直送区分)) AND ((@IsNull_客注区分 = 1 AND [客注区分] IS NULL) OR ([客注区分] = @Original_客注区分" +
                ")) AND ((@IsNull_経費区分 = 1 AND [経費区分] IS NULL) OR ([経費区分] = @Original_経費区分)) AND " +
                "((@IsNull_返品区分 = 1 AND [返品区分] IS NULL) OR ([返品区分] = @Original_返品区分)) AND ((@IsNu" +
                "ll_本部原価単価 = 1 AND [本部原価単価] IS NULL) OR ([本部原価単価] = @Original_本部原価単価)) AND ((@IsN" +
                "ull_本部原価金額 = 1 AND [本部原価金額] IS NULL) OR ([本部原価金額] = @Original_本部原価金額)) AND ((@Is" +
                "Null_納入単価 = 1 AND [納入単価] IS NULL) OR ([納入単価] = @Original_納入単価)) AND ((@IsNull_店舗" +
                "売価 = 1 AND [店舗売価] IS NULL) OR ([店舗売価] = @Original_店舗売価)) AND ((@IsNull_大分類コード = " +
                "1 AND [大分類コード] IS NULL) OR ([大分類コード] = @Original_大分類コード)) AND ((@IsNull_店舗備考 = 1" +
                " AND [店舗備考] IS NULL) OR ([店舗備考] = @Original_店舗備考)) AND ((@IsNull_仕入先備考 = 1 AND [" +
                "仕入先備考] IS NULL) OR ([仕入先備考] = @Original_仕入先備考)) AND ((@IsNull_登録番号 = 1 AND [登録番号" +
                "] IS NULL) OR ([登録番号] = @Original_登録番号)) AND ((@IsNull_ドラスタ発注番号 = 1 AND [ドラスタ発注番" +
                "号] IS NULL) OR ([ドラスタ発注番号] = @Original_ドラスタ発注番号)) AND ((@IsNull_客注番号 = 1 AND [客注" +
                "番号] IS NULL) OR ([客注番号] = @Original_客注番号)) AND ((@IsNull_ドラスタ区分 = 1 AND [ドラスタ区分]" +
                " IS NULL) OR ([ドラスタ区分] = @Original_ドラスタ区分)) AND ((@IsNull_欠品理由 = 1 AND [欠品理由] IS" +
                " NULL) OR ([欠品理由] = @Original_欠品理由)));\r\nSELECT 売上修正連番, 修正処理年月日, 本支店区分, 処理コード, 入力" +
                "区分, 処理番号, エラーフラグ, 受発注行数, 受注連番, 出荷番号, 出荷連番, 発注番号, 発注連番, 売上伝票番号, 処理日, 売上日, 納入日, 受注" +
                "日, 納期, 発注納期, 処理区, 売上区分コード, システム区分, 取引区分, 請求月区分コード, 得意先コード, 得名, 事業所コード, ランク, 部課コー" +
                "ド, 担当者コード, 代理店コード, 代名, 納入先コード, 納名, 取引先コード, 取引先名, 請求先コード, 売上切捨区分, 売上税区分, 伝票摘要, 商品" +
                "コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 売" +
                "上単価, 売上金額, 税抜売上金額, 原価単価, 原価金額, 粗利, 消費税, 税抜仕入金額, 仕入消費税, 売上返品値引理由区分, 外内税区分, 消費税率, " +
                "新消費税率, 新消費税適用, 明細摘要, 受注番号, 相手先注文番号, 自社受付番号, 仕入伝票番号, 仕入先コード, 仕名, 仕入分類, 仕入事業所コード, " +
                "仕入担当者コード, 仕入切捨区分, 仕入税区分, 入金番号, チェック, 入金チェック, 回収摘要, 検収チェック, 完了フラグ, WS_ID, 発行済フラグ," +
                " 受注更新フラグ, 出荷更新フラグ, 得意先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, 商品取引更新フラグ, オペレーターコード, 修正オペレーターコ" +
                "ード, 受注行, 処理月日, 管理年月, 受注行番号, 売上行番号, 定価, 納品掛率, 原価掛率, 発注有無区分, 回答納期, 在庫数, 受注残数, 発注残数" +
                ", 納品書発行フラグ, 専用伝票発行フラグ, 売上累計, 受注番号受注残数, 取引先コード２, 社名, 店名, 部名, 発注区分, 請求月, ＥＯＳ区分, 帳票" +
                "区分, 発注単位, ＥＯＳ商品コード, ＥＯＳ商品名, ＥＯＳ規格, 表示価格, ＥＯＳ棚番, ＪＡＮコード, メーカー品番, 棚番, メーカー名, 店コード," +
                " 部コード, エラー区分, 更新ビット, 商品番号, 社コード, 店コードＢ, 直送区分, 客注区分, 経費区分, 返品区分, 本部原価単価, 本部原価金額, " +
                "納入単価, 店舗売価, 大分類コード, 店舗備考, 仕入先備考, 登録番号, ドラスタ発注番号, 客注番号, ドラスタ区分, 欠品理由 FROM T売上修正戻フ" +
                "ァイル WHERE (売上修正連番 = @売上修正連番)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@修正処理年月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正処理年月日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ランク", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ランク", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部課コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部課コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "担当者コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@代理店コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@代名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引先名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上切捨区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@税抜売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜売上金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@粗利", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "粗利", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入消費税", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上返品値引理由区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@相手先注文番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先注文番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@自社受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社受付番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回収摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回収摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@検収チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "検収チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発行済フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得意先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品取引更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品取引更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納品掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "納品掛率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注有無区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注有無区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納品書発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@専用伝票発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "専用伝票発行フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上累計", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上累計", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号受注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引先コード２", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード２", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@社名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@帳票区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "帳票区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注単位", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注単位", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ商品名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ規格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@表示価格", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "表示価格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ棚番", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ棚番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＪＡＮコード", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＪＡＮコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカー名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@エラー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラー区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新ビット", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新ビット", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@社コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店コードＢ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コードＢ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@直送区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "直送区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@客注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@経費区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "経費区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@返品区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "返品区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本部原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本部原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店舗売価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗売価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@大分類コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大分類コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店舗備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗備考", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先備考", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@登録番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "登録番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ドラスタ発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@客注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ドラスタ区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@欠品理由", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "欠品理由", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上修正連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上修正連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_修正処理年月日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正処理年月日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_修正処理年月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正処理年月日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入力区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_出荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理区", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_請求月区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_得意先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_得名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ランク", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ランク", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ランク", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ランク", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部課コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部課コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部課コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部課コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_担当者コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "担当者コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "担当者コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_代理店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_代理店コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_代名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_代名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引先名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引先名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_請求先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上切捨区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上切捨区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上切捨区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_伝票摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商品コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_規格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_形式寸法", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_材質", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_品種コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカーコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_単位コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_倉庫コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ケース数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_数量", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_税抜売上金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜売上金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_税抜売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜売上金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_粗利", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "粗利", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_粗利", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "粗利", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_税抜仕入金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入消費税", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入消費税", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入消費税", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上返品値引理由区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上返品値引理由区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上返品値引理由区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_外内税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税適用", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_明細摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_相手先注文番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先注文番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_相手先注文番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先注文番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_自社受付番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社受付番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_自社受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社受付番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入担当者コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入切捨区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回収摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回収摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回収摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回収摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_検収チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "検収チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発行済フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得意先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品取引更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品取引更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_修正オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理月日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_定価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納品掛率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品掛率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納品掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "納品掛率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価掛率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価掛率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注有無区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注有無区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注有無区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注有無区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_在庫数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納品書発行フラグ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行フラグ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納品書発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_専用伝票発行フラグ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "専用伝票発行フラグ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_専用伝票発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "専用伝票発行フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上累計", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上累計", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上累計", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上累計", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注番号受注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号受注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注番号受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号受注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引先コード２", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード２", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引先コード２", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード２", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_社名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_社名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_請求月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_帳票区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "帳票区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_帳票区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "帳票区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注単位", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注単位", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注単位", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注単位", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ商品コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ商品名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ商品名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ規格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ規格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ規格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_表示価格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "表示価格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_表示価格", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "表示価格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ棚番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ棚番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ棚番", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ棚番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＪＡＮコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＪＡＮコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＪＡＮコード", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＪＡＮコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカー品番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_棚番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカー名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカー名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_エラー区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラー区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_エラー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラー区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_更新ビット", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新ビット", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新ビット", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新ビット", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商品番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_社コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_社コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店コードＢ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コードＢ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店コードＢ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コードＢ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_直送区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "直送区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_直送区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "直送区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_客注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_客注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_経費区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "経費区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_経費区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "経費区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_返品区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "返品区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_返品区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "返品区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本部原価単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本部原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本部原価金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本部原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店舗売価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗売価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店舗売価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗売価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_大分類コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大分類コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_大分類コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大分類コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店舗備考", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗備考", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店舗備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗備考", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入先備考", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先備考", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先備考", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_登録番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "登録番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_登録番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "登録番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ドラスタ発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ドラスタ発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_客注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_客注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ドラスタ区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ドラスタ区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_欠品理由", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "欠品理由", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_欠品理由", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "欠品理由", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上修正連番", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "売上修正連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::db_test.Properties.Settings.Default.SPEEDDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 売上修正連番, 修正処理年月日, 本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 受注連番, 出荷番号, 出荷連番, 発注番号, 発注連番, 売上伝票番号, 処理日, 売上日, 納入日, 受注日, 納期, 発注納期, 処理区, 売上区分コード, システム区分, 取引区分, 請求月区分コード, 得意先コード, 得名, 事業所コード, ランク, 部課コード, 担当者コード, 代理店コード, 代名, 納入先コード, 納名, 取引先コード, 取引先名, 請求先コード, 売上切捨区分, 売上税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 売上単価, 売上金額, 税抜売上金額, 原価単価, 原価金額, 粗利, 消費税, 税抜仕入金額, 仕入消費税, 売上返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 受注番号, 相手先注文番号, 自社受付番号, 仕入伝票番号, 仕入先コード, 仕名, 仕入分類, 仕入事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 入金番号, チェック, 入金チェック, 回収摘要, 検収チェック, 完了フラグ, WS_ID, 発行済フラグ, 受注更新フラグ, 出荷更新フラグ, 得意先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, 商品取引更新フラグ, オペレーターコード, 修正オペレーターコード, 受注行, 処理月日, 管理年月, 受注行番号, 売上行番号, 定価, 納品掛率, 原価掛率, 発注有無区分, 回答納期, 在庫数, 受注残数, 発注残数, 納品書発行フラグ, 専用伝票発行フラグ, 売上累計, 受注番号受注残数, 取引先コード２, 社名, 店名, 部名, 発注区分, 請求月, ＥＯＳ区分, 帳票区分, 発注単位, ＥＯＳ商品コード, ＥＯＳ商品名, ＥＯＳ規格, 表示価格, ＥＯＳ棚番, ＪＡＮコード, メーカー品番, 棚番, メーカー名, 店コード, 部コード, エラー区分, 更新ビット, 商品番号, 社コード, 店コードＢ, 直送区分, 客注区分, 経費区分, 返品区分, 本部原価単価, 本部原価金額, 納入単価, 店舗売価, 大分類コード, 店舗備考, 仕入先備考, 登録番号, ドラスタ発注番号, 客注番号, ドラスタ区分, 欠品理由 FROM dbo.T売上修正戻ファイル";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT 売上修正連番, 修正処理年月日, 本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 受注連番, 出荷番号, 出荷連番, 発注番号, 発注連番, 売上伝票番号, 処理日, 売上日, 納入日, 受注日, 納期, 発注納期, 処理区, 売上区分コード, システム区分, 取引区分, 請求月区分コード, 得意先コード, 得名, 事業所コード, ランク, 部課コード, 担当者コード, 代理店コード, 代名, 納入先コード, 納名, 取引先コード, 取引先名, 請求先コード, 売上切捨区分, 売上税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 売上単価, 売上金額, 税抜売上金額, 原価単価, 原価金額, 粗利, 消費税, 税抜仕入金額, 仕入消費税, 売上返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 受注番号, 相手先注文番号, 自社受付番号, 仕入伝票番号, 仕入先コード, 仕名, 仕入分類, 仕入事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 入金番号, チェック, 入金チェック, 回収摘要, 検収チェック, 完了フラグ, WS_ID, 発行済フラグ, 受注更新フラグ, 出荷更新フラグ, 得意先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, 商品取引更新フラグ, オペレーターコード, 修正オペレーターコード, 受注行, 処理月日, 管理年月, 受注行番号, 売上行番号, 定価, 納品掛率, 原価掛率, 発注有無区分, 回答納期, 在庫数, 受注残数, 発注残数, 納品書発行フラグ, 専用伝票発行フラグ, 売上累計, 受注番号受注残数, 取引先コード２, 社名, 店名, 部名, 発注区分, 請求月, ＥＯＳ区分, 帳票区分, 発注単位, ＥＯＳ商品コード, ＥＯＳ商品名, ＥＯＳ規格, 表示価格, ＥＯＳ棚番, ＪＡＮコード, メーカー品番, 棚番, メーカー名, 店コード, 部コード, エラー区分, 更新ビット, 商品番号, 社コード, 店コードＢ, 直送区分, 客注区分, 経費区分, 返品区分, 本部原価単価, 本部原価金額, 納入単価, 店舗売価, 大分類コード, 店舗備考, 仕入先備考, 登録番号, ドラスタ発注番号, 客注番号, ドラスタ区分, 欠品理由 FROM dbo.T売上修正戻ファイル
WHERE 売上修正連番=0";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.売上修正戻ファイル選択from受注ファイル";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.売上修正戻ファイル選択from受注ファイル明細";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注行番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.売上修正戻ファイル選択from売上明細ファイル";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(売上計上DataSet.T売上修正戻ファイルDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 売上計上DataSet.T売上修正戻ファイルDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            売上計上DataSet.T売上修正戻ファイルDataTable dataTable = new 売上計上DataSet.T売上修正戻ファイルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(売上計上DataSet.T売上修正戻ファイルDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 売上計上DataSet.T売上修正戻ファイルDataTable GetDataBy() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            売上計上DataSet.T売上修正戻ファイルDataTable dataTable = new 売上計上DataSet.T売上修正戻ファイルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy売上修正戻ファイルfrom受注ファイル(売上計上DataSet.T売上修正戻ファイルDataTable dataTable, global::System.Nullable<int> 受注番号) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((受注番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(受注番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 売上計上DataSet.T売上修正戻ファイルDataTable GetDataBy売上修正戻ファイルfrom受注ファイル(global::System.Nullable<int> 受注番号) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((受注番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(受注番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            売上計上DataSet.T売上修正戻ファイルDataTable dataTable = new 売上計上DataSet.T売上修正戻ファイルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy売上修正戻ファイルfrom受注ファイル明細(売上計上DataSet.T売上修正戻ファイルDataTable dataTable, global::System.Nullable<int> 受注番号, global::System.Nullable<int> 受注行番号) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((受注番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(受注番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((受注行番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(受注行番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 売上計上DataSet.T売上修正戻ファイルDataTable GetDataBy売上修正戻ファイルfrom受注ファイル明細(global::System.Nullable<int> 受注番号, global::System.Nullable<int> 受注行番号) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((受注番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(受注番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((受注行番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(受注行番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            売上計上DataSet.T売上修正戻ファイルDataTable dataTable = new 売上計上DataSet.T売上修正戻ファイルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy売上修正戻ファイルfrom売上明細ファイル(売上計上DataSet.T売上修正戻ファイルDataTable dataTable, global::System.Nullable<int> 売上伝票番号) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 売上計上DataSet.T売上修正戻ファイルDataTable GetDataBy売上修正戻ファイルfrom売上明細ファイル(global::System.Nullable<int> 売上伝票番号) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            売上計上DataSet.T売上修正戻ファイルDataTable dataTable = new 売上計上DataSet.T売上修正戻ファイルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(売上計上DataSet.T売上修正戻ファイルDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(売上計上DataSet dataSet) {
            return this.Adapter.Update(dataSet, "T売上修正戻ファイル");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_売上修正連番, 
                    global::System.Nullable<global::System.DateTime> Original_修正処理年月日, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    global::System.Nullable<short> Original_入力区分, 
                    global::System.Nullable<int> Original_処理番号, 
                    bool Original_エラーフラグ, 
                    global::System.Nullable<int> Original_受発注行数, 
                    global::System.Nullable<int> Original_受注連番, 
                    global::System.Nullable<int> Original_出荷番号, 
                    global::System.Nullable<int> Original_出荷連番, 
                    global::System.Nullable<int> Original_発注番号, 
                    global::System.Nullable<int> Original_発注連番, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    global::System.Nullable<global::System.DateTime> Original_売上日, 
                    global::System.Nullable<global::System.DateTime> Original_納入日, 
                    global::System.Nullable<global::System.DateTime> Original_受注日, 
                    global::System.Nullable<global::System.DateTime> Original_納期, 
                    global::System.Nullable<global::System.DateTime> Original_発注納期, 
                    global::System.Nullable<short> Original_処理区, 
                    global::System.Nullable<short> Original_売上区分コード, 
                    short Original_システム区分, 
                    global::System.Nullable<short> Original_取引区分, 
                    global::System.Nullable<short> Original_請求月区分コード, 
                    string Original_得意先コード, 
                    string Original_得名, 
                    string Original_事業所コード, 
                    global::System.Nullable<short> Original_ランク, 
                    string Original_部課コード, 
                    string Original_担当者コード, 
                    string Original_代理店コード, 
                    string Original_代名, 
                    string Original_納入先コード, 
                    string Original_納名, 
                    string Original_取引先コード, 
                    string Original_取引先名, 
                    string Original_請求先コード, 
                    global::System.Nullable<short> Original_売上切捨区分, 
                    global::System.Nullable<short> Original_売上税区分, 
                    string Original_伝票摘要, 
                    string Original_商品コード, 
                    string Original_商名, 
                    string Original_規格, 
                    string Original_形式寸法, 
                    string Original_材質, 
                    global::System.Nullable<short> Original_分類, 
                    bool Original_在庫管理区分, 
                    string Original_品種コード, 
                    string Original_メーカーコード, 
                    global::System.Nullable<decimal> Original_入数, 
                    global::System.Nullable<short> Original_単位コード, 
                    string Original_倉庫コード, 
                    global::System.Nullable<decimal> Original_ケース数, 
                    global::System.Nullable<decimal> Original_数量, 
                    global::System.Nullable<decimal> Original_売上単価, 
                    global::System.Nullable<decimal> Original_売上金額, 
                    global::System.Nullable<decimal> Original_税抜売上金額, 
                    global::System.Nullable<decimal> Original_原価単価, 
                    global::System.Nullable<decimal> Original_原価金額, 
                    global::System.Nullable<decimal> Original_粗利, 
                    global::System.Nullable<decimal> Original_消費税, 
                    global::System.Nullable<decimal> Original_税抜仕入金額, 
                    global::System.Nullable<decimal> Original_仕入消費税, 
                    global::System.Nullable<short> Original_売上返品値引理由区分, 
                    global::System.Nullable<short> Original_外内税区分, 
                    global::System.Nullable<decimal> Original_消費税率, 
                    global::System.Nullable<decimal> Original_新消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    string Original_明細摘要, 
                    global::System.Nullable<int> Original_受注番号, 
                    string Original_相手先注文番号, 
                    string Original_自社受付番号, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    string Original_仕入先コード, 
                    string Original_仕名, 
                    global::System.Nullable<short> Original_仕入分類, 
                    string Original_仕入事業所コード, 
                    string Original_仕入担当者コード, 
                    global::System.Nullable<short> Original_仕入切捨区分, 
                    global::System.Nullable<short> Original_仕入税区分, 
                    global::System.Nullable<int> Original_入金番号, 
                    bool Original_チェック, 
                    bool Original_入金チェック, 
                    string Original_回収摘要, 
                    bool Original_検収チェック, 
                    bool Original_完了フラグ, 
                    global::System.Nullable<short> Original_WS_ID, 
                    bool Original_発行済フラグ, 
                    bool Original_受注更新フラグ, 
                    bool Original_出荷更新フラグ, 
                    bool Original_得意先更新フラグ, 
                    bool Original_商品更新フラグ, 
                    bool Original_商品倉庫更新フラグ, 
                    bool Original_商品取引更新フラグ, 
                    string Original_オペレーターコード, 
                    string Original_修正オペレーターコード, 
                    global::System.Nullable<int> Original_受注行, 
                    global::System.Nullable<global::System.DateTime> Original_処理月日, 
                    global::System.Nullable<int> Original_管理年月, 
                    global::System.Nullable<int> Original_受注行番号, 
                    global::System.Nullable<int> Original_売上行番号, 
                    global::System.Nullable<decimal> Original_定価, 
                    global::System.Nullable<decimal> Original_納品掛率, 
                    global::System.Nullable<decimal> Original_原価掛率, 
                    global::System.Nullable<short> Original_発注有無区分, 
                    global::System.Nullable<global::System.DateTime> Original_回答納期, 
                    global::System.Nullable<decimal> Original_在庫数, 
                    global::System.Nullable<decimal> Original_受注残数, 
                    global::System.Nullable<decimal> Original_発注残数, 
                    global::System.Nullable<short> Original_納品書発行フラグ, 
                    global::System.Nullable<short> Original_専用伝票発行フラグ, 
                    global::System.Nullable<decimal> Original_売上累計, 
                    global::System.Nullable<decimal> Original_受注番号受注残数, 
                    global::System.Nullable<int> Original_取引先コード２, 
                    string Original_社名, 
                    string Original_店名, 
                    string Original_部名, 
                    global::System.Nullable<int> Original_発注区分, 
                    global::System.Nullable<int> Original_請求月, 
                    string Original_ＥＯＳ区分, 
                    global::System.Nullable<int> Original_帳票区分, 
                    string Original_発注単位, 
                    string Original_ＥＯＳ商品コード, 
                    string Original_ＥＯＳ商品名, 
                    string Original_ＥＯＳ規格, 
                    global::System.Nullable<decimal> Original_表示価格, 
                    global::System.Nullable<decimal> Original_ＥＯＳ棚番, 
                    global::System.Nullable<decimal> Original_ＪＡＮコード, 
                    string Original_メーカー品番, 
                    string Original_棚番, 
                    string Original_メーカー名, 
                    global::System.Nullable<int> Original_店コード, 
                    global::System.Nullable<int> Original_部コード, 
                    string Original_エラー区分, 
                    global::System.Nullable<int> Original_更新ビット, 
                    string Original_商品番号, 
                    global::System.Nullable<int> Original_社コード, 
                    global::System.Nullable<int> Original_店コードＢ, 
                    global::System.Nullable<int> Original_直送区分, 
                    global::System.Nullable<int> Original_客注区分, 
                    global::System.Nullable<int> Original_経費区分, 
                    global::System.Nullable<int> Original_返品区分, 
                    global::System.Nullable<decimal> Original_本部原価単価, 
                    global::System.Nullable<decimal> Original_本部原価金額, 
                    global::System.Nullable<decimal> Original_納入単価, 
                    global::System.Nullable<decimal> Original_店舗売価, 
                    string Original_大分類コード, 
                    string Original_店舗備考, 
                    string Original_仕入先備考, 
                    global::System.Nullable<int> Original_登録番号, 
                    global::System.Nullable<int> Original_ドラスタ発注番号, 
                    string Original_客注番号, 
                    global::System.Nullable<short> Original_ドラスタ区分, 
                    global::System.Nullable<short> Original_欠品理由) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_売上修正連番));
            if ((Original_修正処理年月日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_修正処理年月日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_処理コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_処理コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_入力区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((short)(Original_入力区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_処理番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_処理番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_エラーフラグ));
            if ((Original_受発注行数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_受発注行数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_受注連番.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_受注連番.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_出荷番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷連番.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_出荷連番.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_発注番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_発注番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_発注連番.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_発注連番.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_売上伝票番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_売上伝票番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_処理日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_処理日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_売上日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_売上日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_納入日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((System.DateTime)(Original_納入日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_受注日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_受注日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_納期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((System.DateTime)(Original_納期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_発注納期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((System.DateTime)(Original_発注納期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_処理区.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((short)(Original_処理区.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_売上区分コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((short)(Original_売上区分コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[42].Value = ((short)(Original_システム区分));
            if ((Original_取引区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((short)(Original_取引区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_請求月区分コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((short)(Original_請求月区分コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_得意先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_得意先コード));
            }
            if ((Original_得名 == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_得名));
            }
            if ((Original_事業所コード == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_事業所コード));
            }
            if ((Original_ランク.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((short)(Original_ランク.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_部課コード == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_部課コード));
            }
            if ((Original_担当者コード == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_担当者コード));
            }
            if ((Original_代理店コード == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_代理店コード));
            }
            if ((Original_代名 == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_代名));
            }
            if ((Original_納入先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_納入先コード));
            }
            if ((Original_納名 == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_納名));
            }
            if ((Original_取引先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_取引先コード));
            }
            if ((Original_取引先名 == null)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((string)(Original_取引先名));
            }
            if ((Original_請求先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_請求先コード));
            }
            if ((Original_売上切捨区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((short)(Original_売上切捨区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_売上税区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((short)(Original_売上税区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_伝票摘要 == null)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((string)(Original_伝票摘要));
            }
            if ((Original_商品コード == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_商品コード));
            }
            if ((Original_商名 == null)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_商名));
            }
            if ((Original_規格 == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_規格));
            }
            if ((Original_形式寸法 == null)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_形式寸法));
            }
            if ((Original_材質 == null)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((string)(Original_材質));
            }
            if ((Original_分類.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((short)(Original_分類.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[91].Value = ((bool)(Original_在庫管理区分));
            if ((Original_品種コード == null)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((string)(Original_品種コード));
            }
            if ((Original_メーカーコード == null)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((string)(Original_メーカーコード));
            }
            if ((Original_入数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[97].Value = ((decimal)(Original_入数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_単位コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((short)(Original_単位コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_倉庫コード == null)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((string)(Original_倉庫コード));
            }
            if ((Original_ケース数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[103].Value = ((decimal)(Original_ケース数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_数量.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[105].Value = ((decimal)(Original_数量.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_売上単価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[107].Value = ((decimal)(Original_売上単価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_売上金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[109].Value = ((decimal)(Original_売上金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_税抜売上金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[111].Value = ((decimal)(Original_税抜売上金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_原価単価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[113].Value = ((decimal)(Original_原価単価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_原価金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[115].Value = ((decimal)(Original_原価金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_粗利.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[117].Value = ((decimal)(Original_粗利.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[119].Value = ((decimal)(Original_消費税.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_税抜仕入金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[121].Value = ((decimal)(Original_税抜仕入金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入消費税.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[123].Value = ((decimal)(Original_仕入消費税.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_売上返品値引理由区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[125].Value = ((short)(Original_売上返品値引理由区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((Original_外内税区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[127].Value = ((short)(Original_外内税区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[129].Value = ((decimal)(Original_消費税率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[131].Value = ((decimal)(Original_新消費税率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税適用.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[133].Value = ((System.DateTime)(Original_新消費税適用.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_明細摘要 == null)) {
                this.Adapter.DeleteCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[135].Value = ((string)(Original_明細摘要));
            }
            if ((Original_受注番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[137].Value = ((int)(Original_受注番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((Original_相手先注文番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[139].Value = ((string)(Original_相手先注文番号));
            }
            if ((Original_自社受付番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[141].Value = ((string)(Original_自社受付番号));
            }
            if ((Original_仕入伝票番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[143].Value = ((int)(Original_仕入伝票番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[145].Value = ((string)(Original_仕入先コード));
            }
            if ((Original_仕名 == null)) {
                this.Adapter.DeleteCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[147].Value = ((string)(Original_仕名));
            }
            if ((Original_仕入分類.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[149].Value = ((short)(Original_仕入分類.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入事業所コード == null)) {
                this.Adapter.DeleteCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[151].Value = ((string)(Original_仕入事業所コード));
            }
            if ((Original_仕入担当者コード == null)) {
                this.Adapter.DeleteCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[153].Value = ((string)(Original_仕入担当者コード));
            }
            if ((Original_仕入切捨区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[155].Value = ((short)(Original_仕入切捨区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入税区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[157].Value = ((short)(Original_仕入税区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            if ((Original_入金番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[159].Value = ((int)(Original_入金番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[160].Value = ((bool)(Original_チェック));
            this.Adapter.DeleteCommand.Parameters[161].Value = ((bool)(Original_入金チェック));
            if ((Original_回収摘要 == null)) {
                this.Adapter.DeleteCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[163].Value = ((string)(Original_回収摘要));
            }
            this.Adapter.DeleteCommand.Parameters[164].Value = ((bool)(Original_検収チェック));
            this.Adapter.DeleteCommand.Parameters[165].Value = ((bool)(Original_完了フラグ));
            if ((Original_WS_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[167].Value = ((short)(Original_WS_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[168].Value = ((bool)(Original_発行済フラグ));
            this.Adapter.DeleteCommand.Parameters[169].Value = ((bool)(Original_受注更新フラグ));
            this.Adapter.DeleteCommand.Parameters[170].Value = ((bool)(Original_出荷更新フラグ));
            this.Adapter.DeleteCommand.Parameters[171].Value = ((bool)(Original_得意先更新フラグ));
            this.Adapter.DeleteCommand.Parameters[172].Value = ((bool)(Original_商品更新フラグ));
            this.Adapter.DeleteCommand.Parameters[173].Value = ((bool)(Original_商品倉庫更新フラグ));
            this.Adapter.DeleteCommand.Parameters[174].Value = ((bool)(Original_商品取引更新フラグ));
            if ((Original_オペレーターコード == null)) {
                this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[176].Value = ((string)(Original_オペレーターコード));
            }
            if ((Original_修正オペレーターコード == null)) {
                this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[178].Value = ((string)(Original_修正オペレーターコード));
            }
            if ((Original_受注行.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[180].Value = ((int)(Original_受注行.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            if ((Original_処理月日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[182].Value = ((System.DateTime)(Original_処理月日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            if ((Original_管理年月.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[184].Value = ((int)(Original_管理年月.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            if ((Original_受注行番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[186].Value = ((int)(Original_受注行番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            if ((Original_売上行番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[188].Value = ((int)(Original_売上行番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            if ((Original_定価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[190].Value = ((decimal)(Original_定価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            if ((Original_納品掛率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[191].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[192].Value = ((decimal)(Original_納品掛率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[191].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            if ((Original_原価掛率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[193].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[194].Value = ((decimal)(Original_原価掛率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[193].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            if ((Original_発注有無区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[195].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[196].Value = ((short)(Original_発注有無区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[195].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            if ((Original_回答納期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[198].Value = ((System.DateTime)(Original_回答納期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            if ((Original_在庫数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[200].Value = ((decimal)(Original_在庫数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            if ((Original_受注残数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[202].Value = ((decimal)(Original_受注残数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            if ((Original_発注残数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[204].Value = ((decimal)(Original_発注残数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            if ((Original_納品書発行フラグ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[206].Value = ((short)(Original_納品書発行フラグ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            if ((Original_専用伝票発行フラグ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[208].Value = ((short)(Original_専用伝票発行フラグ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            if ((Original_売上累計.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[210].Value = ((decimal)(Original_売上累計.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            if ((Original_受注番号受注残数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[212].Value = ((decimal)(Original_受注番号受注残数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            if ((Original_取引先コード２.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[214].Value = ((int)(Original_取引先コード２.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            if ((Original_社名 == null)) {
                this.Adapter.DeleteCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[216].Value = ((string)(Original_社名));
            }
            if ((Original_店名 == null)) {
                this.Adapter.DeleteCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[218].Value = ((string)(Original_店名));
            }
            if ((Original_部名 == null)) {
                this.Adapter.DeleteCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[220].Value = ((string)(Original_部名));
            }
            if ((Original_発注区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[222].Value = ((int)(Original_発注区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            if ((Original_請求月.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[224].Value = ((int)(Original_請求月.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            if ((Original_ＥＯＳ区分 == null)) {
                this.Adapter.DeleteCommand.Parameters[225].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[226].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[225].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[226].Value = ((string)(Original_ＥＯＳ区分));
            }
            if ((Original_帳票区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[227].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[228].Value = ((int)(Original_帳票区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[227].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[228].Value = global::System.DBNull.Value;
            }
            if ((Original_発注単位 == null)) {
                this.Adapter.DeleteCommand.Parameters[229].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[230].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[229].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[230].Value = ((string)(Original_発注単位));
            }
            if ((Original_ＥＯＳ商品コード == null)) {
                this.Adapter.DeleteCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[232].Value = ((string)(Original_ＥＯＳ商品コード));
            }
            if ((Original_ＥＯＳ商品名 == null)) {
                this.Adapter.DeleteCommand.Parameters[233].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[234].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[233].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[234].Value = ((string)(Original_ＥＯＳ商品名));
            }
            if ((Original_ＥＯＳ規格 == null)) {
                this.Adapter.DeleteCommand.Parameters[235].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[236].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[235].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[236].Value = ((string)(Original_ＥＯＳ規格));
            }
            if ((Original_表示価格.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[237].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[238].Value = ((decimal)(Original_表示価格.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[237].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[238].Value = global::System.DBNull.Value;
            }
            if ((Original_ＥＯＳ棚番.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[239].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[240].Value = ((decimal)(Original_ＥＯＳ棚番.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[239].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[240].Value = global::System.DBNull.Value;
            }
            if ((Original_ＪＡＮコード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[241].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[242].Value = ((decimal)(Original_ＪＡＮコード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[241].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[242].Value = global::System.DBNull.Value;
            }
            if ((Original_メーカー品番 == null)) {
                this.Adapter.DeleteCommand.Parameters[243].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[244].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[243].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[244].Value = ((string)(Original_メーカー品番));
            }
            if ((Original_棚番 == null)) {
                this.Adapter.DeleteCommand.Parameters[245].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[246].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[245].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[246].Value = ((string)(Original_棚番));
            }
            if ((Original_メーカー名 == null)) {
                this.Adapter.DeleteCommand.Parameters[247].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[248].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[247].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[248].Value = ((string)(Original_メーカー名));
            }
            if ((Original_店コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[249].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[250].Value = ((int)(Original_店コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[249].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[250].Value = global::System.DBNull.Value;
            }
            if ((Original_部コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[251].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[252].Value = ((int)(Original_部コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[251].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[252].Value = global::System.DBNull.Value;
            }
            if ((Original_エラー区分 == null)) {
                this.Adapter.DeleteCommand.Parameters[253].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[254].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[253].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[254].Value = ((string)(Original_エラー区分));
            }
            if ((Original_更新ビット.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[255].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[256].Value = ((int)(Original_更新ビット.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[255].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[256].Value = global::System.DBNull.Value;
            }
            if ((Original_商品番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[257].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[258].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[257].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[258].Value = ((string)(Original_商品番号));
            }
            if ((Original_社コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[259].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[260].Value = ((int)(Original_社コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[259].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[260].Value = global::System.DBNull.Value;
            }
            if ((Original_店コードＢ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[261].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[262].Value = ((int)(Original_店コードＢ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[261].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[262].Value = global::System.DBNull.Value;
            }
            if ((Original_直送区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[263].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[264].Value = ((int)(Original_直送区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[263].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[264].Value = global::System.DBNull.Value;
            }
            if ((Original_客注区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[265].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[266].Value = ((int)(Original_客注区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[265].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[266].Value = global::System.DBNull.Value;
            }
            if ((Original_経費区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[267].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[268].Value = ((int)(Original_経費区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[267].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[268].Value = global::System.DBNull.Value;
            }
            if ((Original_返品区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[269].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[270].Value = ((int)(Original_返品区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[269].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[270].Value = global::System.DBNull.Value;
            }
            if ((Original_本部原価単価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[271].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[272].Value = ((decimal)(Original_本部原価単価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[271].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[272].Value = global::System.DBNull.Value;
            }
            if ((Original_本部原価金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[273].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[274].Value = ((decimal)(Original_本部原価金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[273].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[274].Value = global::System.DBNull.Value;
            }
            if ((Original_納入単価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[275].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[276].Value = ((decimal)(Original_納入単価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[275].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[276].Value = global::System.DBNull.Value;
            }
            if ((Original_店舗売価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[277].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[278].Value = ((decimal)(Original_店舗売価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[277].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[278].Value = global::System.DBNull.Value;
            }
            if ((Original_大分類コード == null)) {
                this.Adapter.DeleteCommand.Parameters[279].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[280].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[279].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[280].Value = ((string)(Original_大分類コード));
            }
            if ((Original_店舗備考 == null)) {
                this.Adapter.DeleteCommand.Parameters[281].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[282].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[281].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[282].Value = ((string)(Original_店舗備考));
            }
            if ((Original_仕入先備考 == null)) {
                this.Adapter.DeleteCommand.Parameters[283].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[284].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[283].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[284].Value = ((string)(Original_仕入先備考));
            }
            if ((Original_登録番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[285].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[286].Value = ((int)(Original_登録番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[285].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[286].Value = global::System.DBNull.Value;
            }
            if ((Original_ドラスタ発注番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[287].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[288].Value = ((int)(Original_ドラスタ発注番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[287].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[288].Value = global::System.DBNull.Value;
            }
            if ((Original_客注番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[289].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[290].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[289].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[290].Value = ((string)(Original_客注番号));
            }
            if ((Original_ドラスタ区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[291].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[292].Value = ((short)(Original_ドラスタ区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[291].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[292].Value = global::System.DBNull.Value;
            }
            if ((Original_欠品理由.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[293].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[294].Value = ((short)(Original_欠品理由.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[293].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[294].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<global::System.DateTime> 修正処理年月日, 
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    global::System.Nullable<short> 入力区分, 
                    global::System.Nullable<int> 処理番号, 
                    bool エラーフラグ, 
                    global::System.Nullable<int> 受発注行数, 
                    global::System.Nullable<int> 受注連番, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 出荷連番, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 発注連番, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    global::System.Nullable<global::System.DateTime> 売上日, 
                    global::System.Nullable<global::System.DateTime> 納入日, 
                    global::System.Nullable<global::System.DateTime> 受注日, 
                    global::System.Nullable<global::System.DateTime> 納期, 
                    global::System.Nullable<global::System.DateTime> 発注納期, 
                    global::System.Nullable<short> 処理区, 
                    global::System.Nullable<short> 売上区分コード, 
                    short システム区分, 
                    global::System.Nullable<short> 取引区分, 
                    global::System.Nullable<short> 請求月区分コード, 
                    string 得意先コード, 
                    string 得名, 
                    string 事業所コード, 
                    global::System.Nullable<short> ランク, 
                    string 部課コード, 
                    string 担当者コード, 
                    string 代理店コード, 
                    string 代名, 
                    string 納入先コード, 
                    string 納名, 
                    string 取引先コード, 
                    string 取引先名, 
                    string 請求先コード, 
                    global::System.Nullable<short> 売上切捨区分, 
                    global::System.Nullable<short> 売上税区分, 
                    string 伝票摘要, 
                    string 商品コード, 
                    string 商名, 
                    string 規格, 
                    string 形式寸法, 
                    string 材質, 
                    global::System.Nullable<short> 分類, 
                    bool 在庫管理区分, 
                    string 品種コード, 
                    string メーカーコード, 
                    global::System.Nullable<decimal> 入数, 
                    global::System.Nullable<short> 単位コード, 
                    string 倉庫コード, 
                    global::System.Nullable<decimal> ケース数, 
                    global::System.Nullable<decimal> 数量, 
                    global::System.Nullable<decimal> 売上単価, 
                    global::System.Nullable<decimal> 売上金額, 
                    global::System.Nullable<decimal> 税抜売上金額, 
                    global::System.Nullable<decimal> 原価単価, 
                    global::System.Nullable<decimal> 原価金額, 
                    global::System.Nullable<decimal> 粗利, 
                    global::System.Nullable<decimal> 消費税, 
                    global::System.Nullable<decimal> 税抜仕入金額, 
                    global::System.Nullable<decimal> 仕入消費税, 
                    global::System.Nullable<short> 売上返品値引理由区分, 
                    global::System.Nullable<short> 外内税区分, 
                    global::System.Nullable<decimal> 消費税率, 
                    global::System.Nullable<decimal> 新消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    string 明細摘要, 
                    global::System.Nullable<int> 受注番号, 
                    string 相手先注文番号, 
                    string 自社受付番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    string 仕入先コード, 
                    string 仕名, 
                    global::System.Nullable<short> 仕入分類, 
                    string 仕入事業所コード, 
                    string 仕入担当者コード, 
                    global::System.Nullable<short> 仕入切捨区分, 
                    global::System.Nullable<short> 仕入税区分, 
                    global::System.Nullable<int> 入金番号, 
                    bool チェック, 
                    bool 入金チェック, 
                    string 回収摘要, 
                    bool 検収チェック, 
                    bool 完了フラグ, 
                    global::System.Nullable<short> WS_ID, 
                    bool 発行済フラグ, 
                    bool 受注更新フラグ, 
                    bool 出荷更新フラグ, 
                    bool 得意先更新フラグ, 
                    bool 商品更新フラグ, 
                    bool 商品倉庫更新フラグ, 
                    bool 商品取引更新フラグ, 
                    string オペレーターコード, 
                    string 修正オペレーターコード, 
                    global::System.Nullable<int> 受注行, 
                    global::System.Nullable<global::System.DateTime> 処理月日, 
                    global::System.Nullable<int> 管理年月, 
                    global::System.Nullable<int> 受注行番号, 
                    global::System.Nullable<int> 売上行番号, 
                    global::System.Nullable<decimal> 定価, 
                    global::System.Nullable<decimal> 納品掛率, 
                    global::System.Nullable<decimal> 原価掛率, 
                    global::System.Nullable<short> 発注有無区分, 
                    global::System.Nullable<global::System.DateTime> 回答納期, 
                    global::System.Nullable<decimal> 在庫数, 
                    global::System.Nullable<decimal> 受注残数, 
                    global::System.Nullable<decimal> 発注残数, 
                    global::System.Nullable<short> 納品書発行フラグ, 
                    global::System.Nullable<short> 専用伝票発行フラグ, 
                    global::System.Nullable<decimal> 売上累計, 
                    global::System.Nullable<decimal> 受注番号受注残数, 
                    global::System.Nullable<int> 取引先コード２, 
                    string 社名, 
                    string 店名, 
                    string 部名, 
                    global::System.Nullable<int> 発注区分, 
                    global::System.Nullable<int> 請求月, 
                    string ＥＯＳ区分, 
                    global::System.Nullable<int> 帳票区分, 
                    string 発注単位, 
                    string ＥＯＳ商品コード, 
                    string ＥＯＳ商品名, 
                    string ＥＯＳ規格, 
                    global::System.Nullable<decimal> 表示価格, 
                    global::System.Nullable<decimal> ＥＯＳ棚番, 
                    global::System.Nullable<decimal> ＪＡＮコード, 
                    string メーカー品番, 
                    string 棚番, 
                    string メーカー名, 
                    global::System.Nullable<int> 店コード, 
                    global::System.Nullable<int> 部コード, 
                    string エラー区分, 
                    global::System.Nullable<int> 更新ビット, 
                    string 商品番号, 
                    global::System.Nullable<int> 社コード, 
                    global::System.Nullable<int> 店コードＢ, 
                    global::System.Nullable<int> 直送区分, 
                    global::System.Nullable<int> 客注区分, 
                    global::System.Nullable<int> 経費区分, 
                    global::System.Nullable<int> 返品区分, 
                    global::System.Nullable<decimal> 本部原価単価, 
                    global::System.Nullable<decimal> 本部原価金額, 
                    global::System.Nullable<decimal> 納入単価, 
                    global::System.Nullable<decimal> 店舗売価, 
                    string 大分類コード, 
                    string 店舗備考, 
                    string 仕入先備考, 
                    global::System.Nullable<int> 登録番号, 
                    global::System.Nullable<int> ドラスタ発注番号, 
                    string 客注番号, 
                    global::System.Nullable<short> ドラスタ区分, 
                    global::System.Nullable<short> 欠品理由) {
            if ((修正処理年月日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(修正処理年月日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((本支店区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(処理コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((入力区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(入力区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(エラーフラグ));
            if ((受発注行数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(受発注行数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((受注連番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(受注連番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((出荷番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(出荷番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((出荷連番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(出荷連番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((発注番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((発注連番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(発注連番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((売上日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(売上日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((納入日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(納入日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((受注日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(受注日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((納期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(納期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((発注納期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(発注納期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((処理区.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((short)(処理区.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((売上区分コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((short)(売上区分コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((short)(システム区分));
            if ((取引区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((short)(取引区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((請求月区分コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((short)(請求月区分コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((得意先コード == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(得意先コード));
            }
            if ((得名 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(得名));
            }
            if ((事業所コード == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(事業所コード));
            }
            if ((ランク.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((short)(ランク.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((部課コード == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(部課コード));
            }
            if ((担当者コード == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(担当者コード));
            }
            if ((代理店コード == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(代理店コード));
            }
            if ((代名 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(代名));
            }
            if ((納入先コード == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(納入先コード));
            }
            if ((納名 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(納名));
            }
            if ((取引先コード == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(取引先コード));
            }
            if ((取引先名 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(取引先名));
            }
            if ((請求先コード == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(請求先コード));
            }
            if ((売上切捨区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((short)(売上切捨区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((売上税区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((short)(売上税区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((伝票摘要 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(伝票摘要));
            }
            if ((商品コード == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(商品コード));
            }
            if ((商名 == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(商名));
            }
            if ((規格 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(規格));
            }
            if ((形式寸法 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(形式寸法));
            }
            if ((材質 == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(材質));
            }
            if ((分類.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((short)(分類.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(在庫管理区分));
            if ((品種コード == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(品種コード));
            }
            if ((メーカーコード == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(メーカーコード));
            }
            if ((入数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(入数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((単位コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((short)(単位コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((倉庫コード == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(倉庫コード));
            }
            if ((ケース数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((decimal)(ケース数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((数量.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(数量.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((売上単価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((decimal)(売上単価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((売上金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(売上金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((税抜売上金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((decimal)(税抜売上金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((原価単価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((decimal)(原価単価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((原価金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((decimal)(原価金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((粗利.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((decimal)(粗利.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((消費税.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((decimal)(消費税.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((税抜仕入金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((decimal)(税抜仕入金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((仕入消費税.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((decimal)(仕入消費税.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((売上返品値引理由区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((short)(売上返品値引理由区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((外内税区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((short)(外内税区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((消費税率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((decimal)(消費税率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((新消費税率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((decimal)(新消費税率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((新消費税適用.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((System.DateTime)(新消費税適用.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((明細摘要 == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(明細摘要));
            }
            if ((受注番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((int)(受注番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((相手先注文番号 == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(相手先注文番号));
            }
            if ((自社受付番号 == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(自社受付番号));
            }
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((仕入先コード == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(仕入先コード));
            }
            if ((仕名 == null)) {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(仕名));
            }
            if ((仕入分類.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((short)(仕入分類.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((仕入事業所コード == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(仕入事業所コード));
            }
            if ((仕入担当者コード == null)) {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(仕入担当者コード));
            }
            if ((仕入切捨区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((short)(仕入切捨区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((仕入税区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((short)(仕入税区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((入金番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((int)(入金番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[81].Value = ((bool)(チェック));
            this.Adapter.InsertCommand.Parameters[82].Value = ((bool)(入金チェック));
            if ((回収摘要 == null)) {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(回収摘要));
            }
            this.Adapter.InsertCommand.Parameters[84].Value = ((bool)(検収チェック));
            this.Adapter.InsertCommand.Parameters[85].Value = ((bool)(完了フラグ));
            if ((WS_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[86].Value = ((short)(WS_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[87].Value = ((bool)(発行済フラグ));
            this.Adapter.InsertCommand.Parameters[88].Value = ((bool)(受注更新フラグ));
            this.Adapter.InsertCommand.Parameters[89].Value = ((bool)(出荷更新フラグ));
            this.Adapter.InsertCommand.Parameters[90].Value = ((bool)(得意先更新フラグ));
            this.Adapter.InsertCommand.Parameters[91].Value = ((bool)(商品更新フラグ));
            this.Adapter.InsertCommand.Parameters[92].Value = ((bool)(商品倉庫更新フラグ));
            this.Adapter.InsertCommand.Parameters[93].Value = ((bool)(商品取引更新フラグ));
            if ((オペレーターコード == null)) {
                this.Adapter.InsertCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = ((string)(オペレーターコード));
            }
            if ((修正オペレーターコード == null)) {
                this.Adapter.InsertCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = ((string)(修正オペレーターコード));
            }
            if ((受注行.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[96].Value = ((int)(受注行.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((処理月日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[97].Value = ((System.DateTime)(処理月日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((管理年月.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[98].Value = ((int)(管理年月.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((受注行番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[99].Value = ((int)(受注行番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((売上行番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[100].Value = ((int)(売上行番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((定価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[101].Value = ((decimal)(定価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((納品掛率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[102].Value = ((decimal)(納品掛率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((原価掛率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[103].Value = ((decimal)(原価掛率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((発注有無区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[104].Value = ((short)(発注有無区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((回答納期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[105].Value = ((System.DateTime)(回答納期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((在庫数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[106].Value = ((decimal)(在庫数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((受注残数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[107].Value = ((decimal)(受注残数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((発注残数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[108].Value = ((decimal)(発注残数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((納品書発行フラグ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[109].Value = ((short)(納品書発行フラグ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((専用伝票発行フラグ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[110].Value = ((short)(専用伝票発行フラグ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((売上累計.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[111].Value = ((decimal)(売上累計.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((受注番号受注残数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[112].Value = ((decimal)(受注番号受注残数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((取引先コード２.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[113].Value = ((int)(取引先コード２.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((社名 == null)) {
                this.Adapter.InsertCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[114].Value = ((string)(社名));
            }
            if ((店名 == null)) {
                this.Adapter.InsertCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[115].Value = ((string)(店名));
            }
            if ((部名 == null)) {
                this.Adapter.InsertCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[116].Value = ((string)(部名));
            }
            if ((発注区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[117].Value = ((int)(発注区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((請求月.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[118].Value = ((int)(請求月.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((ＥＯＳ区分 == null)) {
                this.Adapter.InsertCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[119].Value = ((string)(ＥＯＳ区分));
            }
            if ((帳票区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[120].Value = ((int)(帳票区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((発注単位 == null)) {
                this.Adapter.InsertCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[121].Value = ((string)(発注単位));
            }
            if ((ＥＯＳ商品コード == null)) {
                this.Adapter.InsertCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[122].Value = ((string)(ＥＯＳ商品コード));
            }
            if ((ＥＯＳ商品名 == null)) {
                this.Adapter.InsertCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[123].Value = ((string)(ＥＯＳ商品名));
            }
            if ((ＥＯＳ規格 == null)) {
                this.Adapter.InsertCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[124].Value = ((string)(ＥＯＳ規格));
            }
            if ((表示価格.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[125].Value = ((decimal)(表示価格.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((ＥＯＳ棚番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[126].Value = ((decimal)(ＥＯＳ棚番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((ＪＡＮコード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[127].Value = ((decimal)(ＪＡＮコード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((メーカー品番 == null)) {
                this.Adapter.InsertCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[128].Value = ((string)(メーカー品番));
            }
            if ((棚番 == null)) {
                this.Adapter.InsertCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[129].Value = ((string)(棚番));
            }
            if ((メーカー名 == null)) {
                this.Adapter.InsertCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[130].Value = ((string)(メーカー名));
            }
            if ((店コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[131].Value = ((int)(店コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((部コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[132].Value = ((int)(部コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((エラー区分 == null)) {
                this.Adapter.InsertCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[133].Value = ((string)(エラー区分));
            }
            if ((更新ビット.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[134].Value = ((int)(更新ビット.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((商品番号 == null)) {
                this.Adapter.InsertCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[135].Value = ((string)(商品番号));
            }
            if ((社コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[136].Value = ((int)(社コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((店コードＢ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[137].Value = ((int)(店コードＢ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((直送区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[138].Value = ((int)(直送区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((客注区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[139].Value = ((int)(客注区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((経費区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[140].Value = ((int)(経費区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((返品区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[141].Value = ((int)(返品区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((本部原価単価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[142].Value = ((decimal)(本部原価単価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((本部原価金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[143].Value = ((decimal)(本部原価金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((納入単価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[144].Value = ((decimal)(納入単価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((店舗売価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[145].Value = ((decimal)(店舗売価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((大分類コード == null)) {
                this.Adapter.InsertCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[146].Value = ((string)(大分類コード));
            }
            if ((店舗備考 == null)) {
                this.Adapter.InsertCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[147].Value = ((string)(店舗備考));
            }
            if ((仕入先備考 == null)) {
                this.Adapter.InsertCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[148].Value = ((string)(仕入先備考));
            }
            if ((登録番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[149].Value = ((int)(登録番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((ドラスタ発注番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[150].Value = ((int)(ドラスタ発注番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((客注番号 == null)) {
                this.Adapter.InsertCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[151].Value = ((string)(客注番号));
            }
            if ((ドラスタ区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[152].Value = ((short)(ドラスタ区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((欠品理由.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[153].Value = ((short)(欠品理由.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> 修正処理年月日, 
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    global::System.Nullable<short> 入力区分, 
                    global::System.Nullable<int> 処理番号, 
                    bool エラーフラグ, 
                    global::System.Nullable<int> 受発注行数, 
                    global::System.Nullable<int> 受注連番, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 出荷連番, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 発注連番, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    global::System.Nullable<global::System.DateTime> 売上日, 
                    global::System.Nullable<global::System.DateTime> 納入日, 
                    global::System.Nullable<global::System.DateTime> 受注日, 
                    global::System.Nullable<global::System.DateTime> 納期, 
                    global::System.Nullable<global::System.DateTime> 発注納期, 
                    global::System.Nullable<short> 処理区, 
                    global::System.Nullable<short> 売上区分コード, 
                    short システム区分, 
                    global::System.Nullable<short> 取引区分, 
                    global::System.Nullable<short> 請求月区分コード, 
                    string 得意先コード, 
                    string 得名, 
                    string 事業所コード, 
                    global::System.Nullable<short> ランク, 
                    string 部課コード, 
                    string 担当者コード, 
                    string 代理店コード, 
                    string 代名, 
                    string 納入先コード, 
                    string 納名, 
                    string 取引先コード, 
                    string 取引先名, 
                    string 請求先コード, 
                    global::System.Nullable<short> 売上切捨区分, 
                    global::System.Nullable<short> 売上税区分, 
                    string 伝票摘要, 
                    string 商品コード, 
                    string 商名, 
                    string 規格, 
                    string 形式寸法, 
                    string 材質, 
                    global::System.Nullable<short> 分類, 
                    bool 在庫管理区分, 
                    string 品種コード, 
                    string メーカーコード, 
                    global::System.Nullable<decimal> 入数, 
                    global::System.Nullable<short> 単位コード, 
                    string 倉庫コード, 
                    global::System.Nullable<decimal> ケース数, 
                    global::System.Nullable<decimal> 数量, 
                    global::System.Nullable<decimal> 売上単価, 
                    global::System.Nullable<decimal> 売上金額, 
                    global::System.Nullable<decimal> 税抜売上金額, 
                    global::System.Nullable<decimal> 原価単価, 
                    global::System.Nullable<decimal> 原価金額, 
                    global::System.Nullable<decimal> 粗利, 
                    global::System.Nullable<decimal> 消費税, 
                    global::System.Nullable<decimal> 税抜仕入金額, 
                    global::System.Nullable<decimal> 仕入消費税, 
                    global::System.Nullable<short> 売上返品値引理由区分, 
                    global::System.Nullable<short> 外内税区分, 
                    global::System.Nullable<decimal> 消費税率, 
                    global::System.Nullable<decimal> 新消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    string 明細摘要, 
                    global::System.Nullable<int> 受注番号, 
                    string 相手先注文番号, 
                    string 自社受付番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    string 仕入先コード, 
                    string 仕名, 
                    global::System.Nullable<short> 仕入分類, 
                    string 仕入事業所コード, 
                    string 仕入担当者コード, 
                    global::System.Nullable<short> 仕入切捨区分, 
                    global::System.Nullable<short> 仕入税区分, 
                    global::System.Nullable<int> 入金番号, 
                    bool チェック, 
                    bool 入金チェック, 
                    string 回収摘要, 
                    bool 検収チェック, 
                    bool 完了フラグ, 
                    global::System.Nullable<short> WS_ID, 
                    bool 発行済フラグ, 
                    bool 受注更新フラグ, 
                    bool 出荷更新フラグ, 
                    bool 得意先更新フラグ, 
                    bool 商品更新フラグ, 
                    bool 商品倉庫更新フラグ, 
                    bool 商品取引更新フラグ, 
                    string オペレーターコード, 
                    string 修正オペレーターコード, 
                    global::System.Nullable<int> 受注行, 
                    global::System.Nullable<global::System.DateTime> 処理月日, 
                    global::System.Nullable<int> 管理年月, 
                    global::System.Nullable<int> 受注行番号, 
                    global::System.Nullable<int> 売上行番号, 
                    global::System.Nullable<decimal> 定価, 
                    global::System.Nullable<decimal> 納品掛率, 
                    global::System.Nullable<decimal> 原価掛率, 
                    global::System.Nullable<short> 発注有無区分, 
                    global::System.Nullable<global::System.DateTime> 回答納期, 
                    global::System.Nullable<decimal> 在庫数, 
                    global::System.Nullable<decimal> 受注残数, 
                    global::System.Nullable<decimal> 発注残数, 
                    global::System.Nullable<short> 納品書発行フラグ, 
                    global::System.Nullable<short> 専用伝票発行フラグ, 
                    global::System.Nullable<decimal> 売上累計, 
                    global::System.Nullable<decimal> 受注番号受注残数, 
                    global::System.Nullable<int> 取引先コード２, 
                    string 社名, 
                    string 店名, 
                    string 部名, 
                    global::System.Nullable<int> 発注区分, 
                    global::System.Nullable<int> 請求月, 
                    string ＥＯＳ区分, 
                    global::System.Nullable<int> 帳票区分, 
                    string 発注単位, 
                    string ＥＯＳ商品コード, 
                    string ＥＯＳ商品名, 
                    string ＥＯＳ規格, 
                    global::System.Nullable<decimal> 表示価格, 
                    global::System.Nullable<decimal> ＥＯＳ棚番, 
                    global::System.Nullable<decimal> ＪＡＮコード, 
                    string メーカー品番, 
                    string 棚番, 
                    string メーカー名, 
                    global::System.Nullable<int> 店コード, 
                    global::System.Nullable<int> 部コード, 
                    string エラー区分, 
                    global::System.Nullable<int> 更新ビット, 
                    string 商品番号, 
                    global::System.Nullable<int> 社コード, 
                    global::System.Nullable<int> 店コードＢ, 
                    global::System.Nullable<int> 直送区分, 
                    global::System.Nullable<int> 客注区分, 
                    global::System.Nullable<int> 経費区分, 
                    global::System.Nullable<int> 返品区分, 
                    global::System.Nullable<decimal> 本部原価単価, 
                    global::System.Nullable<decimal> 本部原価金額, 
                    global::System.Nullable<decimal> 納入単価, 
                    global::System.Nullable<decimal> 店舗売価, 
                    string 大分類コード, 
                    string 店舗備考, 
                    string 仕入先備考, 
                    global::System.Nullable<int> 登録番号, 
                    global::System.Nullable<int> ドラスタ発注番号, 
                    string 客注番号, 
                    global::System.Nullable<short> ドラスタ区分, 
                    global::System.Nullable<short> 欠品理由, 
                    int Original_売上修正連番, 
                    global::System.Nullable<global::System.DateTime> Original_修正処理年月日, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    global::System.Nullable<short> Original_入力区分, 
                    global::System.Nullable<int> Original_処理番号, 
                    bool Original_エラーフラグ, 
                    global::System.Nullable<int> Original_受発注行数, 
                    global::System.Nullable<int> Original_受注連番, 
                    global::System.Nullable<int> Original_出荷番号, 
                    global::System.Nullable<int> Original_出荷連番, 
                    global::System.Nullable<int> Original_発注番号, 
                    global::System.Nullable<int> Original_発注連番, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    global::System.Nullable<global::System.DateTime> Original_売上日, 
                    global::System.Nullable<global::System.DateTime> Original_納入日, 
                    global::System.Nullable<global::System.DateTime> Original_受注日, 
                    global::System.Nullable<global::System.DateTime> Original_納期, 
                    global::System.Nullable<global::System.DateTime> Original_発注納期, 
                    global::System.Nullable<short> Original_処理区, 
                    global::System.Nullable<short> Original_売上区分コード, 
                    short Original_システム区分, 
                    global::System.Nullable<short> Original_取引区分, 
                    global::System.Nullable<short> Original_請求月区分コード, 
                    string Original_得意先コード, 
                    string Original_得名, 
                    string Original_事業所コード, 
                    global::System.Nullable<short> Original_ランク, 
                    string Original_部課コード, 
                    string Original_担当者コード, 
                    string Original_代理店コード, 
                    string Original_代名, 
                    string Original_納入先コード, 
                    string Original_納名, 
                    string Original_取引先コード, 
                    string Original_取引先名, 
                    string Original_請求先コード, 
                    global::System.Nullable<short> Original_売上切捨区分, 
                    global::System.Nullable<short> Original_売上税区分, 
                    string Original_伝票摘要, 
                    string Original_商品コード, 
                    string Original_商名, 
                    string Original_規格, 
                    string Original_形式寸法, 
                    string Original_材質, 
                    global::System.Nullable<short> Original_分類, 
                    bool Original_在庫管理区分, 
                    string Original_品種コード, 
                    string Original_メーカーコード, 
                    global::System.Nullable<decimal> Original_入数, 
                    global::System.Nullable<short> Original_単位コード, 
                    string Original_倉庫コード, 
                    global::System.Nullable<decimal> Original_ケース数, 
                    global::System.Nullable<decimal> Original_数量, 
                    global::System.Nullable<decimal> Original_売上単価, 
                    global::System.Nullable<decimal> Original_売上金額, 
                    global::System.Nullable<decimal> Original_税抜売上金額, 
                    global::System.Nullable<decimal> Original_原価単価, 
                    global::System.Nullable<decimal> Original_原価金額, 
                    global::System.Nullable<decimal> Original_粗利, 
                    global::System.Nullable<decimal> Original_消費税, 
                    global::System.Nullable<decimal> Original_税抜仕入金額, 
                    global::System.Nullable<decimal> Original_仕入消費税, 
                    global::System.Nullable<short> Original_売上返品値引理由区分, 
                    global::System.Nullable<short> Original_外内税区分, 
                    global::System.Nullable<decimal> Original_消費税率, 
                    global::System.Nullable<decimal> Original_新消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    string Original_明細摘要, 
                    global::System.Nullable<int> Original_受注番号, 
                    string Original_相手先注文番号, 
                    string Original_自社受付番号, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    string Original_仕入先コード, 
                    string Original_仕名, 
                    global::System.Nullable<short> Original_仕入分類, 
                    string Original_仕入事業所コード, 
                    string Original_仕入担当者コード, 
                    global::System.Nullable<short> Original_仕入切捨区分, 
                    global::System.Nullable<short> Original_仕入税区分, 
                    global::System.Nullable<int> Original_入金番号, 
                    bool Original_チェック, 
                    bool Original_入金チェック, 
                    string Original_回収摘要, 
                    bool Original_検収チェック, 
                    bool Original_完了フラグ, 
                    global::System.Nullable<short> Original_WS_ID, 
                    bool Original_発行済フラグ, 
                    bool Original_受注更新フラグ, 
                    bool Original_出荷更新フラグ, 
                    bool Original_得意先更新フラグ, 
                    bool Original_商品更新フラグ, 
                    bool Original_商品倉庫更新フラグ, 
                    bool Original_商品取引更新フラグ, 
                    string Original_オペレーターコード, 
                    string Original_修正オペレーターコード, 
                    global::System.Nullable<int> Original_受注行, 
                    global::System.Nullable<global::System.DateTime> Original_処理月日, 
                    global::System.Nullable<int> Original_管理年月, 
                    global::System.Nullable<int> Original_受注行番号, 
                    global::System.Nullable<int> Original_売上行番号, 
                    global::System.Nullable<decimal> Original_定価, 
                    global::System.Nullable<decimal> Original_納品掛率, 
                    global::System.Nullable<decimal> Original_原価掛率, 
                    global::System.Nullable<short> Original_発注有無区分, 
                    global::System.Nullable<global::System.DateTime> Original_回答納期, 
                    global::System.Nullable<decimal> Original_在庫数, 
                    global::System.Nullable<decimal> Original_受注残数, 
                    global::System.Nullable<decimal> Original_発注残数, 
                    global::System.Nullable<short> Original_納品書発行フラグ, 
                    global::System.Nullable<short> Original_専用伝票発行フラグ, 
                    global::System.Nullable<decimal> Original_売上累計, 
                    global::System.Nullable<decimal> Original_受注番号受注残数, 
                    global::System.Nullable<int> Original_取引先コード２, 
                    string Original_社名, 
                    string Original_店名, 
                    string Original_部名, 
                    global::System.Nullable<int> Original_発注区分, 
                    global::System.Nullable<int> Original_請求月, 
                    string Original_ＥＯＳ区分, 
                    global::System.Nullable<int> Original_帳票区分, 
                    string Original_発注単位, 
                    string Original_ＥＯＳ商品コード, 
                    string Original_ＥＯＳ商品名, 
                    string Original_ＥＯＳ規格, 
                    global::System.Nullable<decimal> Original_表示価格, 
                    global::System.Nullable<decimal> Original_ＥＯＳ棚番, 
                    global::System.Nullable<decimal> Original_ＪＡＮコード, 
                    string Original_メーカー品番, 
                    string Original_棚番, 
                    string Original_メーカー名, 
                    global::System.Nullable<int> Original_店コード, 
                    global::System.Nullable<int> Original_部コード, 
                    string Original_エラー区分, 
                    global::System.Nullable<int> Original_更新ビット, 
                    string Original_商品番号, 
                    global::System.Nullable<int> Original_社コード, 
                    global::System.Nullable<int> Original_店コードＢ, 
                    global::System.Nullable<int> Original_直送区分, 
                    global::System.Nullable<int> Original_客注区分, 
                    global::System.Nullable<int> Original_経費区分, 
                    global::System.Nullable<int> Original_返品区分, 
                    global::System.Nullable<decimal> Original_本部原価単価, 
                    global::System.Nullable<decimal> Original_本部原価金額, 
                    global::System.Nullable<decimal> Original_納入単価, 
                    global::System.Nullable<decimal> Original_店舗売価, 
                    string Original_大分類コード, 
                    string Original_店舗備考, 
                    string Original_仕入先備考, 
                    global::System.Nullable<int> Original_登録番号, 
                    global::System.Nullable<int> Original_ドラスタ発注番号, 
                    string Original_客注番号, 
                    global::System.Nullable<short> Original_ドラスタ区分, 
                    global::System.Nullable<short> Original_欠品理由, 
                    int 売上修正連番) {
            if ((修正処理年月日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(修正処理年月日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(処理コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((入力区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(入力区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(エラーフラグ));
            if ((受発注行数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(受発注行数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((受注連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(受注連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((出荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(出荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((出荷連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(出荷連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((発注連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(発注連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((売上日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(売上日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((納入日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(納入日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((受注日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(受注日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((発注納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(発注納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((処理区.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((short)(処理区.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((売上区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((short)(売上区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((short)(システム区分));
            if ((取引区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((short)(取引区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((請求月区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((short)(請求月区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((得意先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(得意先コード));
            }
            if ((得名 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(得名));
            }
            if ((事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(事業所コード));
            }
            if ((ランク.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((short)(ランク.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((部課コード == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(部課コード));
            }
            if ((担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(担当者コード));
            }
            if ((代理店コード == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(代理店コード));
            }
            if ((代名 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(代名));
            }
            if ((納入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(納入先コード));
            }
            if ((納名 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(納名));
            }
            if ((取引先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(取引先コード));
            }
            if ((取引先名 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(取引先名));
            }
            if ((請求先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(請求先コード));
            }
            if ((売上切捨区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((short)(売上切捨区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((売上税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((short)(売上税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((伝票摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(伝票摘要));
            }
            if ((商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(商品コード));
            }
            if ((商名 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(商名));
            }
            if ((規格 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(規格));
            }
            if ((形式寸法 == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(形式寸法));
            }
            if ((材質 == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(材質));
            }
            if ((分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((short)(分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(在庫管理区分));
            if ((品種コード == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(品種コード));
            }
            if ((メーカーコード == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(メーカーコード));
            }
            if ((入数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(入数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((単位コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((short)(単位コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((倉庫コード == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(倉庫コード));
            }
            if ((ケース数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(ケース数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((数量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(数量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((売上単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(売上単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((売上金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(売上金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((税抜売上金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(税抜売上金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((原価単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((decimal)(原価単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((原価金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(原価金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((粗利.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(粗利.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((消費税.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(消費税.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((税抜仕入金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(税抜仕入金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((仕入消費税.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((decimal)(仕入消費税.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((売上返品値引理由区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((short)(売上返品値引理由区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((外内税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((short)(外内税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((decimal)(消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((新消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((decimal)(新消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((新消費税適用.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((System.DateTime)(新消費税適用.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((明細摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(明細摘要));
            }
            if ((受注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(受注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((相手先注文番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(相手先注文番号));
            }
            if ((自社受付番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(自社受付番号));
            }
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((仕入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(仕入先コード));
            }
            if ((仕名 == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(仕名));
            }
            if ((仕入分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((short)(仕入分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((仕入事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(仕入事業所コード));
            }
            if ((仕入担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(仕入担当者コード));
            }
            if ((仕入切捨区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((short)(仕入切捨区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((仕入税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((short)(仕入税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((入金番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(入金番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[81].Value = ((bool)(チェック));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((bool)(入金チェック));
            if ((回収摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(回収摘要));
            }
            this.Adapter.UpdateCommand.Parameters[84].Value = ((bool)(検収チェック));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((bool)(完了フラグ));
            if ((WS_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((short)(WS_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[87].Value = ((bool)(発行済フラグ));
            this.Adapter.UpdateCommand.Parameters[88].Value = ((bool)(受注更新フラグ));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((bool)(出荷更新フラグ));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((bool)(得意先更新フラグ));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((bool)(商品更新フラグ));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((bool)(商品倉庫更新フラグ));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((bool)(商品取引更新フラグ));
            if ((オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(オペレーターコード));
            }
            if ((修正オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(修正オペレーターコード));
            }
            if ((受注行.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(受注行.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((処理月日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((System.DateTime)(処理月日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((管理年月.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((int)(管理年月.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((受注行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(受注行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((売上行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((int)(売上行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((定価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((decimal)(定価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((納品掛率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((decimal)(納品掛率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((原価掛率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((decimal)(原価掛率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((発注有無区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((short)(発注有無区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((回答納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((System.DateTime)(回答納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((在庫数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((decimal)(在庫数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((受注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((decimal)(受注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((発注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((decimal)(発注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((納品書発行フラグ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((short)(納品書発行フラグ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((専用伝票発行フラグ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((short)(専用伝票発行フラグ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((売上累計.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((decimal)(売上累計.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((受注番号受注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((decimal)(受注番号受注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((取引先コード２.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(取引先コード２.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((社名 == null)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(社名));
            }
            if ((店名 == null)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(店名));
            }
            if ((部名 == null)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(部名));
            }
            if ((発注区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((int)(発注区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((請求月.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(請求月.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((ＥＯＳ区分 == null)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(ＥＯＳ区分));
            }
            if ((帳票区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((int)(帳票区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((発注単位 == null)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(発注単位));
            }
            if ((ＥＯＳ商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(ＥＯＳ商品コード));
            }
            if ((ＥＯＳ商品名 == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(ＥＯＳ商品名));
            }
            if ((ＥＯＳ規格 == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(ＥＯＳ規格));
            }
            if ((表示価格.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((decimal)(表示価格.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((ＥＯＳ棚番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((decimal)(ＥＯＳ棚番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((ＪＡＮコード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((decimal)(ＪＡＮコード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((メーカー品番 == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((string)(メーカー品番));
            }
            if ((棚番 == null)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(棚番));
            }
            if ((メーカー名 == null)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((string)(メーカー名));
            }
            if ((店コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((int)(店コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((部コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((int)(部コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((エラー区分 == null)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((string)(エラー区分));
            }
            if ((更新ビット.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((int)(更新ビット.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((商品番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(商品番号));
            }
            if ((社コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((int)(社コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((店コードＢ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((int)(店コードＢ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((直送区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((int)(直送区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((客注区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((int)(客注区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((経費区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((int)(経費区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((返品区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((int)(返品区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((本部原価単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((decimal)(本部原価単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((本部原価金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((decimal)(本部原価金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((納入単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((decimal)(納入単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((店舗売価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((decimal)(店舗売価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((大分類コード == null)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((string)(大分類コード));
            }
            if ((店舗備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((string)(店舗備考));
            }
            if ((仕入先備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((string)(仕入先備考));
            }
            if ((登録番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((int)(登録番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((ドラスタ発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((int)(ドラスタ発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((客注番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((string)(客注番号));
            }
            if ((ドラスタ区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((short)(ドラスタ区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((欠品理由.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((short)(欠品理由.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[154].Value = ((int)(Original_売上修正連番));
            if ((Original_修正処理年月日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((System.DateTime)(Original_修正処理年月日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_処理コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((int)(Original_処理コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            if ((Original_入力区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((short)(Original_入力区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            if ((Original_処理番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[164].Value = ((int)(Original_処理番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[165].Value = ((bool)(Original_エラーフラグ));
            if ((Original_受発注行数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((int)(Original_受発注行数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_受注連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((int)(Original_受注連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((int)(Original_出荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((int)(Original_出荷連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((int)(Original_発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_発注連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((int)(Original_発注連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_売上伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((int)(Original_売上伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((System.DateTime)(Original_処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_売上日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((System.DateTime)(Original_売上日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            if ((Original_納入日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((System.DateTime)(Original_納入日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            if ((Original_受注日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((System.DateTime)(Original_受注日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            if ((Original_納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((System.DateTime)(Original_納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            if ((Original_発注納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((System.DateTime)(Original_発注納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            if ((Original_処理区.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((short)(Original_処理区.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            if ((Original_売上区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((short)(Original_売上区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[196].Value = ((short)(Original_システム区分));
            if ((Original_取引区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[198].Value = ((short)(Original_取引区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            if ((Original_請求月区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[200].Value = ((short)(Original_請求月区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            if ((Original_得意先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[202].Value = ((string)(Original_得意先コード));
            }
            if ((Original_得名 == null)) {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[204].Value = ((string)(Original_得名));
            }
            if ((Original_事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[206].Value = ((string)(Original_事業所コード));
            }
            if ((Original_ランク.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[208].Value = ((short)(Original_ランク.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            if ((Original_部課コード == null)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[210].Value = ((string)(Original_部課コード));
            }
            if ((Original_担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[212].Value = ((string)(Original_担当者コード));
            }
            if ((Original_代理店コード == null)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[214].Value = ((string)(Original_代理店コード));
            }
            if ((Original_代名 == null)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((string)(Original_代名));
            }
            if ((Original_納入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((string)(Original_納入先コード));
            }
            if ((Original_納名 == null)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[220].Value = ((string)(Original_納名));
            }
            if ((Original_取引先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[222].Value = ((string)(Original_取引先コード));
            }
            if ((Original_取引先名 == null)) {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[224].Value = ((string)(Original_取引先名));
            }
            if ((Original_請求先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[226].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[226].Value = ((string)(Original_請求先コード));
            }
            if ((Original_売上切捨区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[228].Value = ((short)(Original_売上切捨区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[228].Value = global::System.DBNull.Value;
            }
            if ((Original_売上税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[230].Value = ((short)(Original_売上税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[230].Value = global::System.DBNull.Value;
            }
            if ((Original_伝票摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[232].Value = ((string)(Original_伝票摘要));
            }
            if ((Original_商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[234].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[234].Value = ((string)(Original_商品コード));
            }
            if ((Original_商名 == null)) {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[236].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[236].Value = ((string)(Original_商名));
            }
            if ((Original_規格 == null)) {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[238].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[238].Value = ((string)(Original_規格));
            }
            if ((Original_形式寸法 == null)) {
                this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[240].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[240].Value = ((string)(Original_形式寸法));
            }
            if ((Original_材質 == null)) {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[242].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[242].Value = ((string)(Original_材質));
            }
            if ((Original_分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[243].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[244].Value = ((short)(Original_分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[243].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[244].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[245].Value = ((bool)(Original_在庫管理区分));
            if ((Original_品種コード == null)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((string)(Original_品種コード));
            }
            if ((Original_メーカーコード == null)) {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[249].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[249].Value = ((string)(Original_メーカーコード));
            }
            if ((Original_入数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[251].Value = ((decimal)(Original_入数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[251].Value = global::System.DBNull.Value;
            }
            if ((Original_単位コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[253].Value = ((short)(Original_単位コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[253].Value = global::System.DBNull.Value;
            }
            if ((Original_倉庫コード == null)) {
                this.Adapter.UpdateCommand.Parameters[254].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[255].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[254].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[255].Value = ((string)(Original_倉庫コード));
            }
            if ((Original_ケース数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[257].Value = ((decimal)(Original_ケース数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[257].Value = global::System.DBNull.Value;
            }
            if ((Original_数量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[259].Value = ((decimal)(Original_数量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[259].Value = global::System.DBNull.Value;
            }
            if ((Original_売上単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[261].Value = ((decimal)(Original_売上単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[261].Value = global::System.DBNull.Value;
            }
            if ((Original_売上金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[263].Value = ((decimal)(Original_売上金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[263].Value = global::System.DBNull.Value;
            }
            if ((Original_税抜売上金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[265].Value = ((decimal)(Original_税抜売上金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[265].Value = global::System.DBNull.Value;
            }
            if ((Original_原価単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[267].Value = ((decimal)(Original_原価単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[267].Value = global::System.DBNull.Value;
            }
            if ((Original_原価金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[269].Value = ((decimal)(Original_原価金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[269].Value = global::System.DBNull.Value;
            }
            if ((Original_粗利.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[270].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[271].Value = ((decimal)(Original_粗利.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[270].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[271].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[272].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[273].Value = ((decimal)(Original_消費税.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[272].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[273].Value = global::System.DBNull.Value;
            }
            if ((Original_税抜仕入金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[274].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[275].Value = ((decimal)(Original_税抜仕入金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[274].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[275].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入消費税.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[277].Value = ((decimal)(Original_仕入消費税.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[277].Value = global::System.DBNull.Value;
            }
            if ((Original_売上返品値引理由区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[278].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[279].Value = ((short)(Original_売上返品値引理由区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[278].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[279].Value = global::System.DBNull.Value;
            }
            if ((Original_外内税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[280].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[281].Value = ((short)(Original_外内税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[280].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[281].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[282].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[283].Value = ((decimal)(Original_消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[282].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[283].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[284].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[285].Value = ((decimal)(Original_新消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[284].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[285].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税適用.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[286].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[287].Value = ((System.DateTime)(Original_新消費税適用.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[286].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[287].Value = global::System.DBNull.Value;
            }
            if ((Original_明細摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[288].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[289].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[288].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[289].Value = ((string)(Original_明細摘要));
            }
            if ((Original_受注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[290].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[291].Value = ((int)(Original_受注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[290].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[291].Value = global::System.DBNull.Value;
            }
            if ((Original_相手先注文番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[292].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[293].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[292].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[293].Value = ((string)(Original_相手先注文番号));
            }
            if ((Original_自社受付番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[294].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[295].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[294].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[295].Value = ((string)(Original_自社受付番号));
            }
            if ((Original_仕入伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[296].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[297].Value = ((int)(Original_仕入伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[296].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[297].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[298].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[299].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[298].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[299].Value = ((string)(Original_仕入先コード));
            }
            if ((Original_仕名 == null)) {
                this.Adapter.UpdateCommand.Parameters[300].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[301].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[300].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[301].Value = ((string)(Original_仕名));
            }
            if ((Original_仕入分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[302].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[303].Value = ((short)(Original_仕入分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[302].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[303].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[304].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[305].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[304].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[305].Value = ((string)(Original_仕入事業所コード));
            }
            if ((Original_仕入担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[306].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[307].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[306].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[307].Value = ((string)(Original_仕入担当者コード));
            }
            if ((Original_仕入切捨区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[308].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[309].Value = ((short)(Original_仕入切捨区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[308].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[309].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[310].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[311].Value = ((short)(Original_仕入税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[310].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[311].Value = global::System.DBNull.Value;
            }
            if ((Original_入金番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[312].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[313].Value = ((int)(Original_入金番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[312].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[313].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[314].Value = ((bool)(Original_チェック));
            this.Adapter.UpdateCommand.Parameters[315].Value = ((bool)(Original_入金チェック));
            if ((Original_回収摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[316].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[317].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[316].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[317].Value = ((string)(Original_回収摘要));
            }
            this.Adapter.UpdateCommand.Parameters[318].Value = ((bool)(Original_検収チェック));
            this.Adapter.UpdateCommand.Parameters[319].Value = ((bool)(Original_完了フラグ));
            if ((Original_WS_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[320].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[321].Value = ((short)(Original_WS_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[320].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[321].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[322].Value = ((bool)(Original_発行済フラグ));
            this.Adapter.UpdateCommand.Parameters[323].Value = ((bool)(Original_受注更新フラグ));
            this.Adapter.UpdateCommand.Parameters[324].Value = ((bool)(Original_出荷更新フラグ));
            this.Adapter.UpdateCommand.Parameters[325].Value = ((bool)(Original_得意先更新フラグ));
            this.Adapter.UpdateCommand.Parameters[326].Value = ((bool)(Original_商品更新フラグ));
            this.Adapter.UpdateCommand.Parameters[327].Value = ((bool)(Original_商品倉庫更新フラグ));
            this.Adapter.UpdateCommand.Parameters[328].Value = ((bool)(Original_商品取引更新フラグ));
            if ((Original_オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[329].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[330].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[329].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[330].Value = ((string)(Original_オペレーターコード));
            }
            if ((Original_修正オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[331].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[332].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[331].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[332].Value = ((string)(Original_修正オペレーターコード));
            }
            if ((Original_受注行.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[333].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[334].Value = ((int)(Original_受注行.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[333].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[334].Value = global::System.DBNull.Value;
            }
            if ((Original_処理月日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[335].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[336].Value = ((System.DateTime)(Original_処理月日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[335].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[336].Value = global::System.DBNull.Value;
            }
            if ((Original_管理年月.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[337].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[338].Value = ((int)(Original_管理年月.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[337].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[338].Value = global::System.DBNull.Value;
            }
            if ((Original_受注行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[339].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[340].Value = ((int)(Original_受注行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[339].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[340].Value = global::System.DBNull.Value;
            }
            if ((Original_売上行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[341].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[342].Value = ((int)(Original_売上行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[341].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[342].Value = global::System.DBNull.Value;
            }
            if ((Original_定価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[343].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[344].Value = ((decimal)(Original_定価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[343].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[344].Value = global::System.DBNull.Value;
            }
            if ((Original_納品掛率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[345].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[346].Value = ((decimal)(Original_納品掛率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[345].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[346].Value = global::System.DBNull.Value;
            }
            if ((Original_原価掛率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[347].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[348].Value = ((decimal)(Original_原価掛率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[347].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[348].Value = global::System.DBNull.Value;
            }
            if ((Original_発注有無区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[349].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[350].Value = ((short)(Original_発注有無区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[349].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[350].Value = global::System.DBNull.Value;
            }
            if ((Original_回答納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[351].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[352].Value = ((System.DateTime)(Original_回答納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[351].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[352].Value = global::System.DBNull.Value;
            }
            if ((Original_在庫数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[353].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[354].Value = ((decimal)(Original_在庫数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[353].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[354].Value = global::System.DBNull.Value;
            }
            if ((Original_受注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[355].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[356].Value = ((decimal)(Original_受注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[355].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[356].Value = global::System.DBNull.Value;
            }
            if ((Original_発注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[357].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[358].Value = ((decimal)(Original_発注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[357].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[358].Value = global::System.DBNull.Value;
            }
            if ((Original_納品書発行フラグ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[359].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[360].Value = ((short)(Original_納品書発行フラグ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[359].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[360].Value = global::System.DBNull.Value;
            }
            if ((Original_専用伝票発行フラグ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[361].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[362].Value = ((short)(Original_専用伝票発行フラグ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[361].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[362].Value = global::System.DBNull.Value;
            }
            if ((Original_売上累計.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[363].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[364].Value = ((decimal)(Original_売上累計.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[363].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[364].Value = global::System.DBNull.Value;
            }
            if ((Original_受注番号受注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[365].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[366].Value = ((decimal)(Original_受注番号受注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[365].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[366].Value = global::System.DBNull.Value;
            }
            if ((Original_取引先コード２.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[367].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[368].Value = ((int)(Original_取引先コード２.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[367].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[368].Value = global::System.DBNull.Value;
            }
            if ((Original_社名 == null)) {
                this.Adapter.UpdateCommand.Parameters[369].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[370].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[369].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[370].Value = ((string)(Original_社名));
            }
            if ((Original_店名 == null)) {
                this.Adapter.UpdateCommand.Parameters[371].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[372].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[371].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[372].Value = ((string)(Original_店名));
            }
            if ((Original_部名 == null)) {
                this.Adapter.UpdateCommand.Parameters[373].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[374].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[373].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[374].Value = ((string)(Original_部名));
            }
            if ((Original_発注区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[375].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[376].Value = ((int)(Original_発注区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[375].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[376].Value = global::System.DBNull.Value;
            }
            if ((Original_請求月.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[377].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[378].Value = ((int)(Original_請求月.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[377].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[378].Value = global::System.DBNull.Value;
            }
            if ((Original_ＥＯＳ区分 == null)) {
                this.Adapter.UpdateCommand.Parameters[379].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[380].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[379].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[380].Value = ((string)(Original_ＥＯＳ区分));
            }
            if ((Original_帳票区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[381].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[382].Value = ((int)(Original_帳票区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[381].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[382].Value = global::System.DBNull.Value;
            }
            if ((Original_発注単位 == null)) {
                this.Adapter.UpdateCommand.Parameters[383].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[384].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[383].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[384].Value = ((string)(Original_発注単位));
            }
            if ((Original_ＥＯＳ商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[385].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[386].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[385].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[386].Value = ((string)(Original_ＥＯＳ商品コード));
            }
            if ((Original_ＥＯＳ商品名 == null)) {
                this.Adapter.UpdateCommand.Parameters[387].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[388].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[387].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[388].Value = ((string)(Original_ＥＯＳ商品名));
            }
            if ((Original_ＥＯＳ規格 == null)) {
                this.Adapter.UpdateCommand.Parameters[389].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[390].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[389].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[390].Value = ((string)(Original_ＥＯＳ規格));
            }
            if ((Original_表示価格.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[391].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[392].Value = ((decimal)(Original_表示価格.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[391].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[392].Value = global::System.DBNull.Value;
            }
            if ((Original_ＥＯＳ棚番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[393].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[394].Value = ((decimal)(Original_ＥＯＳ棚番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[393].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[394].Value = global::System.DBNull.Value;
            }
            if ((Original_ＪＡＮコード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[395].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[396].Value = ((decimal)(Original_ＪＡＮコード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[395].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[396].Value = global::System.DBNull.Value;
            }
            if ((Original_メーカー品番 == null)) {
                this.Adapter.UpdateCommand.Parameters[397].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[398].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[397].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[398].Value = ((string)(Original_メーカー品番));
            }
            if ((Original_棚番 == null)) {
                this.Adapter.UpdateCommand.Parameters[399].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[400].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[399].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[400].Value = ((string)(Original_棚番));
            }
            if ((Original_メーカー名 == null)) {
                this.Adapter.UpdateCommand.Parameters[401].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[402].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[401].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[402].Value = ((string)(Original_メーカー名));
            }
            if ((Original_店コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[403].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[404].Value = ((int)(Original_店コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[403].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[404].Value = global::System.DBNull.Value;
            }
            if ((Original_部コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[405].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[406].Value = ((int)(Original_部コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[405].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[406].Value = global::System.DBNull.Value;
            }
            if ((Original_エラー区分 == null)) {
                this.Adapter.UpdateCommand.Parameters[407].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[408].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[407].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[408].Value = ((string)(Original_エラー区分));
            }
            if ((Original_更新ビット.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[409].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[410].Value = ((int)(Original_更新ビット.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[409].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[410].Value = global::System.DBNull.Value;
            }
            if ((Original_商品番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[411].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[412].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[411].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[412].Value = ((string)(Original_商品番号));
            }
            if ((Original_社コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[413].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[414].Value = ((int)(Original_社コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[413].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[414].Value = global::System.DBNull.Value;
            }
            if ((Original_店コードＢ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[415].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[416].Value = ((int)(Original_店コードＢ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[415].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[416].Value = global::System.DBNull.Value;
            }
            if ((Original_直送区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[417].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[418].Value = ((int)(Original_直送区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[417].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[418].Value = global::System.DBNull.Value;
            }
            if ((Original_客注区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[419].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[420].Value = ((int)(Original_客注区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[419].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[420].Value = global::System.DBNull.Value;
            }
            if ((Original_経費区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[421].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[422].Value = ((int)(Original_経費区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[421].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[422].Value = global::System.DBNull.Value;
            }
            if ((Original_返品区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[423].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[424].Value = ((int)(Original_返品区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[423].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[424].Value = global::System.DBNull.Value;
            }
            if ((Original_本部原価単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[425].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[426].Value = ((decimal)(Original_本部原価単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[425].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[426].Value = global::System.DBNull.Value;
            }
            if ((Original_本部原価金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[427].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[428].Value = ((decimal)(Original_本部原価金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[427].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[428].Value = global::System.DBNull.Value;
            }
            if ((Original_納入単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[429].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[430].Value = ((decimal)(Original_納入単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[429].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[430].Value = global::System.DBNull.Value;
            }
            if ((Original_店舗売価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[431].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[432].Value = ((decimal)(Original_店舗売価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[431].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[432].Value = global::System.DBNull.Value;
            }
            if ((Original_大分類コード == null)) {
                this.Adapter.UpdateCommand.Parameters[433].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[434].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[433].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[434].Value = ((string)(Original_大分類コード));
            }
            if ((Original_店舗備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[435].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[436].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[435].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[436].Value = ((string)(Original_店舗備考));
            }
            if ((Original_仕入先備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[437].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[438].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[437].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[438].Value = ((string)(Original_仕入先備考));
            }
            if ((Original_登録番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[439].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[440].Value = ((int)(Original_登録番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[439].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[440].Value = global::System.DBNull.Value;
            }
            if ((Original_ドラスタ発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[441].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[442].Value = ((int)(Original_ドラスタ発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[441].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[442].Value = global::System.DBNull.Value;
            }
            if ((Original_客注番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[443].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[444].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[443].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[444].Value = ((string)(Original_客注番号));
            }
            if ((Original_ドラスタ区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[445].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[446].Value = ((short)(Original_ドラスタ区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[445].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[446].Value = global::System.DBNull.Value;
            }
            if ((Original_欠品理由.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[447].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[448].Value = ((short)(Original_欠品理由.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[447].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[448].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[449].Value = ((int)(売上修正連番));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> 修正処理年月日, 
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    global::System.Nullable<short> 入力区分, 
                    global::System.Nullable<int> 処理番号, 
                    bool エラーフラグ, 
                    global::System.Nullable<int> 受発注行数, 
                    global::System.Nullable<int> 受注連番, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 出荷連番, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 発注連番, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    global::System.Nullable<global::System.DateTime> 売上日, 
                    global::System.Nullable<global::System.DateTime> 納入日, 
                    global::System.Nullable<global::System.DateTime> 受注日, 
                    global::System.Nullable<global::System.DateTime> 納期, 
                    global::System.Nullable<global::System.DateTime> 発注納期, 
                    global::System.Nullable<short> 処理区, 
                    global::System.Nullable<short> 売上区分コード, 
                    short システム区分, 
                    global::System.Nullable<short> 取引区分, 
                    global::System.Nullable<short> 請求月区分コード, 
                    string 得意先コード, 
                    string 得名, 
                    string 事業所コード, 
                    global::System.Nullable<short> ランク, 
                    string 部課コード, 
                    string 担当者コード, 
                    string 代理店コード, 
                    string 代名, 
                    string 納入先コード, 
                    string 納名, 
                    string 取引先コード, 
                    string 取引先名, 
                    string 請求先コード, 
                    global::System.Nullable<short> 売上切捨区分, 
                    global::System.Nullable<short> 売上税区分, 
                    string 伝票摘要, 
                    string 商品コード, 
                    string 商名, 
                    string 規格, 
                    string 形式寸法, 
                    string 材質, 
                    global::System.Nullable<short> 分類, 
                    bool 在庫管理区分, 
                    string 品種コード, 
                    string メーカーコード, 
                    global::System.Nullable<decimal> 入数, 
                    global::System.Nullable<short> 単位コード, 
                    string 倉庫コード, 
                    global::System.Nullable<decimal> ケース数, 
                    global::System.Nullable<decimal> 数量, 
                    global::System.Nullable<decimal> 売上単価, 
                    global::System.Nullable<decimal> 売上金額, 
                    global::System.Nullable<decimal> 税抜売上金額, 
                    global::System.Nullable<decimal> 原価単価, 
                    global::System.Nullable<decimal> 原価金額, 
                    global::System.Nullable<decimal> 粗利, 
                    global::System.Nullable<decimal> 消費税, 
                    global::System.Nullable<decimal> 税抜仕入金額, 
                    global::System.Nullable<decimal> 仕入消費税, 
                    global::System.Nullable<short> 売上返品値引理由区分, 
                    global::System.Nullable<short> 外内税区分, 
                    global::System.Nullable<decimal> 消費税率, 
                    global::System.Nullable<decimal> 新消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    string 明細摘要, 
                    global::System.Nullable<int> 受注番号, 
                    string 相手先注文番号, 
                    string 自社受付番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    string 仕入先コード, 
                    string 仕名, 
                    global::System.Nullable<short> 仕入分類, 
                    string 仕入事業所コード, 
                    string 仕入担当者コード, 
                    global::System.Nullable<short> 仕入切捨区分, 
                    global::System.Nullable<short> 仕入税区分, 
                    global::System.Nullable<int> 入金番号, 
                    bool チェック, 
                    bool 入金チェック, 
                    string 回収摘要, 
                    bool 検収チェック, 
                    bool 完了フラグ, 
                    global::System.Nullable<short> WS_ID, 
                    bool 発行済フラグ, 
                    bool 受注更新フラグ, 
                    bool 出荷更新フラグ, 
                    bool 得意先更新フラグ, 
                    bool 商品更新フラグ, 
                    bool 商品倉庫更新フラグ, 
                    bool 商品取引更新フラグ, 
                    string オペレーターコード, 
                    string 修正オペレーターコード, 
                    global::System.Nullable<int> 受注行, 
                    global::System.Nullable<global::System.DateTime> 処理月日, 
                    global::System.Nullable<int> 管理年月, 
                    global::System.Nullable<int> 受注行番号, 
                    global::System.Nullable<int> 売上行番号, 
                    global::System.Nullable<decimal> 定価, 
                    global::System.Nullable<decimal> 納品掛率, 
                    global::System.Nullable<decimal> 原価掛率, 
                    global::System.Nullable<short> 発注有無区分, 
                    global::System.Nullable<global::System.DateTime> 回答納期, 
                    global::System.Nullable<decimal> 在庫数, 
                    global::System.Nullable<decimal> 受注残数, 
                    global::System.Nullable<decimal> 発注残数, 
                    global::System.Nullable<short> 納品書発行フラグ, 
                    global::System.Nullable<short> 専用伝票発行フラグ, 
                    global::System.Nullable<decimal> 売上累計, 
                    global::System.Nullable<decimal> 受注番号受注残数, 
                    global::System.Nullable<int> 取引先コード２, 
                    string 社名, 
                    string 店名, 
                    string 部名, 
                    global::System.Nullable<int> 発注区分, 
                    global::System.Nullable<int> 請求月, 
                    string ＥＯＳ区分, 
                    global::System.Nullable<int> 帳票区分, 
                    string 発注単位, 
                    string ＥＯＳ商品コード, 
                    string ＥＯＳ商品名, 
                    string ＥＯＳ規格, 
                    global::System.Nullable<decimal> 表示価格, 
                    global::System.Nullable<decimal> ＥＯＳ棚番, 
                    global::System.Nullable<decimal> ＪＡＮコード, 
                    string メーカー品番, 
                    string 棚番, 
                    string メーカー名, 
                    global::System.Nullable<int> 店コード, 
                    global::System.Nullable<int> 部コード, 
                    string エラー区分, 
                    global::System.Nullable<int> 更新ビット, 
                    string 商品番号, 
                    global::System.Nullable<int> 社コード, 
                    global::System.Nullable<int> 店コードＢ, 
                    global::System.Nullable<int> 直送区分, 
                    global::System.Nullable<int> 客注区分, 
                    global::System.Nullable<int> 経費区分, 
                    global::System.Nullable<int> 返品区分, 
                    global::System.Nullable<decimal> 本部原価単価, 
                    global::System.Nullable<decimal> 本部原価金額, 
                    global::System.Nullable<decimal> 納入単価, 
                    global::System.Nullable<decimal> 店舗売価, 
                    string 大分類コード, 
                    string 店舗備考, 
                    string 仕入先備考, 
                    global::System.Nullable<int> 登録番号, 
                    global::System.Nullable<int> ドラスタ発注番号, 
                    string 客注番号, 
                    global::System.Nullable<short> ドラスタ区分, 
                    global::System.Nullable<short> 欠品理由, 
                    int Original_売上修正連番, 
                    global::System.Nullable<global::System.DateTime> Original_修正処理年月日, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    global::System.Nullable<short> Original_入力区分, 
                    global::System.Nullable<int> Original_処理番号, 
                    bool Original_エラーフラグ, 
                    global::System.Nullable<int> Original_受発注行数, 
                    global::System.Nullable<int> Original_受注連番, 
                    global::System.Nullable<int> Original_出荷番号, 
                    global::System.Nullable<int> Original_出荷連番, 
                    global::System.Nullable<int> Original_発注番号, 
                    global::System.Nullable<int> Original_発注連番, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    global::System.Nullable<global::System.DateTime> Original_売上日, 
                    global::System.Nullable<global::System.DateTime> Original_納入日, 
                    global::System.Nullable<global::System.DateTime> Original_受注日, 
                    global::System.Nullable<global::System.DateTime> Original_納期, 
                    global::System.Nullable<global::System.DateTime> Original_発注納期, 
                    global::System.Nullable<short> Original_処理区, 
                    global::System.Nullable<short> Original_売上区分コード, 
                    short Original_システム区分, 
                    global::System.Nullable<short> Original_取引区分, 
                    global::System.Nullable<short> Original_請求月区分コード, 
                    string Original_得意先コード, 
                    string Original_得名, 
                    string Original_事業所コード, 
                    global::System.Nullable<short> Original_ランク, 
                    string Original_部課コード, 
                    string Original_担当者コード, 
                    string Original_代理店コード, 
                    string Original_代名, 
                    string Original_納入先コード, 
                    string Original_納名, 
                    string Original_取引先コード, 
                    string Original_取引先名, 
                    string Original_請求先コード, 
                    global::System.Nullable<short> Original_売上切捨区分, 
                    global::System.Nullable<short> Original_売上税区分, 
                    string Original_伝票摘要, 
                    string Original_商品コード, 
                    string Original_商名, 
                    string Original_規格, 
                    string Original_形式寸法, 
                    string Original_材質, 
                    global::System.Nullable<short> Original_分類, 
                    bool Original_在庫管理区分, 
                    string Original_品種コード, 
                    string Original_メーカーコード, 
                    global::System.Nullable<decimal> Original_入数, 
                    global::System.Nullable<short> Original_単位コード, 
                    string Original_倉庫コード, 
                    global::System.Nullable<decimal> Original_ケース数, 
                    global::System.Nullable<decimal> Original_数量, 
                    global::System.Nullable<decimal> Original_売上単価, 
                    global::System.Nullable<decimal> Original_売上金額, 
                    global::System.Nullable<decimal> Original_税抜売上金額, 
                    global::System.Nullable<decimal> Original_原価単価, 
                    global::System.Nullable<decimal> Original_原価金額, 
                    global::System.Nullable<decimal> Original_粗利, 
                    global::System.Nullable<decimal> Original_消費税, 
                    global::System.Nullable<decimal> Original_税抜仕入金額, 
                    global::System.Nullable<decimal> Original_仕入消費税, 
                    global::System.Nullable<short> Original_売上返品値引理由区分, 
                    global::System.Nullable<short> Original_外内税区分, 
                    global::System.Nullable<decimal> Original_消費税率, 
                    global::System.Nullable<decimal> Original_新消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    string Original_明細摘要, 
                    global::System.Nullable<int> Original_受注番号, 
                    string Original_相手先注文番号, 
                    string Original_自社受付番号, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    string Original_仕入先コード, 
                    string Original_仕名, 
                    global::System.Nullable<short> Original_仕入分類, 
                    string Original_仕入事業所コード, 
                    string Original_仕入担当者コード, 
                    global::System.Nullable<short> Original_仕入切捨区分, 
                    global::System.Nullable<short> Original_仕入税区分, 
                    global::System.Nullable<int> Original_入金番号, 
                    bool Original_チェック, 
                    bool Original_入金チェック, 
                    string Original_回収摘要, 
                    bool Original_検収チェック, 
                    bool Original_完了フラグ, 
                    global::System.Nullable<short> Original_WS_ID, 
                    bool Original_発行済フラグ, 
                    bool Original_受注更新フラグ, 
                    bool Original_出荷更新フラグ, 
                    bool Original_得意先更新フラグ, 
                    bool Original_商品更新フラグ, 
                    bool Original_商品倉庫更新フラグ, 
                    bool Original_商品取引更新フラグ, 
                    string Original_オペレーターコード, 
                    string Original_修正オペレーターコード, 
                    global::System.Nullable<int> Original_受注行, 
                    global::System.Nullable<global::System.DateTime> Original_処理月日, 
                    global::System.Nullable<int> Original_管理年月, 
                    global::System.Nullable<int> Original_受注行番号, 
                    global::System.Nullable<int> Original_売上行番号, 
                    global::System.Nullable<decimal> Original_定価, 
                    global::System.Nullable<decimal> Original_納品掛率, 
                    global::System.Nullable<decimal> Original_原価掛率, 
                    global::System.Nullable<short> Original_発注有無区分, 
                    global::System.Nullable<global::System.DateTime> Original_回答納期, 
                    global::System.Nullable<decimal> Original_在庫数, 
                    global::System.Nullable<decimal> Original_受注残数, 
                    global::System.Nullable<decimal> Original_発注残数, 
                    global::System.Nullable<short> Original_納品書発行フラグ, 
                    global::System.Nullable<short> Original_専用伝票発行フラグ, 
                    global::System.Nullable<decimal> Original_売上累計, 
                    global::System.Nullable<decimal> Original_受注番号受注残数, 
                    global::System.Nullable<int> Original_取引先コード２, 
                    string Original_社名, 
                    string Original_店名, 
                    string Original_部名, 
                    global::System.Nullable<int> Original_発注区分, 
                    global::System.Nullable<int> Original_請求月, 
                    string Original_ＥＯＳ区分, 
                    global::System.Nullable<int> Original_帳票区分, 
                    string Original_発注単位, 
                    string Original_ＥＯＳ商品コード, 
                    string Original_ＥＯＳ商品名, 
                    string Original_ＥＯＳ規格, 
                    global::System.Nullable<decimal> Original_表示価格, 
                    global::System.Nullable<decimal> Original_ＥＯＳ棚番, 
                    global::System.Nullable<decimal> Original_ＪＡＮコード, 
                    string Original_メーカー品番, 
                    string Original_棚番, 
                    string Original_メーカー名, 
                    global::System.Nullable<int> Original_店コード, 
                    global::System.Nullable<int> Original_部コード, 
                    string Original_エラー区分, 
                    global::System.Nullable<int> Original_更新ビット, 
                    string Original_商品番号, 
                    global::System.Nullable<int> Original_社コード, 
                    global::System.Nullable<int> Original_店コードＢ, 
                    global::System.Nullable<int> Original_直送区分, 
                    global::System.Nullable<int> Original_客注区分, 
                    global::System.Nullable<int> Original_経費区分, 
                    global::System.Nullable<int> Original_返品区分, 
                    global::System.Nullable<decimal> Original_本部原価単価, 
                    global::System.Nullable<decimal> Original_本部原価金額, 
                    global::System.Nullable<decimal> Original_納入単価, 
                    global::System.Nullable<decimal> Original_店舗売価, 
                    string Original_大分類コード, 
                    string Original_店舗備考, 
                    string Original_仕入先備考, 
                    global::System.Nullable<int> Original_登録番号, 
                    global::System.Nullable<int> Original_ドラスタ発注番号, 
                    string Original_客注番号, 
                    global::System.Nullable<short> Original_ドラスタ区分, 
                    global::System.Nullable<short> Original_欠品理由) {
            return this.Update(修正処理年月日, 本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 受注連番, 出荷番号, 出荷連番, 発注番号, 発注連番, 売上伝票番号, 処理日, 売上日, 納入日, 受注日, 納期, 発注納期, 処理区, 売上区分コード, システム区分, 取引区分, 請求月区分コード, 得意先コード, 得名, 事業所コード, ランク, 部課コード, 担当者コード, 代理店コード, 代名, 納入先コード, 納名, 取引先コード, 取引先名, 請求先コード, 売上切捨区分, 売上税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 売上単価, 売上金額, 税抜売上金額, 原価単価, 原価金額, 粗利, 消費税, 税抜仕入金額, 仕入消費税, 売上返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 受注番号, 相手先注文番号, 自社受付番号, 仕入伝票番号, 仕入先コード, 仕名, 仕入分類, 仕入事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 入金番号, チェック, 入金チェック, 回収摘要, 検収チェック, 完了フラグ, WS_ID, 発行済フラグ, 受注更新フラグ, 出荷更新フラグ, 得意先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, 商品取引更新フラグ, オペレーターコード, 修正オペレーターコード, 受注行, 処理月日, 管理年月, 受注行番号, 売上行番号, 定価, 納品掛率, 原価掛率, 発注有無区分, 回答納期, 在庫数, 受注残数, 発注残数, 納品書発行フラグ, 専用伝票発行フラグ, 売上累計, 受注番号受注残数, 取引先コード２, 社名, 店名, 部名, 発注区分, 請求月, ＥＯＳ区分, 帳票区分, 発注単位, ＥＯＳ商品コード, ＥＯＳ商品名, ＥＯＳ規格, 表示価格, ＥＯＳ棚番, ＪＡＮコード, メーカー品番, 棚番, メーカー名, 店コード, 部コード, エラー区分, 更新ビット, 商品番号, 社コード, 店コードＢ, 直送区分, 客注区分, 経費区分, 返品区分, 本部原価単価, 本部原価金額, 納入単価, 店舗売価, 大分類コード, 店舗備考, 仕入先備考, 登録番号, ドラスタ発注番号, 客注番号, ドラスタ区分, 欠品理由, Original_売上修正連番, Original_修正処理年月日, Original_本支店区分, Original_処理コード, Original_入力区分, Original_処理番号, Original_エラーフラグ, Original_受発注行数, Original_受注連番, Original_出荷番号, Original_出荷連番, Original_発注番号, Original_発注連番, Original_売上伝票番号, Original_処理日, Original_売上日, Original_納入日, Original_受注日, Original_納期, Original_発注納期, Original_処理区, Original_売上区分コード, Original_システム区分, Original_取引区分, Original_請求月区分コード, Original_得意先コード, Original_得名, Original_事業所コード, Original_ランク, Original_部課コード, Original_担当者コード, Original_代理店コード, Original_代名, Original_納入先コード, Original_納名, Original_取引先コード, Original_取引先名, Original_請求先コード, Original_売上切捨区分, Original_売上税区分, Original_伝票摘要, Original_商品コード, Original_商名, Original_規格, Original_形式寸法, Original_材質, Original_分類, Original_在庫管理区分, Original_品種コード, Original_メーカーコード, Original_入数, Original_単位コード, Original_倉庫コード, Original_ケース数, Original_数量, Original_売上単価, Original_売上金額, Original_税抜売上金額, Original_原価単価, Original_原価金額, Original_粗利, Original_消費税, Original_税抜仕入金額, Original_仕入消費税, Original_売上返品値引理由区分, Original_外内税区分, Original_消費税率, Original_新消費税率, Original_新消費税適用, Original_明細摘要, Original_受注番号, Original_相手先注文番号, Original_自社受付番号, Original_仕入伝票番号, Original_仕入先コード, Original_仕名, Original_仕入分類, Original_仕入事業所コード, Original_仕入担当者コード, Original_仕入切捨区分, Original_仕入税区分, Original_入金番号, Original_チェック, Original_入金チェック, Original_回収摘要, Original_検収チェック, Original_完了フラグ, Original_WS_ID, Original_発行済フラグ, Original_受注更新フラグ, Original_出荷更新フラグ, Original_得意先更新フラグ, Original_商品更新フラグ, Original_商品倉庫更新フラグ, Original_商品取引更新フラグ, Original_オペレーターコード, Original_修正オペレーターコード, Original_受注行, Original_処理月日, Original_管理年月, Original_受注行番号, Original_売上行番号, Original_定価, Original_納品掛率, Original_原価掛率, Original_発注有無区分, Original_回答納期, Original_在庫数, Original_受注残数, Original_発注残数, Original_納品書発行フラグ, Original_専用伝票発行フラグ, Original_売上累計, Original_受注番号受注残数, Original_取引先コード２, Original_社名, Original_店名, Original_部名, Original_発注区分, Original_請求月, Original_ＥＯＳ区分, Original_帳票区分, Original_発注単位, Original_ＥＯＳ商品コード, Original_ＥＯＳ商品名, Original_ＥＯＳ規格, Original_表示価格, Original_ＥＯＳ棚番, Original_ＪＡＮコード, Original_メーカー品番, Original_棚番, Original_メーカー名, Original_店コード, Original_部コード, Original_エラー区分, Original_更新ビット, Original_商品番号, Original_社コード, Original_店コードＢ, Original_直送区分, Original_客注区分, Original_経費区分, Original_返品区分, Original_本部原価単価, Original_本部原価金額, Original_納入単価, Original_店舗売価, Original_大分類コード, Original_店舗備考, Original_仕入先備考, Original_登録番号, Original_ドラスタ発注番号, Original_客注番号, Original_ドラスタ区分, Original_欠品理由, Original_売上修正連番);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T売上明細ファイルTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T売上明細ファイルTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T売上明細ファイル";
            tableMapping.ColumnMappings.Add("売上連番", "売上連番");
            tableMapping.ColumnMappings.Add("本支店区分", "本支店区分");
            tableMapping.ColumnMappings.Add("処理コード", "処理コード");
            tableMapping.ColumnMappings.Add("入力区分", "入力区分");
            tableMapping.ColumnMappings.Add("処理番号", "処理番号");
            tableMapping.ColumnMappings.Add("エラーフラグ", "エラーフラグ");
            tableMapping.ColumnMappings.Add("受発注行数", "受発注行数");
            tableMapping.ColumnMappings.Add("受注連番", "受注連番");
            tableMapping.ColumnMappings.Add("出荷番号", "出荷番号");
            tableMapping.ColumnMappings.Add("出荷連番", "出荷連番");
            tableMapping.ColumnMappings.Add("発注番号", "発注番号");
            tableMapping.ColumnMappings.Add("発注連番", "発注連番");
            tableMapping.ColumnMappings.Add("売上伝票番号", "売上伝票番号");
            tableMapping.ColumnMappings.Add("処理日", "処理日");
            tableMapping.ColumnMappings.Add("売上日", "売上日");
            tableMapping.ColumnMappings.Add("納入日", "納入日");
            tableMapping.ColumnMappings.Add("受注日", "受注日");
            tableMapping.ColumnMappings.Add("納期", "納期");
            tableMapping.ColumnMappings.Add("発注納期", "発注納期");
            tableMapping.ColumnMappings.Add("処理区", "処理区");
            tableMapping.ColumnMappings.Add("売上区分コード", "売上区分コード");
            tableMapping.ColumnMappings.Add("システム区分", "システム区分");
            tableMapping.ColumnMappings.Add("取引区分", "取引区分");
            tableMapping.ColumnMappings.Add("請求月区分コード", "請求月区分コード");
            tableMapping.ColumnMappings.Add("得意先コード", "得意先コード");
            tableMapping.ColumnMappings.Add("得名", "得名");
            tableMapping.ColumnMappings.Add("事業所コード", "事業所コード");
            tableMapping.ColumnMappings.Add("ランク", "ランク");
            tableMapping.ColumnMappings.Add("部課コード", "部課コード");
            tableMapping.ColumnMappings.Add("担当者コード", "担当者コード");
            tableMapping.ColumnMappings.Add("代理店コード", "代理店コード");
            tableMapping.ColumnMappings.Add("代名", "代名");
            tableMapping.ColumnMappings.Add("納入先コード", "納入先コード");
            tableMapping.ColumnMappings.Add("納名", "納名");
            tableMapping.ColumnMappings.Add("取引先コード", "取引先コード");
            tableMapping.ColumnMappings.Add("取引先名", "取引先名");
            tableMapping.ColumnMappings.Add("請求先コード", "請求先コード");
            tableMapping.ColumnMappings.Add("売上切捨区分", "売上切捨区分");
            tableMapping.ColumnMappings.Add("売上税区分", "売上税区分");
            tableMapping.ColumnMappings.Add("伝票摘要", "伝票摘要");
            tableMapping.ColumnMappings.Add("商品コード", "商品コード");
            tableMapping.ColumnMappings.Add("商名", "商名");
            tableMapping.ColumnMappings.Add("規格", "規格");
            tableMapping.ColumnMappings.Add("形式寸法", "形式寸法");
            tableMapping.ColumnMappings.Add("材質", "材質");
            tableMapping.ColumnMappings.Add("分類", "分類");
            tableMapping.ColumnMappings.Add("在庫管理区分", "在庫管理区分");
            tableMapping.ColumnMappings.Add("品種コード", "品種コード");
            tableMapping.ColumnMappings.Add("メーカーコード", "メーカーコード");
            tableMapping.ColumnMappings.Add("入数", "入数");
            tableMapping.ColumnMappings.Add("単位コード", "単位コード");
            tableMapping.ColumnMappings.Add("倉庫コード", "倉庫コード");
            tableMapping.ColumnMappings.Add("ケース数", "ケース数");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("売上単価", "売上単価");
            tableMapping.ColumnMappings.Add("売上金額", "売上金額");
            tableMapping.ColumnMappings.Add("税抜売上金額", "税抜売上金額");
            tableMapping.ColumnMappings.Add("原価単価", "原価単価");
            tableMapping.ColumnMappings.Add("原価金額", "原価金額");
            tableMapping.ColumnMappings.Add("粗利", "粗利");
            tableMapping.ColumnMappings.Add("消費税", "消費税");
            tableMapping.ColumnMappings.Add("税抜仕入金額", "税抜仕入金額");
            tableMapping.ColumnMappings.Add("仕入消費税", "仕入消費税");
            tableMapping.ColumnMappings.Add("売上返品値引理由区分", "売上返品値引理由区分");
            tableMapping.ColumnMappings.Add("外内税区分", "外内税区分");
            tableMapping.ColumnMappings.Add("消費税率", "消費税率");
            tableMapping.ColumnMappings.Add("新消費税率", "新消費税率");
            tableMapping.ColumnMappings.Add("新消費税適用", "新消費税適用");
            tableMapping.ColumnMappings.Add("明細摘要", "明細摘要");
            tableMapping.ColumnMappings.Add("受注番号", "受注番号");
            tableMapping.ColumnMappings.Add("相手先注文番号", "相手先注文番号");
            tableMapping.ColumnMappings.Add("自社受付番号", "自社受付番号");
            tableMapping.ColumnMappings.Add("仕入伝票番号", "仕入伝票番号");
            tableMapping.ColumnMappings.Add("仕入先コード", "仕入先コード");
            tableMapping.ColumnMappings.Add("仕名", "仕名");
            tableMapping.ColumnMappings.Add("仕入分類", "仕入分類");
            tableMapping.ColumnMappings.Add("仕入事業所コード", "仕入事業所コード");
            tableMapping.ColumnMappings.Add("仕入担当者コード", "仕入担当者コード");
            tableMapping.ColumnMappings.Add("仕入切捨区分", "仕入切捨区分");
            tableMapping.ColumnMappings.Add("仕入税区分", "仕入税区分");
            tableMapping.ColumnMappings.Add("入金番号", "入金番号");
            tableMapping.ColumnMappings.Add("チェック", "チェック");
            tableMapping.ColumnMappings.Add("入金チェック", "入金チェック");
            tableMapping.ColumnMappings.Add("回収摘要", "回収摘要");
            tableMapping.ColumnMappings.Add("検収チェック", "検収チェック");
            tableMapping.ColumnMappings.Add("完了フラグ", "完了フラグ");
            tableMapping.ColumnMappings.Add("WS_ID", "WS_ID");
            tableMapping.ColumnMappings.Add("発行済フラグ", "発行済フラグ");
            tableMapping.ColumnMappings.Add("受注更新フラグ", "受注更新フラグ");
            tableMapping.ColumnMappings.Add("出荷更新フラグ", "出荷更新フラグ");
            tableMapping.ColumnMappings.Add("得意先更新フラグ", "得意先更新フラグ");
            tableMapping.ColumnMappings.Add("商品更新フラグ", "商品更新フラグ");
            tableMapping.ColumnMappings.Add("商品倉庫更新フラグ", "商品倉庫更新フラグ");
            tableMapping.ColumnMappings.Add("商品取引更新フラグ", "商品取引更新フラグ");
            tableMapping.ColumnMappings.Add("オペレーターコード", "オペレーターコード");
            tableMapping.ColumnMappings.Add("修正オペレーターコード", "修正オペレーターコード");
            tableMapping.ColumnMappings.Add("受注行", "受注行");
            tableMapping.ColumnMappings.Add("処理月日", "処理月日");
            tableMapping.ColumnMappings.Add("管理年月", "管理年月");
            tableMapping.ColumnMappings.Add("一括消費税締日", "一括消費税締日");
            tableMapping.ColumnMappings.Add("発行済INDEX", "発行済INDEX");
            tableMapping.ColumnMappings.Add("受注行番号", "受注行番号");
            tableMapping.ColumnMappings.Add("売上行番号", "売上行番号");
            tableMapping.ColumnMappings.Add("定価", "定価");
            tableMapping.ColumnMappings.Add("納品掛率", "納品掛率");
            tableMapping.ColumnMappings.Add("原価掛率", "原価掛率");
            tableMapping.ColumnMappings.Add("発注有無区分", "発注有無区分");
            tableMapping.ColumnMappings.Add("回答納期", "回答納期");
            tableMapping.ColumnMappings.Add("在庫数", "在庫数");
            tableMapping.ColumnMappings.Add("受注残数", "受注残数");
            tableMapping.ColumnMappings.Add("発注残数", "発注残数");
            tableMapping.ColumnMappings.Add("納品書発行フラグ", "納品書発行フラグ");
            tableMapping.ColumnMappings.Add("専用伝票発行フラグ", "専用伝票発行フラグ");
            tableMapping.ColumnMappings.Add("売上累計", "売上累計");
            tableMapping.ColumnMappings.Add("受注番号受注残数", "受注番号受注残数");
            tableMapping.ColumnMappings.Add("納品書発行日時", "納品書発行日時");
            tableMapping.ColumnMappings.Add("取引先コード２", "取引先コード２");
            tableMapping.ColumnMappings.Add("社名", "社名");
            tableMapping.ColumnMappings.Add("店名", "店名");
            tableMapping.ColumnMappings.Add("部名", "部名");
            tableMapping.ColumnMappings.Add("発注区分", "発注区分");
            tableMapping.ColumnMappings.Add("請求月", "請求月");
            tableMapping.ColumnMappings.Add("ＥＯＳ区分", "ＥＯＳ区分");
            tableMapping.ColumnMappings.Add("帳票区分", "帳票区分");
            tableMapping.ColumnMappings.Add("発注単位", "発注単位");
            tableMapping.ColumnMappings.Add("ＥＯＳ商品コード", "ＥＯＳ商品コード");
            tableMapping.ColumnMappings.Add("ＥＯＳ商品名", "ＥＯＳ商品名");
            tableMapping.ColumnMappings.Add("ＥＯＳ規格", "ＥＯＳ規格");
            tableMapping.ColumnMappings.Add("表示価格", "表示価格");
            tableMapping.ColumnMappings.Add("ＥＯＳ棚番", "ＥＯＳ棚番");
            tableMapping.ColumnMappings.Add("ＪＡＮコード", "ＪＡＮコード");
            tableMapping.ColumnMappings.Add("メーカー品番", "メーカー品番");
            tableMapping.ColumnMappings.Add("棚番", "棚番");
            tableMapping.ColumnMappings.Add("メーカー名", "メーカー名");
            tableMapping.ColumnMappings.Add("店コード", "店コード");
            tableMapping.ColumnMappings.Add("部コード", "部コード");
            tableMapping.ColumnMappings.Add("エラー区分", "エラー区分");
            tableMapping.ColumnMappings.Add("更新ビット", "更新ビット");
            tableMapping.ColumnMappings.Add("商品番号", "商品番号");
            tableMapping.ColumnMappings.Add("社コード", "社コード");
            tableMapping.ColumnMappings.Add("店コードＢ", "店コードＢ");
            tableMapping.ColumnMappings.Add("直送区分", "直送区分");
            tableMapping.ColumnMappings.Add("客注区分", "客注区分");
            tableMapping.ColumnMappings.Add("経費区分", "経費区分");
            tableMapping.ColumnMappings.Add("返品区分", "返品区分");
            tableMapping.ColumnMappings.Add("本部原価単価", "本部原価単価");
            tableMapping.ColumnMappings.Add("本部原価金額", "本部原価金額");
            tableMapping.ColumnMappings.Add("納入単価", "納入単価");
            tableMapping.ColumnMappings.Add("店舗売価", "店舗売価");
            tableMapping.ColumnMappings.Add("大分類コード", "大分類コード");
            tableMapping.ColumnMappings.Add("店舗備考", "店舗備考");
            tableMapping.ColumnMappings.Add("仕入先備考", "仕入先備考");
            tableMapping.ColumnMappings.Add("登録番号", "登録番号");
            tableMapping.ColumnMappings.Add("ドラスタ発注番号", "ドラスタ発注番号");
            tableMapping.ColumnMappings.Add("客注番号", "客注番号");
            tableMapping.ColumnMappings.Add("ドラスタ区分", "ドラスタ区分");
            tableMapping.ColumnMappings.Add("欠品理由", "欠品理由");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T売上明細ファイル] WHERE (([売上連番] = @Original_売上連番) AND ((@IsNull_本支店区" +
                "分 = 1 AND [本支店区分] IS NULL) OR ([本支店区分] = @Original_本支店区分)) AND ((@IsNull_処理コード =" +
                " 1 AND [処理コード] IS NULL) OR ([処理コード] = @Original_処理コード)) AND ((@IsNull_入力区分 = 1 A" +
                "ND [入力区分] IS NULL) OR ([入力区分] = @Original_入力区分)) AND ((@IsNull_処理番号 = 1 AND [処理番" +
                "号] IS NULL) OR ([処理番号] = @Original_処理番号)) AND ([エラーフラグ] = @Original_エラーフラグ) AND " +
                "((@IsNull_受発注行数 = 1 AND [受発注行数] IS NULL) OR ([受発注行数] = @Original_受発注行数)) AND ((@" +
                "IsNull_受注連番 = 1 AND [受注連番] IS NULL) OR ([受注連番] = @Original_受注連番)) AND ((@IsNull_" +
                "出荷番号 = 1 AND [出荷番号] IS NULL) OR ([出荷番号] = @Original_出荷番号)) AND ((@IsNull_出荷連番 = " +
                "1 AND [出荷連番] IS NULL) OR ([出荷連番] = @Original_出荷連番)) AND ((@IsNull_発注番号 = 1 AND [" +
                "発注番号] IS NULL) OR ([発注番号] = @Original_発注番号)) AND ((@IsNull_発注連番 = 1 AND [発注連番] I" +
                "S NULL) OR ([発注連番] = @Original_発注連番)) AND ((@IsNull_売上伝票番号 = 1 AND [売上伝票番号] IS N" +
                "ULL) OR ([売上伝票番号] = @Original_売上伝票番号)) AND ((@IsNull_処理日 = 1 AND [処理日] IS NULL) " +
                "OR ([処理日] = @Original_処理日)) AND ((@IsNull_売上日 = 1 AND [売上日] IS NULL) OR ([売上日] =" +
                " @Original_売上日)) AND ((@IsNull_納入日 = 1 AND [納入日] IS NULL) OR ([納入日] = @Original_" +
                "納入日)) AND ((@IsNull_受注日 = 1 AND [受注日] IS NULL) OR ([受注日] = @Original_受注日)) AND (" +
                "(@IsNull_納期 = 1 AND [納期] IS NULL) OR ([納期] = @Original_納期)) AND ((@IsNull_発注納期 =" +
                " 1 AND [発注納期] IS NULL) OR ([発注納期] = @Original_発注納期)) AND ((@IsNull_処理区 = 1 AND [" +
                "処理区] IS NULL) OR ([処理区] = @Original_処理区)) AND ((@IsNull_売上区分コード = 1 AND [売上区分コード" +
                "] IS NULL) OR ([売上区分コード] = @Original_売上区分コード)) AND ([システム区分] = @Original_システム区分)" +
                " AND ((@IsNull_取引区分 = 1 AND [取引区分] IS NULL) OR ([取引区分] = @Original_取引区分)) AND ((" +
                "@IsNull_請求月区分コード = 1 AND [請求月区分コード] IS NULL) OR ([請求月区分コード] = @Original_請求月区分コード" +
                ")) AND ((@IsNull_得意先コード = 1 AND [得意先コード] IS NULL) OR ([得意先コード] = @Original_得意先コー" +
                "ド)) AND ((@IsNull_得名 = 1 AND [得名] IS NULL) OR ([得名] = @Original_得名)) AND ((@IsNu" +
                "ll_事業所コード = 1 AND [事業所コード] IS NULL) OR ([事業所コード] = @Original_事業所コード)) AND ((@IsN" +
                "ull_ランク = 1 AND [ランク] IS NULL) OR ([ランク] = @Original_ランク)) AND ((@IsNull_部課コード =" +
                " 1 AND [部課コード] IS NULL) OR ([部課コード] = @Original_部課コード)) AND ((@IsNull_担当者コード = 1" +
                " AND [担当者コード] IS NULL) OR ([担当者コード] = @Original_担当者コード)) AND ((@IsNull_代理店コード = " +
                "1 AND [代理店コード] IS NULL) OR ([代理店コード] = @Original_代理店コード)) AND ((@IsNull_代名 = 1 A" +
                "ND [代名] IS NULL) OR ([代名] = @Original_代名)) AND ((@IsNull_納入先コード = 1 AND [納入先コード]" +
                " IS NULL) OR ([納入先コード] = @Original_納入先コード)) AND ((@IsNull_納名 = 1 AND [納名] IS NUL" +
                "L) OR ([納名] = @Original_納名)) AND ((@IsNull_取引先コード = 1 AND [取引先コード] IS NULL) OR (" +
                "[取引先コード] = @Original_取引先コード)) AND ((@IsNull_取引先名 = 1 AND [取引先名] IS NULL) OR ([取引" +
                "先名] = @Original_取引先名)) AND ((@IsNull_請求先コード = 1 AND [請求先コード] IS NULL) OR ([請求先コー" +
                "ド] = @Original_請求先コード)) AND ((@IsNull_売上切捨区分 = 1 AND [売上切捨区分] IS NULL) OR ([売上切捨" +
                "区分] = @Original_売上切捨区分)) AND ((@IsNull_売上税区分 = 1 AND [売上税区分] IS NULL) OR ([売上税区分" +
                "] = @Original_売上税区分)) AND ((@IsNull_伝票摘要 = 1 AND [伝票摘要] IS NULL) OR ([伝票摘要] = @O" +
                "riginal_伝票摘要)) AND ((@IsNull_商品コード = 1 AND [商品コード] IS NULL) OR ([商品コード] = @Origi" +
                "nal_商品コード)) AND ((@IsNull_商名 = 1 AND [商名] IS NULL) OR ([商名] = @Original_商名)) AND" +
                " ((@IsNull_規格 = 1 AND [規格] IS NULL) OR ([規格] = @Original_規格)) AND ((@IsNull_形式寸法" +
                " = 1 AND [形式寸法] IS NULL) OR ([形式寸法] = @Original_形式寸法)) AND ((@IsNull_材質 = 1 AND " +
                "[材質] IS NULL) OR ([材質] = @Original_材質)) AND ((@IsNull_分類 = 1 AND [分類] IS NULL) O" +
                "R ([分類] = @Original_分類)) AND ([在庫管理区分] = @Original_在庫管理区分) AND ((@IsNull_品種コード =" +
                " 1 AND [品種コード] IS NULL) OR ([品種コード] = @Original_品種コード)) AND ((@IsNull_メーカーコード = " +
                "1 AND [メーカーコード] IS NULL) OR ([メーカーコード] = @Original_メーカーコード)) AND ((@IsNull_入数 = " +
                "1 AND [入数] IS NULL) OR ([入数] = @Original_入数)) AND ((@IsNull_単位コード = 1 AND [単位コード" +
                "] IS NULL) OR ([単位コード] = @Original_単位コード)) AND ((@IsNull_倉庫コード = 1 AND [倉庫コード] I" +
                "S NULL) OR ([倉庫コード] = @Original_倉庫コード)) AND ((@IsNull_ケース数 = 1 AND [ケース数] IS NUL" +
                "L) OR ([ケース数] = @Original_ケース数)) AND ((@IsNull_数量 = 1 AND [数量] IS NULL) OR ([数量]" +
                " = @Original_数量)) AND ((@IsNull_売上単価 = 1 AND [売上単価] IS NULL) OR ([売上単価] = @Origi" +
                "nal_売上単価)) AND ((@IsNull_売上金額 = 1 AND [売上金額] IS NULL) OR ([売上金額] = @Original_売上金" +
                "額)) AND ((@IsNull_税抜売上金額 = 1 AND [税抜売上金額] IS NULL) OR ([税抜売上金額] = @Original_税抜売上" +
                "金額)) AND ((@IsNull_原価単価 = 1 AND [原価単価] IS NULL) OR ([原価単価] = @Original_原価単価)) AN" +
                "D ((@IsNull_原価金額 = 1 AND [原価金額] IS NULL) OR ([原価金額] = @Original_原価金額)) AND ((@Is" +
                "Null_粗利 = 1 AND [粗利] IS NULL) OR ([粗利] = @Original_粗利)) AND ((@IsNull_消費税 = 1 AN" +
                "D [消費税] IS NULL) OR ([消費税] = @Original_消費税)) AND ((@IsNull_税抜仕入金額 = 1 AND [税抜仕入金" +
                "額] IS NULL) OR ([税抜仕入金額] = @Original_税抜仕入金額)) AND ((@IsNull_仕入消費税 = 1 AND [仕入消費税" +
                "] IS NULL) OR ([仕入消費税] = @Original_仕入消費税)) AND ((@IsNull_売上返品値引理由区分 = 1 AND [売上返" +
                "品値引理由区分] IS NULL) OR ([売上返品値引理由区分] = @Original_売上返品値引理由区分)) AND ((@IsNull_外内税区分 " +
                "= 1 AND [外内税区分] IS NULL) OR ([外内税区分] = @Original_外内税区分)) AND ((@IsNull_消費税率 = 1 " +
                "AND [消費税率] IS NULL) OR ([消費税率] = @Original_消費税率)) AND ((@IsNull_新消費税率 = 1 AND [新" +
                "消費税率] IS NULL) OR ([新消費税率] = @Original_新消費税率)) AND ((@IsNull_新消費税適用 = 1 AND [新消費" +
                "税適用] IS NULL) OR ([新消費税適用] = @Original_新消費税適用)) AND ((@IsNull_明細摘要 = 1 AND [明細摘要" +
                "] IS NULL) OR ([明細摘要] = @Original_明細摘要)) AND ((@IsNull_受注番号 = 1 AND [受注番号] IS NU" +
                "LL) OR ([受注番号] = @Original_受注番号)) AND ((@IsNull_相手先注文番号 = 1 AND [相手先注文番号] IS NUL" +
                "L) OR ([相手先注文番号] = @Original_相手先注文番号)) AND ((@IsNull_自社受付番号 = 1 AND [自社受付番号] IS " +
                "NULL) OR ([自社受付番号] = @Original_自社受付番号)) AND ((@IsNull_仕入伝票番号 = 1 AND [仕入伝票番号] IS" +
                " NULL) OR ([仕入伝票番号] = @Original_仕入伝票番号)) AND ((@IsNull_仕入先コード = 1 AND [仕入先コード] I" +
                "S NULL) OR ([仕入先コード] = @Original_仕入先コード)) AND ((@IsNull_仕名 = 1 AND [仕名] IS NULL)" +
                " OR ([仕名] = @Original_仕名)) AND ((@IsNull_仕入分類 = 1 AND [仕入分類] IS NULL) OR ([仕入分類]" +
                " = @Original_仕入分類)) AND ((@IsNull_仕入事業所コード = 1 AND [仕入事業所コード] IS NULL) OR ([仕入事業" +
                "所コード] = @Original_仕入事業所コード)) AND ((@IsNull_仕入担当者コード = 1 AND [仕入担当者コード] IS NULL) " +
                "OR ([仕入担当者コード] = @Original_仕入担当者コード)) AND ((@IsNull_仕入切捨区分 = 1 AND [仕入切捨区分] IS N" +
                "ULL) OR ([仕入切捨区分] = @Original_仕入切捨区分)) AND ((@IsNull_仕入税区分 = 1 AND [仕入税区分] IS NU" +
                "LL) OR ([仕入税区分] = @Original_仕入税区分)) AND ((@IsNull_入金番号 = 1 AND [入金番号] IS NULL) O" +
                "R ([入金番号] = @Original_入金番号)) AND ([チェック] = @Original_チェック) AND ([入金チェック] = @Orig" +
                "inal_入金チェック) AND ((@IsNull_回収摘要 = 1 AND [回収摘要] IS NULL) OR ([回収摘要] = @Original_回" +
                "収摘要)) AND ([検収チェック] = @Original_検収チェック) AND ([完了フラグ] = @Original_完了フラグ) AND ((@I" +
                "sNull_WS_ID = 1 AND [WS_ID] IS NULL) OR ([WS_ID] = @Original_WS_ID)) AND ([発行済フラ" +
                "グ] = @Original_発行済フラグ) AND ([受注更新フラグ] = @Original_受注更新フラグ) AND ([出荷更新フラグ] = @Ori" +
                "ginal_出荷更新フラグ) AND ([得意先更新フラグ] = @Original_得意先更新フラグ) AND ([商品更新フラグ] = @Original_" +
                "商品更新フラグ) AND ([商品倉庫更新フラグ] = @Original_商品倉庫更新フラグ) AND ([商品取引更新フラグ] = @Original_商品" +
                "取引更新フラグ) AND ((@IsNull_オペレーターコード = 1 AND [オペレーターコード] IS NULL) OR ([オペレーターコード] = " +
                "@Original_オペレーターコード)) AND ((@IsNull_修正オペレーターコード = 1 AND [修正オペレーターコード] IS NULL) O" +
                "R ([修正オペレーターコード] = @Original_修正オペレーターコード)) AND ((@IsNull_受注行 = 1 AND [受注行] IS NU" +
                "LL) OR ([受注行] = @Original_受注行)) AND ((@IsNull_処理月日 = 1 AND [処理月日] IS NULL) OR ([" +
                "処理月日] = @Original_処理月日)) AND ((@IsNull_管理年月 = 1 AND [管理年月] IS NULL) OR ([管理年月] =" +
                " @Original_管理年月)) AND ((@IsNull_一括消費税締日 = 1 AND [一括消費税締日] IS NULL) OR ([一括消費税締日]" +
                " = @Original_一括消費税締日)) AND ((@IsNull_発行済INDEX = 1 AND [発行済INDEX] IS NULL) OR ([発" +
                "行済INDEX] = @Original_発行済INDEX)) AND ((@IsNull_受注行番号 = 1 AND [受注行番号] IS NULL) OR " +
                "([受注行番号] = @Original_受注行番号)) AND ((@IsNull_売上行番号 = 1 AND [売上行番号] IS NULL) OR ([売" +
                "上行番号] = @Original_売上行番号)) AND ((@IsNull_定価 = 1 AND [定価] IS NULL) OR ([定価] = @Ori" +
                "ginal_定価)) AND ((@IsNull_納品掛率 = 1 AND [納品掛率] IS NULL) OR ([納品掛率] = @Original_納品掛" +
                "率)) AND ((@IsNull_原価掛率 = 1 AND [原価掛率] IS NULL) OR ([原価掛率] = @Original_原価掛率)) AND" +
                " ((@IsNull_発注有無区分 = 1 AND [発注有無区分] IS NULL) OR ([発注有無区分] = @Original_発注有無区分)) AN" +
                "D ((@IsNull_回答納期 = 1 AND [回答納期] IS NULL) OR ([回答納期] = @Original_回答納期)) AND ((@Is" +
                "Null_在庫数 = 1 AND [在庫数] IS NULL) OR ([在庫数] = @Original_在庫数)) AND ((@IsNull_受注残数 =" +
                " 1 AND [受注残数] IS NULL) OR ([受注残数] = @Original_受注残数)) AND ((@IsNull_発注残数 = 1 AND " +
                "[発注残数] IS NULL) OR ([発注残数] = @Original_発注残数)) AND ((@IsNull_納品書発行フラグ = 1 AND [納品" +
                "書発行フラグ] IS NULL) OR ([納品書発行フラグ] = @Original_納品書発行フラグ)) AND ((@IsNull_専用伝票発行フラグ =" +
                " 1 AND [専用伝票発行フラグ] IS NULL) OR ([専用伝票発行フラグ] = @Original_専用伝票発行フラグ)) AND ((@IsNul" +
                "l_売上累計 = 1 AND [売上累計] IS NULL) OR ([売上累計] = @Original_売上累計)) AND ((@IsNull_受注番号受" +
                "注残数 = 1 AND [受注番号受注残数] IS NULL) OR ([受注番号受注残数] = @Original_受注番号受注残数)) AND ((@IsN" +
                "ull_納品書発行日時 = 1 AND [納品書発行日時] IS NULL) OR ([納品書発行日時] = @Original_納品書発行日時)) AND (" +
                "(@IsNull_取引先コード２ = 1 AND [取引先コード２] IS NULL) OR ([取引先コード２] = @Original_取引先コード２)) " +
                "AND ((@IsNull_社名 = 1 AND [社名] IS NULL) OR ([社名] = @Original_社名)) AND ((@IsNull_店" +
                "名 = 1 AND [店名] IS NULL) OR ([店名] = @Original_店名)) AND ((@IsNull_部名 = 1 AND [部名] " +
                "IS NULL) OR ([部名] = @Original_部名)) AND ((@IsNull_発注区分 = 1 AND [発注区分] IS NULL) OR" +
                " ([発注区分] = @Original_発注区分)) AND ((@IsNull_請求月 = 1 AND [請求月] IS NULL) OR ([請求月] =" +
                " @Original_請求月)) AND ((@IsNull_ＥＯＳ区分 = 1 AND [ＥＯＳ区分] IS NULL) OR ([ＥＯＳ区分] = @Ori" +
                "ginal_ＥＯＳ区分)) AND ((@IsNull_帳票区分 = 1 AND [帳票区分] IS NULL) OR ([帳票区分] = @Original_" +
                "帳票区分)) AND ((@IsNull_発注単位 = 1 AND [発注単位] IS NULL) OR ([発注単位] = @Original_発注単位)) " +
                "AND ((@IsNull_ＥＯＳ商品コード = 1 AND [ＥＯＳ商品コード] IS NULL) OR ([ＥＯＳ商品コード] = @Original_ＥＯ" +
                "Ｓ商品コード)) AND ((@IsNull_ＥＯＳ商品名 = 1 AND [ＥＯＳ商品名] IS NULL) OR ([ＥＯＳ商品名] = @Original" +
                "_ＥＯＳ商品名)) AND ((@IsNull_ＥＯＳ規格 = 1 AND [ＥＯＳ規格] IS NULL) OR ([ＥＯＳ規格] = @Original_Ｅ" +
                "ＯＳ規格)) AND ((@IsNull_表示価格 = 1 AND [表示価格] IS NULL) OR ([表示価格] = @Original_表示価格)) " +
                "AND ((@IsNull_ＥＯＳ棚番 = 1 AND [ＥＯＳ棚番] IS NULL) OR ([ＥＯＳ棚番] = @Original_ＥＯＳ棚番)) AND" +
                " ((@IsNull_ＪＡＮコード = 1 AND [ＪＡＮコード] IS NULL) OR ([ＪＡＮコード] = @Original_ＪＡＮコード)) AN" +
                "D ((@IsNull_メーカー品番 = 1 AND [メーカー品番] IS NULL) OR ([メーカー品番] = @Original_メーカー品番)) A" +
                "ND ((@IsNull_棚番 = 1 AND [棚番] IS NULL) OR ([棚番] = @Original_棚番)) AND ((@IsNull_メー" +
                "カー名 = 1 AND [メーカー名] IS NULL) OR ([メーカー名] = @Original_メーカー名)) AND ((@IsNull_店コード " +
                "= 1 AND [店コード] IS NULL) OR ([店コード] = @Original_店コード)) AND ((@IsNull_部コード = 1 AND" +
                " [部コード] IS NULL) OR ([部コード] = @Original_部コード)) AND ((@IsNull_エラー区分 = 1 AND [エラー区" +
                "分] IS NULL) OR ([エラー区分] = @Original_エラー区分)) AND ((@IsNull_更新ビット = 1 AND [更新ビット] " +
                "IS NULL) OR ([更新ビット] = @Original_更新ビット)) AND ((@IsNull_商品番号 = 1 AND [商品番号] IS NU" +
                "LL) OR ([商品番号] = @Original_商品番号)) AND ((@IsNull_社コード = 1 AND [社コード] IS NULL) OR " +
                "([社コード] = @Original_社コード)) AND ((@IsNull_店コードＢ = 1 AND [店コードＢ] IS NULL) OR ([店コー" +
                "ドＢ] = @Original_店コードＢ)) AND ((@IsNull_直送区分 = 1 AND [直送区分] IS NULL) OR ([直送区分] = " +
                "@Original_直送区分)) AND ((@IsNull_客注区分 = 1 AND [客注区分] IS NULL) OR ([客注区分] = @Origin" +
                "al_客注区分)) AND ((@IsNull_経費区分 = 1 AND [経費区分] IS NULL) OR ([経費区分] = @Original_経費区分" +
                ")) AND ((@IsNull_返品区分 = 1 AND [返品区分] IS NULL) OR ([返品区分] = @Original_返品区分)) AND " +
                "((@IsNull_本部原価単価 = 1 AND [本部原価単価] IS NULL) OR ([本部原価単価] = @Original_本部原価単価)) AND" +
                " ((@IsNull_本部原価金額 = 1 AND [本部原価金額] IS NULL) OR ([本部原価金額] = @Original_本部原価金額)) AN" +
                "D ((@IsNull_納入単価 = 1 AND [納入単価] IS NULL) OR ([納入単価] = @Original_納入単価)) AND ((@Is" +
                "Null_店舗売価 = 1 AND [店舗売価] IS NULL) OR ([店舗売価] = @Original_店舗売価)) AND ((@IsNull_大分" +
                "類コード = 1 AND [大分類コード] IS NULL) OR ([大分類コード] = @Original_大分類コード)) AND ((@IsNull_店" +
                "舗備考 = 1 AND [店舗備考] IS NULL) OR ([店舗備考] = @Original_店舗備考)) AND ((@IsNull_仕入先備考 = " +
                "1 AND [仕入先備考] IS NULL) OR ([仕入先備考] = @Original_仕入先備考)) AND ((@IsNull_登録番号 = 1 AN" +
                "D [登録番号] IS NULL) OR ([登録番号] = @Original_登録番号)) AND ((@IsNull_ドラスタ発注番号 = 1 AND [" +
                "ドラスタ発注番号] IS NULL) OR ([ドラスタ発注番号] = @Original_ドラスタ発注番号)) AND ((@IsNull_客注番号 = 1 " +
                "AND [客注番号] IS NULL) OR ([客注番号] = @Original_客注番号)) AND ((@IsNull_ドラスタ区分 = 1 AND [" +
                "ドラスタ区分] IS NULL) OR ([ドラスタ区分] = @Original_ドラスタ区分)) AND ((@IsNull_欠品理由 = 1 AND [欠" +
                "品理由] IS NULL) OR ([欠品理由] = @Original_欠品理由)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入力区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_出荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理区", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_請求月区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_得意先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_得名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ランク", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ランク", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ランク", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ランク", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部課コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部課コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部課コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部課コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_担当者コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "担当者コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "担当者コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_代理店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_代理店コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_代名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_代名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引先名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引先名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_請求先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上切捨区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上切捨区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上切捨区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_伝票摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商品コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_規格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_形式寸法", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_材質", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_品種コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカーコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_単位コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_倉庫コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ケース数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_数量", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_税抜売上金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜売上金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_税抜売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜売上金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_粗利", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "粗利", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_粗利", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "粗利", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_税抜仕入金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入消費税", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入消費税", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入消費税", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上返品値引理由区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上返品値引理由区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上返品値引理由区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_外内税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税適用", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_明細摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_相手先注文番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先注文番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_相手先注文番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先注文番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_自社受付番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社受付番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_自社受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社受付番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入担当者コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入切捨区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回収摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回収摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回収摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回収摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_検収チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "検収チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発行済フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得意先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品取引更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品取引更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_修正オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理月日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_一括消費税締日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税締日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_一括消費税締日", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税締日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発行済INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済INDEX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発行済INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済INDEX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_定価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納品掛率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品掛率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納品掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "納品掛率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価掛率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価掛率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注有無区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注有無区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注有無区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注有無区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_在庫数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納品書発行フラグ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行フラグ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納品書発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_専用伝票発行フラグ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "専用伝票発行フラグ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_専用伝票発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "専用伝票発行フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上累計", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上累計", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上累計", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上累計", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注番号受注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号受注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注番号受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号受注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納品書発行日時", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行日時", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納品書発行日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行日時", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引先コード２", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード２", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引先コード２", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード２", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_社名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_社名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_請求月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_帳票区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "帳票区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_帳票区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "帳票区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注単位", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注単位", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注単位", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注単位", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ商品コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ商品名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ商品名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ規格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ規格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ規格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_表示価格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "表示価格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_表示価格", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "表示価格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ棚番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ棚番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ棚番", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ棚番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＪＡＮコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＪＡＮコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＪＡＮコード", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＪＡＮコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカー品番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_棚番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカー名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカー名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_エラー区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラー区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_エラー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラー区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_更新ビット", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新ビット", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新ビット", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新ビット", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商品番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_社コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_社コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店コードＢ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コードＢ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店コードＢ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コードＢ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_直送区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "直送区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_直送区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "直送区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_客注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_客注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_経費区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "経費区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_経費区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "経費区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_返品区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "返品区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_返品区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "返品区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本部原価単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本部原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本部原価金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本部原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店舗売価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗売価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店舗売価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗売価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_大分類コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大分類コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_大分類コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大分類コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店舗備考", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗備考", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店舗備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗備考", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入先備考", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先備考", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先備考", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_登録番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "登録番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_登録番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "登録番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ドラスタ発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ドラスタ発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_客注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_客注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ドラスタ区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ドラスタ区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_欠品理由", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "欠品理由", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_欠品理由", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "欠品理由", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T売上明細ファイル] ([本支店区分], [処理コード], [入力区分], [処理番号], [エラーフラグ], [受発注行数" +
                "], [受注連番], [出荷番号], [出荷連番], [発注番号], [発注連番], [売上伝票番号], [処理日], [売上日], [納入日], [受注日]," +
                " [納期], [発注納期], [処理区], [売上区分コード], [システム区分], [取引区分], [請求月区分コード], [得意先コード], [得名], [" +
                "事業所コード], [ランク], [部課コード], [担当者コード], [代理店コード], [代名], [納入先コード], [納名], [取引先コード], [取引" +
                "先名], [請求先コード], [売上切捨区分], [売上税区分], [伝票摘要], [商品コード], [商名], [規格], [形式寸法], [材質], [分類" +
                "], [在庫管理区分], [品種コード], [メーカーコード], [入数], [単位コード], [倉庫コード], [ケース数], [数量], [売上単価], [" +
                "売上金額], [税抜売上金額], [原価単価], [原価金額], [粗利], [消費税], [税抜仕入金額], [仕入消費税], [売上返品値引理由区分], [" +
                "外内税区分], [消費税率], [新消費税率], [新消費税適用], [明細摘要], [受注番号], [相手先注文番号], [自社受付番号], [仕入伝票番号]" +
                ", [仕入先コード], [仕名], [仕入分類], [仕入事業所コード], [仕入担当者コード], [仕入切捨区分], [仕入税区分], [入金番号], [チェ" +
                "ック], [入金チェック], [回収摘要], [検収チェック], [完了フラグ], [WS_ID], [発行済フラグ], [受注更新フラグ], [出荷更新フラグ" +
                "], [得意先更新フラグ], [商品更新フラグ], [商品倉庫更新フラグ], [商品取引更新フラグ], [オペレーターコード], [修正オペレーターコード], " +
                "[受注行], [処理月日], [管理年月], [一括消費税締日], [発行済INDEX], [受注行番号], [売上行番号], [定価], [納品掛率], [原" +
                "価掛率], [発注有無区分], [回答納期], [在庫数], [受注残数], [発注残数], [納品書発行フラグ], [専用伝票発行フラグ], [売上累計], " +
                "[受注番号受注残数], [納品書発行日時], [取引先コード２], [社名], [店名], [部名], [発注区分], [請求月], [ＥＯＳ区分], [帳票区" +
                "分], [発注単位], [ＥＯＳ商品コード], [ＥＯＳ商品名], [ＥＯＳ規格], [表示価格], [ＥＯＳ棚番], [ＪＡＮコード], [メーカー品番], " +
                "[棚番], [メーカー名], [店コード], [部コード], [エラー区分], [更新ビット], [商品番号], [社コード], [店コードＢ], [直送区分]" +
                ", [客注区分], [経費区分], [返品区分], [本部原価単価], [本部原価金額], [納入単価], [店舗売価], [大分類コード], [店舗備考], " +
                "[仕入先備考], [登録番号], [ドラスタ発注番号], [客注番号], [ドラスタ区分], [欠品理由]) VALUES (@本支店区分, @処理コード, @" +
                "入力区分, @処理番号, @エラーフラグ, @受発注行数, @受注連番, @出荷番号, @出荷連番, @発注番号, @発注連番, @売上伝票番号, @処理日, " +
                "@売上日, @納入日, @受注日, @納期, @発注納期, @処理区, @売上区分コード, @システム区分, @取引区分, @請求月区分コード, @得意先コード" +
                ", @得名, @事業所コード, @ランク, @部課コード, @担当者コード, @代理店コード, @代名, @納入先コード, @納名, @取引先コード, @取引先" +
                "名, @請求先コード, @売上切捨区分, @売上税区分, @伝票摘要, @商品コード, @商名, @規格, @形式寸法, @材質, @分類, @在庫管理区分, " +
                "@品種コード, @メーカーコード, @入数, @単位コード, @倉庫コード, @ケース数, @数量, @売上単価, @売上金額, @税抜売上金額, @原価単価," +
                " @原価金額, @粗利, @消費税, @税抜仕入金額, @仕入消費税, @売上返品値引理由区分, @外内税区分, @消費税率, @新消費税率, @新消費税適用," +
                " @明細摘要, @受注番号, @相手先注文番号, @自社受付番号, @仕入伝票番号, @仕入先コード, @仕名, @仕入分類, @仕入事業所コード, @仕入担当" +
                "者コード, @仕入切捨区分, @仕入税区分, @入金番号, @チェック, @入金チェック, @回収摘要, @検収チェック, @完了フラグ, @WS_ID, @発" +
                "行済フラグ, @受注更新フラグ, @出荷更新フラグ, @得意先更新フラグ, @商品更新フラグ, @商品倉庫更新フラグ, @商品取引更新フラグ, @オペレーターコ" +
                "ード, @修正オペレーターコード, @受注行, @処理月日, @管理年月, @一括消費税締日, @発行済INDEX, @受注行番号, @売上行番号, @定価, " +
                "@納品掛率, @原価掛率, @発注有無区分, @回答納期, @在庫数, @受注残数, @発注残数, @納品書発行フラグ, @専用伝票発行フラグ, @売上累計, " +
                "@受注番号受注残数, @納品書発行日時, @取引先コード２, @社名, @店名, @部名, @発注区分, @請求月, @ＥＯＳ区分, @帳票区分, @発注単位," +
                " @ＥＯＳ商品コード, @ＥＯＳ商品名, @ＥＯＳ規格, @表示価格, @ＥＯＳ棚番, @ＪＡＮコード, @メーカー品番, @棚番, @メーカー名, @店コード" +
                ", @部コード, @エラー区分, @更新ビット, @商品番号, @社コード, @店コードＢ, @直送区分, @客注区分, @経費区分, @返品区分, @本部原価" +
                "単価, @本部原価金額, @納入単価, @店舗売価, @大分類コード, @店舗備考, @仕入先備考, @登録番号, @ドラスタ発注番号, @客注番号, @ドラス" +
                "タ区分, @欠品理由);\r\nSELECT 売上連番, 本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 受注連番, 出荷番号, " +
                "出荷連番, 発注番号, 発注連番, 売上伝票番号, 処理日, 売上日, 納入日, 受注日, 納期, 発注納期, 処理区, 売上区分コード, システム区分, 取引" +
                "区分, 請求月区分コード, 得意先コード, 得名, 事業所コード, ランク, 部課コード, 担当者コード, 代理店コード, 代名, 納入先コード, 納名, 取引" +
                "先コード, 取引先名, 請求先コード, 売上切捨区分, 売上税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種" +
                "コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 売上単価, 売上金額, 税抜売上金額, 原価単価, 原価金額, 粗利, 消費" +
                "税, 税抜仕入金額, 仕入消費税, 売上返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 受注番号, 相手先注文番号, 自" +
                "社受付番号, 仕入伝票番号, 仕入先コード, 仕名, 仕入分類, 仕入事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 入金番号, チェック, " +
                "入金チェック, 回収摘要, 検収チェック, 完了フラグ, WS_ID, 発行済フラグ, 受注更新フラグ, 出荷更新フラグ, 得意先更新フラグ, 商品更新フラグ," +
                " 商品倉庫更新フラグ, 商品取引更新フラグ, オペレーターコード, 修正オペレーターコード, 受注行, 処理月日, 管理年月, 一括消費税締日, 発行済INDE" +
                "X, 受注行番号, 売上行番号, 定価, 納品掛率, 原価掛率, 発注有無区分, 回答納期, 在庫数, 受注残数, 発注残数, 納品書発行フラグ, 専用伝票発行" +
                "フラグ, 売上累計, 受注番号受注残数, 納品書発行日時, 取引先コード２, 社名, 店名, 部名, 発注区分, 請求月, ＥＯＳ区分, 帳票区分, 発注単位," +
                " ＥＯＳ商品コード, ＥＯＳ商品名, ＥＯＳ規格, 表示価格, ＥＯＳ棚番, ＪＡＮコード, メーカー品番, 棚番, メーカー名, 店コード, 部コード, エラ" +
                "ー区分, 更新ビット, 商品番号, 社コード, 店コードＢ, 直送区分, 客注区分, 経費区分, 返品区分, 本部原価単価, 本部原価金額, 納入単価, 店舗売" +
                "価, 大分類コード, 店舗備考, 仕入先備考, 登録番号, ドラスタ発注番号, 客注番号, ドラスタ区分, 欠品理由 FROM T売上明細ファイル WHERE " +
                "(売上連番 = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ランク", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ランク", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部課コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部課コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "担当者コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@代理店コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@代名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引先名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上切捨区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@税抜売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜売上金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@粗利", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "粗利", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入消費税", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上返品値引理由区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@相手先注文番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先注文番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@自社受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社受付番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回収摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回収摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@検収チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "検収チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発行済フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得意先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品取引更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品取引更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@一括消費税締日", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税締日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発行済INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済INDEX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納品掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "納品掛率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注有無区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注有無区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納品書発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@専用伝票発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "専用伝票発行フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上累計", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上累計", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号受注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納品書発行日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行日時", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引先コード２", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード２", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@社名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@帳票区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "帳票区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注単位", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注単位", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ商品名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ規格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@表示価格", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "表示価格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ棚番", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ棚番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＪＡＮコード", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＪＡＮコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカー名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@エラー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラー区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新ビット", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新ビット", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@社コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店コードＢ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コードＢ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@直送区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "直送区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@客注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@経費区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "経費区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@返品区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "返品区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本部原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本部原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店舗売価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗売価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@大分類コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大分類コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店舗備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗備考", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先備考", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@登録番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "登録番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ドラスタ発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@客注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ドラスタ区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@欠品理由", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "欠品理由", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T売上明細ファイル] SET [本支店区分] = @本支店区分, [処理コード] = @処理コード, [入力区分] = @入力区分, " +
                "[処理番号] = @処理番号, [エラーフラグ] = @エラーフラグ, [受発注行数] = @受発注行数, [受注連番] = @受注連番, [出荷番号] = @" +
                "出荷番号, [出荷連番] = @出荷連番, [発注番号] = @発注番号, [発注連番] = @発注連番, [売上伝票番号] = @売上伝票番号, [処理日] " +
                "= @処理日, [売上日] = @売上日, [納入日] = @納入日, [受注日] = @受注日, [納期] = @納期, [発注納期] = @発注納期, [処" +
                "理区] = @処理区, [売上区分コード] = @売上区分コード, [システム区分] = @システム区分, [取引区分] = @取引区分, [請求月区分コード]" +
                " = @請求月区分コード, [得意先コード] = @得意先コード, [得名] = @得名, [事業所コード] = @事業所コード, [ランク] = @ランク, " +
                "[部課コード] = @部課コード, [担当者コード] = @担当者コード, [代理店コード] = @代理店コード, [代名] = @代名, [納入先コード] =" +
                " @納入先コード, [納名] = @納名, [取引先コード] = @取引先コード, [取引先名] = @取引先名, [請求先コード] = @請求先コード, [売" +
                "上切捨区分] = @売上切捨区分, [売上税区分] = @売上税区分, [伝票摘要] = @伝票摘要, [商品コード] = @商品コード, [商名] = @商名" +
                ", [規格] = @規格, [形式寸法] = @形式寸法, [材質] = @材質, [分類] = @分類, [在庫管理区分] = @在庫管理区分, [品種コード" +
                "] = @品種コード, [メーカーコード] = @メーカーコード, [入数] = @入数, [単位コード] = @単位コード, [倉庫コード] = @倉庫コード" +
                ", [ケース数] = @ケース数, [数量] = @数量, [売上単価] = @売上単価, [売上金額] = @売上金額, [税抜売上金額] = @税抜売上金額" +
                ", [原価単価] = @原価単価, [原価金額] = @原価金額, [粗利] = @粗利, [消費税] = @消費税, [税抜仕入金額] = @税抜仕入金額, " +
                "[仕入消費税] = @仕入消費税, [売上返品値引理由区分] = @売上返品値引理由区分, [外内税区分] = @外内税区分, [消費税率] = @消費税率, " +
                "[新消費税率] = @新消費税率, [新消費税適用] = @新消費税適用, [明細摘要] = @明細摘要, [受注番号] = @受注番号, [相手先注文番号] " +
                "= @相手先注文番号, [自社受付番号] = @自社受付番号, [仕入伝票番号] = @仕入伝票番号, [仕入先コード] = @仕入先コード, [仕名] = @" +
                "仕名, [仕入分類] = @仕入分類, [仕入事業所コード] = @仕入事業所コード, [仕入担当者コード] = @仕入担当者コード, [仕入切捨区分] = @" +
                "仕入切捨区分, [仕入税区分] = @仕入税区分, [入金番号] = @入金番号, [チェック] = @チェック, [入金チェック] = @入金チェック, [回" +
                "収摘要] = @回収摘要, [検収チェック] = @検収チェック, [完了フラグ] = @完了フラグ, [WS_ID] = @WS_ID, [発行済フラグ] =" +
                " @発行済フラグ, [受注更新フラグ] = @受注更新フラグ, [出荷更新フラグ] = @出荷更新フラグ, [得意先更新フラグ] = @得意先更新フラグ, [商" +
                "品更新フラグ] = @商品更新フラグ, [商品倉庫更新フラグ] = @商品倉庫更新フラグ, [商品取引更新フラグ] = @商品取引更新フラグ, [オペレーターコ" +
                "ード] = @オペレーターコード, [修正オペレーターコード] = @修正オペレーターコード, [受注行] = @受注行, [処理月日] = @処理月日, [管" +
                "理年月] = @管理年月, [一括消費税締日] = @一括消費税締日, [発行済INDEX] = @発行済INDEX, [受注行番号] = @受注行番号, [売" +
                "上行番号] = @売上行番号, [定価] = @定価, [納品掛率] = @納品掛率, [原価掛率] = @原価掛率, [発注有無区分] = @発注有無区分, " +
                "[回答納期] = @回答納期, [在庫数] = @在庫数, [受注残数] = @受注残数, [発注残数] = @発注残数, [納品書発行フラグ] = @納品書発" +
                "行フラグ, [専用伝票発行フラグ] = @専用伝票発行フラグ, [売上累計] = @売上累計, [受注番号受注残数] = @受注番号受注残数, [納品書発行日時" +
                "] = @納品書発行日時, [取引先コード２] = @取引先コード２, [社名] = @社名, [店名] = @店名, [部名] = @部名, [発注区分] =" +
                " @発注区分, [請求月] = @請求月, [ＥＯＳ区分] = @ＥＯＳ区分, [帳票区分] = @帳票区分, [発注単位] = @発注単位, [ＥＯＳ商品コー" +
                "ド] = @ＥＯＳ商品コード, [ＥＯＳ商品名] = @ＥＯＳ商品名, [ＥＯＳ規格] = @ＥＯＳ規格, [表示価格] = @表示価格, [ＥＯＳ棚番] = " +
                "@ＥＯＳ棚番, [ＪＡＮコード] = @ＪＡＮコード, [メーカー品番] = @メーカー品番, [棚番] = @棚番, [メーカー名] = @メーカー名, [店" +
                "コード] = @店コード, [部コード] = @部コード, [エラー区分] = @エラー区分, [更新ビット] = @更新ビット, [商品番号] = @商品番号" +
                ", [社コード] = @社コード, [店コードＢ] = @店コードＢ, [直送区分] = @直送区分, [客注区分] = @客注区分, [経費区分] = @経費" +
                "区分, [返品区分] = @返品区分, [本部原価単価] = @本部原価単価, [本部原価金額] = @本部原価金額, [納入単価] = @納入単価, [店舗売" +
                "価] = @店舗売価, [大分類コード] = @大分類コード, [店舗備考] = @店舗備考, [仕入先備考] = @仕入先備考, [登録番号] = @登録番号" +
                ", [ドラスタ発注番号] = @ドラスタ発注番号, [客注番号] = @客注番号, [ドラスタ区分] = @ドラスタ区分, [欠品理由] = @欠品理由 WHE" +
                "RE (([売上連番] = @Original_売上連番) AND ((@IsNull_本支店区分 = 1 AND [本支店区分] IS NULL) OR ([" +
                "本支店区分] = @Original_本支店区分)) AND ((@IsNull_処理コード = 1 AND [処理コード] IS NULL) OR ([処理コ" +
                "ード] = @Original_処理コード)) AND ((@IsNull_入力区分 = 1 AND [入力区分] IS NULL) OR ([入力区分] = " +
                "@Original_入力区分)) AND ((@IsNull_処理番号 = 1 AND [処理番号] IS NULL) OR ([処理番号] = @Origin" +
                "al_処理番号)) AND ([エラーフラグ] = @Original_エラーフラグ) AND ((@IsNull_受発注行数 = 1 AND [受発注行数] " +
                "IS NULL) OR ([受発注行数] = @Original_受発注行数)) AND ((@IsNull_受注連番 = 1 AND [受注連番] IS NU" +
                "LL) OR ([受注連番] = @Original_受注連番)) AND ((@IsNull_出荷番号 = 1 AND [出荷番号] IS NULL) OR " +
                "([出荷番号] = @Original_出荷番号)) AND ((@IsNull_出荷連番 = 1 AND [出荷連番] IS NULL) OR ([出荷連番]" +
                " = @Original_出荷連番)) AND ((@IsNull_発注番号 = 1 AND [発注番号] IS NULL) OR ([発注番号] = @Ori" +
                "ginal_発注番号)) AND ((@IsNull_発注連番 = 1 AND [発注連番] IS NULL) OR ([発注連番] = @Original_発" +
                "注連番)) AND ((@IsNull_売上伝票番号 = 1 AND [売上伝票番号] IS NULL) OR ([売上伝票番号] = @Original_売上" +
                "伝票番号)) AND ((@IsNull_処理日 = 1 AND [処理日] IS NULL) OR ([処理日] = @Original_処理日)) AND " +
                "((@IsNull_売上日 = 1 AND [売上日] IS NULL) OR ([売上日] = @Original_売上日)) AND ((@IsNull_納" +
                "入日 = 1 AND [納入日] IS NULL) OR ([納入日] = @Original_納入日)) AND ((@IsNull_受注日 = 1 AND " +
                "[受注日] IS NULL) OR ([受注日] = @Original_受注日)) AND ((@IsNull_納期 = 1 AND [納期] IS NULL" +
                ") OR ([納期] = @Original_納期)) AND ((@IsNull_発注納期 = 1 AND [発注納期] IS NULL) OR ([発注納期" +
                "] = @Original_発注納期)) AND ((@IsNull_処理区 = 1 AND [処理区] IS NULL) OR ([処理区] = @Origi" +
                "nal_処理区)) AND ((@IsNull_売上区分コード = 1 AND [売上区分コード] IS NULL) OR ([売上区分コード] = @Orig" +
                "inal_売上区分コード)) AND ([システム区分] = @Original_システム区分) AND ((@IsNull_取引区分 = 1 AND [取引区" +
                "分] IS NULL) OR ([取引区分] = @Original_取引区分)) AND ((@IsNull_請求月区分コード = 1 AND [請求月区分コ" +
                "ード] IS NULL) OR ([請求月区分コード] = @Original_請求月区分コード)) AND ((@IsNull_得意先コード = 1 AND " +
                "[得意先コード] IS NULL) OR ([得意先コード] = @Original_得意先コード)) AND ((@IsNull_得名 = 1 AND [得名" +
                "] IS NULL) OR ([得名] = @Original_得名)) AND ((@IsNull_事業所コード = 1 AND [事業所コード] IS NU" +
                "LL) OR ([事業所コード] = @Original_事業所コード)) AND ((@IsNull_ランク = 1 AND [ランク] IS NULL) O" +
                "R ([ランク] = @Original_ランク)) AND ((@IsNull_部課コード = 1 AND [部課コード] IS NULL) OR ([部課コ" +
                "ード] = @Original_部課コード)) AND ((@IsNull_担当者コード = 1 AND [担当者コード] IS NULL) OR ([担当者コ" +
                "ード] = @Original_担当者コード)) AND ((@IsNull_代理店コード = 1 AND [代理店コード] IS NULL) OR ([代理店" +
                "コード] = @Original_代理店コード)) AND ((@IsNull_代名 = 1 AND [代名] IS NULL) OR ([代名] = @Ori" +
                "ginal_代名)) AND ((@IsNull_納入先コード = 1 AND [納入先コード] IS NULL) OR ([納入先コード] = @Origin" +
                "al_納入先コード)) AND ((@IsNull_納名 = 1 AND [納名] IS NULL) OR ([納名] = @Original_納名)) AND" +
                " ((@IsNull_取引先コード = 1 AND [取引先コード] IS NULL) OR ([取引先コード] = @Original_取引先コード)) AN" +
                "D ((@IsNull_取引先名 = 1 AND [取引先名] IS NULL) OR ([取引先名] = @Original_取引先名)) AND ((@Is" +
                "Null_請求先コード = 1 AND [請求先コード] IS NULL) OR ([請求先コード] = @Original_請求先コード)) AND ((@I" +
                "sNull_売上切捨区分 = 1 AND [売上切捨区分] IS NULL) OR ([売上切捨区分] = @Original_売上切捨区分)) AND ((@" +
                "IsNull_売上税区分 = 1 AND [売上税区分] IS NULL) OR ([売上税区分] = @Original_売上税区分)) AND ((@IsN" +
                "ull_伝票摘要 = 1 AND [伝票摘要] IS NULL) OR ([伝票摘要] = @Original_伝票摘要)) AND ((@IsNull_商品コ" +
                "ード = 1 AND [商品コード] IS NULL) OR ([商品コード] = @Original_商品コード)) AND ((@IsNull_商名 = 1" +
                " AND [商名] IS NULL) OR ([商名] = @Original_商名)) AND ((@IsNull_規格 = 1 AND [規格] IS NU" +
                "LL) OR ([規格] = @Original_規格)) AND ((@IsNull_形式寸法 = 1 AND [形式寸法] IS NULL) OR ([形式" +
                "寸法] = @Original_形式寸法)) AND ((@IsNull_材質 = 1 AND [材質] IS NULL) OR ([材質] = @Origin" +
                "al_材質)) AND ((@IsNull_分類 = 1 AND [分類] IS NULL) OR ([分類] = @Original_分類)) AND ([在" +
                "庫管理区分] = @Original_在庫管理区分) AND ((@IsNull_品種コード = 1 AND [品種コード] IS NULL) OR ([品種コ" +
                "ード] = @Original_品種コード)) AND ((@IsNull_メーカーコード = 1 AND [メーカーコード] IS NULL) OR ([メー" +
                "カーコード] = @Original_メーカーコード)) AND ((@IsNull_入数 = 1 AND [入数] IS NULL) OR ([入数] = @" +
                "Original_入数)) AND ((@IsNull_単位コード = 1 AND [単位コード] IS NULL) OR ([単位コード] = @Origin" +
                "al_単位コード)) AND ((@IsNull_倉庫コード = 1 AND [倉庫コード] IS NULL) OR ([倉庫コード] = @Original_" +
                "倉庫コード)) AND ((@IsNull_ケース数 = 1 AND [ケース数] IS NULL) OR ([ケース数] = @Original_ケース数))" +
                " AND ((@IsNull_数量 = 1 AND [数量] IS NULL) OR ([数量] = @Original_数量)) AND ((@IsNull_" +
                "売上単価 = 1 AND [売上単価] IS NULL) OR ([売上単価] = @Original_売上単価)) AND ((@IsNull_売上金額 = " +
                "1 AND [売上金額] IS NULL) OR ([売上金額] = @Original_売上金額)) AND ((@IsNull_税抜売上金額 = 1 AND" +
                " [税抜売上金額] IS NULL) OR ([税抜売上金額] = @Original_税抜売上金額)) AND ((@IsNull_原価単価 = 1 AND " +
                "[原価単価] IS NULL) OR ([原価単価] = @Original_原価単価)) AND ((@IsNull_原価金額 = 1 AND [原価金額] " +
                "IS NULL) OR ([原価金額] = @Original_原価金額)) AND ((@IsNull_粗利 = 1 AND [粗利] IS NULL) OR" +
                " ([粗利] = @Original_粗利)) AND ((@IsNull_消費税 = 1 AND [消費税] IS NULL) OR ([消費税] = @Or" +
                "iginal_消費税)) AND ((@IsNull_税抜仕入金額 = 1 AND [税抜仕入金額] IS NULL) OR ([税抜仕入金額] = @Orig" +
                "inal_税抜仕入金額)) AND ((@IsNull_仕入消費税 = 1 AND [仕入消費税] IS NULL) OR ([仕入消費税] = @Origin" +
                "al_仕入消費税)) AND ((@IsNull_売上返品値引理由区分 = 1 AND [売上返品値引理由区分] IS NULL) OR ([売上返品値引理由区" +
                "分] = @Original_売上返品値引理由区分)) AND ((@IsNull_外内税区分 = 1 AND [外内税区分] IS NULL) OR ([外内" +
                "税区分] = @Original_外内税区分)) AND ((@IsNull_消費税率 = 1 AND [消費税率] IS NULL) OR ([消費税率] =" +
                " @Original_消費税率)) AND ((@IsNull_新消費税率 = 1 AND [新消費税率] IS NULL) OR ([新消費税率] = @Or" +
                "iginal_新消費税率)) AND ((@IsNull_新消費税適用 = 1 AND [新消費税適用] IS NULL) OR ([新消費税適用] = @Or" +
                "iginal_新消費税適用)) AND ((@IsNull_明細摘要 = 1 AND [明細摘要] IS NULL) OR ([明細摘要] = @Origina" +
                "l_明細摘要)) AND ((@IsNull_受注番号 = 1 AND [受注番号] IS NULL) OR ([受注番号] = @Original_受注番号)" +
                ") AND ((@IsNull_相手先注文番号 = 1 AND [相手先注文番号] IS NULL) OR ([相手先注文番号] = @Original_相手先" +
                "注文番号)) AND ((@IsNull_自社受付番号 = 1 AND [自社受付番号] IS NULL) OR ([自社受付番号] = @Original_自" +
                "社受付番号)) AND ((@IsNull_仕入伝票番号 = 1 AND [仕入伝票番号] IS NULL) OR ([仕入伝票番号] = @Original_" +
                "仕入伝票番号)) AND ((@IsNull_仕入先コード = 1 AND [仕入先コード] IS NULL) OR ([仕入先コード] = @Original" +
                "_仕入先コード)) AND ((@IsNull_仕名 = 1 AND [仕名] IS NULL) OR ([仕名] = @Original_仕名)) AND (" +
                "(@IsNull_仕入分類 = 1 AND [仕入分類] IS NULL) OR ([仕入分類] = @Original_仕入分類)) AND ((@IsNul" +
                "l_仕入事業所コード = 1 AND [仕入事業所コード] IS NULL) OR ([仕入事業所コード] = @Original_仕入事業所コード)) AND" +
                " ((@IsNull_仕入担当者コード = 1 AND [仕入担当者コード] IS NULL) OR ([仕入担当者コード] = @Original_仕入担当者" +
                "コード)) AND ((@IsNull_仕入切捨区分 = 1 AND [仕入切捨区分] IS NULL) OR ([仕入切捨区分] = @Original_仕入" +
                "切捨区分)) AND ((@IsNull_仕入税区分 = 1 AND [仕入税区分] IS NULL) OR ([仕入税区分] = @Original_仕入税区" +
                "分)) AND ((@IsNull_入金番号 = 1 AND [入金番号] IS NULL) OR ([入金番号] = @Original_入金番号)) AND" +
                " ([チェック] = @Original_チェック) AND ([入金チェック] = @Original_入金チェック) AND ((@IsNull_回収摘要 " +
                "= 1 AND [回収摘要] IS NULL) OR ([回収摘要] = @Original_回収摘要)) AND ([検収チェック] = @Original_" +
                "検収チェック) AND ([完了フラグ] = @Original_完了フラグ) AND ((@IsNull_WS_ID = 1 AND [WS_ID] IS N" +
                "ULL) OR ([WS_ID] = @Original_WS_ID)) AND ([発行済フラグ] = @Original_発行済フラグ) AND ([受注更" +
                "新フラグ] = @Original_受注更新フラグ) AND ([出荷更新フラグ] = @Original_出荷更新フラグ) AND ([得意先更新フラグ] =" +
                " @Original_得意先更新フラグ) AND ([商品更新フラグ] = @Original_商品更新フラグ) AND ([商品倉庫更新フラグ] = @Ori" +
                "ginal_商品倉庫更新フラグ) AND ([商品取引更新フラグ] = @Original_商品取引更新フラグ) AND ((@IsNull_オペレーターコード" +
                " = 1 AND [オペレーターコード] IS NULL) OR ([オペレーターコード] = @Original_オペレーターコード)) AND ((@IsN" +
                "ull_修正オペレーターコード = 1 AND [修正オペレーターコード] IS NULL) OR ([修正オペレーターコード] = @Original_修正オ" +
                "ペレーターコード)) AND ((@IsNull_受注行 = 1 AND [受注行] IS NULL) OR ([受注行] = @Original_受注行)) " +
                "AND ((@IsNull_処理月日 = 1 AND [処理月日] IS NULL) OR ([処理月日] = @Original_処理月日)) AND ((@" +
                "IsNull_管理年月 = 1 AND [管理年月] IS NULL) OR ([管理年月] = @Original_管理年月)) AND ((@IsNull_" +
                "一括消費税締日 = 1 AND [一括消費税締日] IS NULL) OR ([一括消費税締日] = @Original_一括消費税締日)) AND ((@Is" +
                "Null_発行済INDEX = 1 AND [発行済INDEX] IS NULL) OR ([発行済INDEX] = @Original_発行済INDEX)) " +
                "AND ((@IsNull_受注行番号 = 1 AND [受注行番号] IS NULL) OR ([受注行番号] = @Original_受注行番号)) AND" +
                " ((@IsNull_売上行番号 = 1 AND [売上行番号] IS NULL) OR ([売上行番号] = @Original_売上行番号)) AND ((" +
                "@IsNull_定価 = 1 AND [定価] IS NULL) OR ([定価] = @Original_定価)) AND ((@IsNull_納品掛率 = " +
                "1 AND [納品掛率] IS NULL) OR ([納品掛率] = @Original_納品掛率)) AND ((@IsNull_原価掛率 = 1 AND [" +
                "原価掛率] IS NULL) OR ([原価掛率] = @Original_原価掛率)) AND ((@IsNull_発注有無区分 = 1 AND [発注有無区" +
                "分] IS NULL) OR ([発注有無区分] = @Original_発注有無区分)) AND ((@IsNull_回答納期 = 1 AND [回答納期] " +
                "IS NULL) OR ([回答納期] = @Original_回答納期)) AND ((@IsNull_在庫数 = 1 AND [在庫数] IS NULL) " +
                "OR ([在庫数] = @Original_在庫数)) AND ((@IsNull_受注残数 = 1 AND [受注残数] IS NULL) OR ([受注残数" +
                "] = @Original_受注残数)) AND ((@IsNull_発注残数 = 1 AND [発注残数] IS NULL) OR ([発注残数] = @Or" +
                "iginal_発注残数)) AND ((@IsNull_納品書発行フラグ = 1 AND [納品書発行フラグ] IS NULL) OR ([納品書発行フラグ] " +
                "= @Original_納品書発行フラグ)) AND ((@IsNull_専用伝票発行フラグ = 1 AND [専用伝票発行フラグ] IS NULL) OR (" +
                "[専用伝票発行フラグ] = @Original_専用伝票発行フラグ)) AND ((@IsNull_売上累計 = 1 AND [売上累計] IS NULL) O" +
                "R ([売上累計] = @Original_売上累計)) AND ((@IsNull_受注番号受注残数 = 1 AND [受注番号受注残数] IS NULL) " +
                "OR ([受注番号受注残数] = @Original_受注番号受注残数)) AND ((@IsNull_納品書発行日時 = 1 AND [納品書発行日時] IS" +
                " NULL) OR ([納品書発行日時] = @Original_納品書発行日時)) AND ((@IsNull_取引先コード２ = 1 AND [取引先コード" +
                "２] IS NULL) OR ([取引先コード２] = @Original_取引先コード２)) AND ((@IsNull_社名 = 1 AND [社名] IS" +
                " NULL) OR ([社名] = @Original_社名)) AND ((@IsNull_店名 = 1 AND [店名] IS NULL) OR ([店名]" +
                " = @Original_店名)) AND ((@IsNull_部名 = 1 AND [部名] IS NULL) OR ([部名] = @Original_部名" +
                ")) AND ((@IsNull_発注区分 = 1 AND [発注区分] IS NULL) OR ([発注区分] = @Original_発注区分)) AND " +
                "((@IsNull_請求月 = 1 AND [請求月] IS NULL) OR ([請求月] = @Original_請求月)) AND ((@IsNull_Ｅ" +
                "ＯＳ区分 = 1 AND [ＥＯＳ区分] IS NULL) OR ([ＥＯＳ区分] = @Original_ＥＯＳ区分)) AND ((@IsNull_帳票区分" +
                " = 1 AND [帳票区分] IS NULL) OR ([帳票区分] = @Original_帳票区分)) AND ((@IsNull_発注単位 = 1 AN" +
                "D [発注単位] IS NULL) OR ([発注単位] = @Original_発注単位)) AND ((@IsNull_ＥＯＳ商品コード = 1 AND [" +
                "ＥＯＳ商品コード] IS NULL) OR ([ＥＯＳ商品コード] = @Original_ＥＯＳ商品コード)) AND ((@IsNull_ＥＯＳ商品名 = " +
                "1 AND [ＥＯＳ商品名] IS NULL) OR ([ＥＯＳ商品名] = @Original_ＥＯＳ商品名)) AND ((@IsNull_ＥＯＳ規格 = " +
                "1 AND [ＥＯＳ規格] IS NULL) OR ([ＥＯＳ規格] = @Original_ＥＯＳ規格)) AND ((@IsNull_表示価格 = 1 AN" +
                "D [表示価格] IS NULL) OR ([表示価格] = @Original_表示価格)) AND ((@IsNull_ＥＯＳ棚番 = 1 AND [ＥＯＳ" +
                "棚番] IS NULL) OR ([ＥＯＳ棚番] = @Original_ＥＯＳ棚番)) AND ((@IsNull_ＪＡＮコード = 1 AND [ＪＡＮコー" +
                "ド] IS NULL) OR ([ＪＡＮコード] = @Original_ＪＡＮコード)) AND ((@IsNull_メーカー品番 = 1 AND [メーカー" +
                "品番] IS NULL) OR ([メーカー品番] = @Original_メーカー品番)) AND ((@IsNull_棚番 = 1 AND [棚番] IS " +
                "NULL) OR ([棚番] = @Original_棚番)) AND ((@IsNull_メーカー名 = 1 AND [メーカー名] IS NULL) OR " +
                "([メーカー名] = @Original_メーカー名)) AND ((@IsNull_店コード = 1 AND [店コード] IS NULL) OR ([店コー" +
                "ド] = @Original_店コード)) AND ((@IsNull_部コード = 1 AND [部コード] IS NULL) OR ([部コード] = @O" +
                "riginal_部コード)) AND ((@IsNull_エラー区分 = 1 AND [エラー区分] IS NULL) OR ([エラー区分] = @Origi" +
                "nal_エラー区分)) AND ((@IsNull_更新ビット = 1 AND [更新ビット] IS NULL) OR ([更新ビット] = @Original" +
                "_更新ビット)) AND ((@IsNull_商品番号 = 1 AND [商品番号] IS NULL) OR ([商品番号] = @Original_商品番号)" +
                ") AND ((@IsNull_社コード = 1 AND [社コード] IS NULL) OR ([社コード] = @Original_社コード)) AND (" +
                "(@IsNull_店コードＢ = 1 AND [店コードＢ] IS NULL) OR ([店コードＢ] = @Original_店コードＢ)) AND ((@I" +
                "sNull_直送区分 = 1 AND [直送区分] IS NULL) OR ([直送区分] = @Original_直送区分)) AND ((@IsNull_客" +
                "注区分 = 1 AND [客注区分] IS NULL) OR ([客注区分] = @Original_客注区分)) AND ((@IsNull_経費区分 = 1" +
                " AND [経費区分] IS NULL) OR ([経費区分] = @Original_経費区分)) AND ((@IsNull_返品区分 = 1 AND [返" +
                "品区分] IS NULL) OR ([返品区分] = @Original_返品区分)) AND ((@IsNull_本部原価単価 = 1 AND [本部原価単価" +
                "] IS NULL) OR ([本部原価単価] = @Original_本部原価単価)) AND ((@IsNull_本部原価金額 = 1 AND [本部原価金" +
                "額] IS NULL) OR ([本部原価金額] = @Original_本部原価金額)) AND ((@IsNull_納入単価 = 1 AND [納入単価] " +
                "IS NULL) OR ([納入単価] = @Original_納入単価)) AND ((@IsNull_店舗売価 = 1 AND [店舗売価] IS NULL" +
                ") OR ([店舗売価] = @Original_店舗売価)) AND ((@IsNull_大分類コード = 1 AND [大分類コード] IS NULL) O" +
                "R ([大分類コード] = @Original_大分類コード)) AND ((@IsNull_店舗備考 = 1 AND [店舗備考] IS NULL) OR (" +
                "[店舗備考] = @Original_店舗備考)) AND ((@IsNull_仕入先備考 = 1 AND [仕入先備考] IS NULL) OR ([仕入先備" +
                "考] = @Original_仕入先備考)) AND ((@IsNull_登録番号 = 1 AND [登録番号] IS NULL) OR ([登録番号] = @" +
                "Original_登録番号)) AND ((@IsNull_ドラスタ発注番号 = 1 AND [ドラスタ発注番号] IS NULL) OR ([ドラスタ発注番号" +
                "] = @Original_ドラスタ発注番号)) AND ((@IsNull_客注番号 = 1 AND [客注番号] IS NULL) OR ([客注番号] =" +
                " @Original_客注番号)) AND ((@IsNull_ドラスタ区分 = 1 AND [ドラスタ区分] IS NULL) OR ([ドラスタ区分] = " +
                "@Original_ドラスタ区分)) AND ((@IsNull_欠品理由 = 1 AND [欠品理由] IS NULL) OR ([欠品理由] = @Orig" +
                "inal_欠品理由)));\r\nSELECT 売上連番, 本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 受注連番, 出荷番号," +
                " 出荷連番, 発注番号, 発注連番, 売上伝票番号, 処理日, 売上日, 納入日, 受注日, 納期, 発注納期, 処理区, 売上区分コード, システム区分, 取" +
                "引区分, 請求月区分コード, 得意先コード, 得名, 事業所コード, ランク, 部課コード, 担当者コード, 代理店コード, 代名, 納入先コード, 納名, 取" +
                "引先コード, 取引先名, 請求先コード, 売上切捨区分, 売上税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品" +
                "種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 売上単価, 売上金額, 税抜売上金額, 原価単価, 原価金額, 粗利, 消" +
                "費税, 税抜仕入金額, 仕入消費税, 売上返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 受注番号, 相手先注文番号, " +
                "自社受付番号, 仕入伝票番号, 仕入先コード, 仕名, 仕入分類, 仕入事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 入金番号, チェック," +
                " 入金チェック, 回収摘要, 検収チェック, 完了フラグ, WS_ID, 発行済フラグ, 受注更新フラグ, 出荷更新フラグ, 得意先更新フラグ, 商品更新フラグ" +
                ", 商品倉庫更新フラグ, 商品取引更新フラグ, オペレーターコード, 修正オペレーターコード, 受注行, 処理月日, 管理年月, 一括消費税締日, 発行済IND" +
                "EX, 受注行番号, 売上行番号, 定価, 納品掛率, 原価掛率, 発注有無区分, 回答納期, 在庫数, 受注残数, 発注残数, 納品書発行フラグ, 専用伝票発" +
                "行フラグ, 売上累計, 受注番号受注残数, 納品書発行日時, 取引先コード２, 社名, 店名, 部名, 発注区分, 請求月, ＥＯＳ区分, 帳票区分, 発注単位" +
                ", ＥＯＳ商品コード, ＥＯＳ商品名, ＥＯＳ規格, 表示価格, ＥＯＳ棚番, ＪＡＮコード, メーカー品番, 棚番, メーカー名, 店コード, 部コード, エ" +
                "ラー区分, 更新ビット, 商品番号, 社コード, 店コードＢ, 直送区分, 客注区分, 経費区分, 返品区分, 本部原価単価, 本部原価金額, 納入単価, 店舗" +
                "売価, 大分類コード, 店舗備考, 仕入先備考, 登録番号, ドラスタ発注番号, 客注番号, ドラスタ区分, 欠品理由 FROM T売上明細ファイル WHERE" +
                " (売上連番 = @売上連番)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ランク", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ランク", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部課コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部課コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "担当者コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@代理店コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@代名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引先名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上切捨区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@税抜売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜売上金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@粗利", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "粗利", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入消費税", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上返品値引理由区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@相手先注文番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先注文番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@自社受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社受付番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回収摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回収摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@検収チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "検収チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発行済フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得意先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品取引更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品取引更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@一括消費税締日", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税締日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発行済INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済INDEX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納品掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "納品掛率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注有無区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注有無区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納品書発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@専用伝票発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "専用伝票発行フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上累計", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上累計", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号受注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納品書発行日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行日時", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引先コード２", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード２", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@社名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@帳票区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "帳票区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注単位", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注単位", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ商品名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ規格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@表示価格", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "表示価格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＥＯＳ棚番", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ棚番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＪＡＮコード", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＪＡＮコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカー名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@エラー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラー区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新ビット", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新ビット", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@社コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店コードＢ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コードＢ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@直送区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "直送区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@客注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@経費区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "経費区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@返品区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "返品区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本部原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本部原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店舗売価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗売価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@大分類コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大分類コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@店舗備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗備考", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先備考", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@登録番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "登録番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ドラスタ発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@客注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ドラスタ区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@欠品理由", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "欠品理由", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入力区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_出荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理区", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_請求月区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_得意先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_得名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ランク", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ランク", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ランク", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ランク", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部課コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部課コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部課コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部課コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_担当者コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "担当者コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "担当者コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_代理店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_代理店コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_代名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_代名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引先名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引先名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_請求先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上切捨区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上切捨区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上切捨区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_伝票摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商品コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_規格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_形式寸法", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_材質", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_品種コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカーコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_単位コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_倉庫コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ケース数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_数量", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_税抜売上金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜売上金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_税抜売上金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜売上金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_粗利", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "粗利", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_粗利", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "粗利", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_税抜仕入金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入消費税", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入消費税", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入消費税", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上返品値引理由区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上返品値引理由区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上返品値引理由区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_外内税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税適用", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_明細摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_相手先注文番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先注文番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_相手先注文番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先注文番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_自社受付番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社受付番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_自社受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社受付番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入担当者コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入切捨区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回収摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回収摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回収摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回収摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_検収チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "検収チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発行済フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得意先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品取引更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品取引更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_修正オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理月日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_一括消費税締日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税締日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_一括消費税締日", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税締日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発行済INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済INDEX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発行済INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発行済INDEX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_定価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納品掛率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品掛率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納品掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "納品掛率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価掛率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価掛率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注有無区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注有無区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注有無区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注有無区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_在庫数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納品書発行フラグ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行フラグ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納品書発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_専用伝票発行フラグ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "専用伝票発行フラグ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_専用伝票発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "専用伝票発行フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上累計", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上累計", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上累計", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上累計", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注番号受注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号受注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注番号受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号受注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納品書発行日時", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行日時", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納品書発行日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書発行日時", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引先コード２", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード２", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引先コード２", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引先コード２", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_社名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_社名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_請求月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_帳票区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "帳票区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_帳票区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "帳票区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注単位", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注単位", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注単位", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注単位", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ商品コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ商品名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ商品名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ商品名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ規格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ規格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ規格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_表示価格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "表示価格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_表示価格", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "表示価格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＥＯＳ棚番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ棚番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＥＯＳ棚番", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＥＯＳ棚番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ＪＡＮコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＪＡＮコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＪＡＮコード", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＪＡＮコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカー品番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_棚番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカー名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカー名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_エラー区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラー区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_エラー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラー区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_更新ビット", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新ビット", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新ビット", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新ビット", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商品番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_社コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_社コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "社コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店コードＢ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コードＢ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店コードＢ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店コードＢ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_直送区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "直送区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_直送区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "直送区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_客注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_客注区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_経費区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "経費区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_経費区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "経費区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_返品区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "返品区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_返品区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "返品区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本部原価単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本部原価単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本部原価金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本部原価金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本部原価金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店舗売価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗売価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店舗売価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗売価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_大分類コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大分類コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_大分類コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大分類コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_店舗備考", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗備考", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_店舗備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "店舗備考", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入先備考", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先備考", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先備考", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先備考", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_登録番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "登録番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_登録番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "登録番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ドラスタ発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ドラスタ発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_客注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_客注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "客注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ドラスタ区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ドラスタ区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ドラスタ区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_欠品理由", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "欠品理由", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_欠品理由", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "欠品理由", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上連番", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "売上連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::db_test.Properties.Settings.Default.SPEEDDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 売上連番, 本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 受注連番, 出荷番号, 出荷連番, 発注番号, 発注連番, 売上伝票番号, 処理日, 売上日, 納入日, 受注日, 納期, 発注納期, 処理区, 売上区分コード, システム区分, 取引区分, 請求月区分コード, 得意先コード, 得名, 事業所コード, ランク, 部課コード, 担当者コード, 代理店コード, 代名, 納入先コード, 納名, 取引先コード, 取引先名, 請求先コード, 売上切捨区分, 売上税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 売上単価, 売上金額, 税抜売上金額, 原価単価, 原価金額, 粗利, 消費税, 税抜仕入金額, 仕入消費税, 売上返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 受注番号, 相手先注文番号, 自社受付番号, 仕入伝票番号, 仕入先コード, 仕名, 仕入分類, 仕入事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 入金番号, チェック, 入金チェック, 回収摘要, 検収チェック, 完了フラグ, WS_ID, 発行済フラグ, 受注更新フラグ, 出荷更新フラグ, 得意先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, 商品取引更新フラグ, オペレーターコード, 修正オペレーターコード, 受注行, 処理月日, 管理年月, 一括消費税締日, 発行済INDEX, 受注行番号, 売上行番号, 定価, 納品掛率, 原価掛率, 発注有無区分, 回答納期, 在庫数, 受注残数, 発注残数, 納品書発行フラグ, 専用伝票発行フラグ, 売上累計, 受注番号受注残数, 納品書発行日時, 取引先コード２, 社名, 店名, 部名, 発注区分, 請求月, ＥＯＳ区分, 帳票区分, 発注単位, ＥＯＳ商品コード, ＥＯＳ商品名, ＥＯＳ規格, 表示価格, ＥＯＳ棚番, ＪＡＮコード, メーカー品番, 棚番, メーカー名, 店コード, 部コード, エラー区分, 更新ビット, 商品番号, 社コード, 店コードＢ, 直送区分, 客注区分, 経費区分, 返品区分, 本部原価単価, 本部原価金額, 納入単価, 店舗売価, 大分類コード, 店舗備考, 仕入先備考, 登録番号, ドラスタ発注番号, 客注番号, ドラスタ区分, 欠品理由 FROM dbo.T売上明細ファイル";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(売上計上DataSet.T売上明細ファイルDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 売上計上DataSet.T売上明細ファイルDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            売上計上DataSet.T売上明細ファイルDataTable dataTable = new 売上計上DataSet.T売上明細ファイルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(売上計上DataSet.T売上明細ファイルDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(売上計上DataSet dataSet) {
            return this.Adapter.Update(dataSet, "T売上明細ファイル");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_売上連番, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    global::System.Nullable<short> Original_入力区分, 
                    global::System.Nullable<int> Original_処理番号, 
                    bool Original_エラーフラグ, 
                    global::System.Nullable<int> Original_受発注行数, 
                    global::System.Nullable<int> Original_受注連番, 
                    global::System.Nullable<int> Original_出荷番号, 
                    global::System.Nullable<int> Original_出荷連番, 
                    global::System.Nullable<int> Original_発注番号, 
                    global::System.Nullable<int> Original_発注連番, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    global::System.Nullable<global::System.DateTime> Original_売上日, 
                    global::System.Nullable<global::System.DateTime> Original_納入日, 
                    global::System.Nullable<global::System.DateTime> Original_受注日, 
                    global::System.Nullable<global::System.DateTime> Original_納期, 
                    global::System.Nullable<global::System.DateTime> Original_発注納期, 
                    global::System.Nullable<short> Original_処理区, 
                    global::System.Nullable<short> Original_売上区分コード, 
                    short Original_システム区分, 
                    global::System.Nullable<short> Original_取引区分, 
                    global::System.Nullable<short> Original_請求月区分コード, 
                    string Original_得意先コード, 
                    string Original_得名, 
                    string Original_事業所コード, 
                    global::System.Nullable<short> Original_ランク, 
                    string Original_部課コード, 
                    string Original_担当者コード, 
                    string Original_代理店コード, 
                    string Original_代名, 
                    string Original_納入先コード, 
                    string Original_納名, 
                    string Original_取引先コード, 
                    string Original_取引先名, 
                    string Original_請求先コード, 
                    global::System.Nullable<short> Original_売上切捨区分, 
                    global::System.Nullable<short> Original_売上税区分, 
                    string Original_伝票摘要, 
                    string Original_商品コード, 
                    string Original_商名, 
                    string Original_規格, 
                    string Original_形式寸法, 
                    string Original_材質, 
                    global::System.Nullable<short> Original_分類, 
                    bool Original_在庫管理区分, 
                    string Original_品種コード, 
                    string Original_メーカーコード, 
                    global::System.Nullable<decimal> Original_入数, 
                    global::System.Nullable<short> Original_単位コード, 
                    string Original_倉庫コード, 
                    global::System.Nullable<decimal> Original_ケース数, 
                    global::System.Nullable<decimal> Original_数量, 
                    global::System.Nullable<decimal> Original_売上単価, 
                    global::System.Nullable<decimal> Original_売上金額, 
                    global::System.Nullable<decimal> Original_税抜売上金額, 
                    global::System.Nullable<decimal> Original_原価単価, 
                    global::System.Nullable<decimal> Original_原価金額, 
                    global::System.Nullable<decimal> Original_粗利, 
                    global::System.Nullable<decimal> Original_消費税, 
                    global::System.Nullable<decimal> Original_税抜仕入金額, 
                    global::System.Nullable<decimal> Original_仕入消費税, 
                    global::System.Nullable<short> Original_売上返品値引理由区分, 
                    global::System.Nullable<short> Original_外内税区分, 
                    global::System.Nullable<decimal> Original_消費税率, 
                    global::System.Nullable<decimal> Original_新消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    string Original_明細摘要, 
                    global::System.Nullable<int> Original_受注番号, 
                    string Original_相手先注文番号, 
                    string Original_自社受付番号, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    string Original_仕入先コード, 
                    string Original_仕名, 
                    global::System.Nullable<short> Original_仕入分類, 
                    string Original_仕入事業所コード, 
                    string Original_仕入担当者コード, 
                    global::System.Nullable<short> Original_仕入切捨区分, 
                    global::System.Nullable<short> Original_仕入税区分, 
                    global::System.Nullable<int> Original_入金番号, 
                    bool Original_チェック, 
                    bool Original_入金チェック, 
                    string Original_回収摘要, 
                    bool Original_検収チェック, 
                    bool Original_完了フラグ, 
                    global::System.Nullable<short> Original_WS_ID, 
                    bool Original_発行済フラグ, 
                    bool Original_受注更新フラグ, 
                    bool Original_出荷更新フラグ, 
                    bool Original_得意先更新フラグ, 
                    bool Original_商品更新フラグ, 
                    bool Original_商品倉庫更新フラグ, 
                    bool Original_商品取引更新フラグ, 
                    string Original_オペレーターコード, 
                    string Original_修正オペレーターコード, 
                    global::System.Nullable<int> Original_受注行, 
                    global::System.Nullable<global::System.DateTime> Original_処理月日, 
                    global::System.Nullable<int> Original_管理年月, 
                    global::System.Nullable<short> Original_一括消費税締日, 
                    global::System.Nullable<int> Original_発行済INDEX, 
                    global::System.Nullable<int> Original_受注行番号, 
                    global::System.Nullable<int> Original_売上行番号, 
                    global::System.Nullable<decimal> Original_定価, 
                    global::System.Nullable<decimal> Original_納品掛率, 
                    global::System.Nullable<decimal> Original_原価掛率, 
                    global::System.Nullable<short> Original_発注有無区分, 
                    global::System.Nullable<global::System.DateTime> Original_回答納期, 
                    global::System.Nullable<decimal> Original_在庫数, 
                    global::System.Nullable<decimal> Original_受注残数, 
                    global::System.Nullable<decimal> Original_発注残数, 
                    global::System.Nullable<short> Original_納品書発行フラグ, 
                    global::System.Nullable<short> Original_専用伝票発行フラグ, 
                    global::System.Nullable<decimal> Original_売上累計, 
                    global::System.Nullable<decimal> Original_受注番号受注残数, 
                    global::System.Nullable<global::System.DateTime> Original_納品書発行日時, 
                    global::System.Nullable<int> Original_取引先コード２, 
                    string Original_社名, 
                    string Original_店名, 
                    string Original_部名, 
                    global::System.Nullable<int> Original_発注区分, 
                    global::System.Nullable<int> Original_請求月, 
                    string Original_ＥＯＳ区分, 
                    global::System.Nullable<int> Original_帳票区分, 
                    string Original_発注単位, 
                    string Original_ＥＯＳ商品コード, 
                    string Original_ＥＯＳ商品名, 
                    string Original_ＥＯＳ規格, 
                    global::System.Nullable<decimal> Original_表示価格, 
                    global::System.Nullable<decimal> Original_ＥＯＳ棚番, 
                    global::System.Nullable<decimal> Original_ＪＡＮコード, 
                    string Original_メーカー品番, 
                    string Original_棚番, 
                    string Original_メーカー名, 
                    global::System.Nullable<int> Original_店コード, 
                    global::System.Nullable<int> Original_部コード, 
                    string Original_エラー区分, 
                    global::System.Nullable<int> Original_更新ビット, 
                    string Original_商品番号, 
                    global::System.Nullable<int> Original_社コード, 
                    global::System.Nullable<int> Original_店コードＢ, 
                    global::System.Nullable<int> Original_直送区分, 
                    global::System.Nullable<int> Original_客注区分, 
                    global::System.Nullable<int> Original_経費区分, 
                    global::System.Nullable<int> Original_返品区分, 
                    global::System.Nullable<decimal> Original_本部原価単価, 
                    global::System.Nullable<decimal> Original_本部原価金額, 
                    global::System.Nullable<decimal> Original_納入単価, 
                    global::System.Nullable<decimal> Original_店舗売価, 
                    string Original_大分類コード, 
                    string Original_店舗備考, 
                    string Original_仕入先備考, 
                    global::System.Nullable<int> Original_登録番号, 
                    global::System.Nullable<int> Original_ドラスタ発注番号, 
                    string Original_客注番号, 
                    global::System.Nullable<short> Original_ドラスタ区分, 
                    global::System.Nullable<short> Original_欠品理由) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_売上連番));
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_処理コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_処理コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_入力区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(Original_入力区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_処理番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_処理番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_エラーフラグ));
            if ((Original_受発注行数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_受発注行数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_受注連番.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_受注連番.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_出荷番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷連番.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_出荷連番.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_発注番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_発注番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_発注連番.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_発注連番.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_売上伝票番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_売上伝票番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_処理日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((System.DateTime)(Original_処理日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_売上日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_売上日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_納入日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_納入日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_受注日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((System.DateTime)(Original_受注日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_納期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_納期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_発注納期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((System.DateTime)(Original_発注納期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_処理区.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((short)(Original_処理区.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_売上区分コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((short)(Original_売上区分コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[40].Value = ((short)(Original_システム区分));
            if ((Original_取引区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((short)(Original_取引区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_請求月区分コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((short)(Original_請求月区分コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_得意先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_得意先コード));
            }
            if ((Original_得名 == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_得名));
            }
            if ((Original_事業所コード == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_事業所コード));
            }
            if ((Original_ランク.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((short)(Original_ランク.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_部課コード == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_部課コード));
            }
            if ((Original_担当者コード == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_担当者コード));
            }
            if ((Original_代理店コード == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_代理店コード));
            }
            if ((Original_代名 == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_代名));
            }
            if ((Original_納入先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_納入先コード));
            }
            if ((Original_納名 == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_納名));
            }
            if ((Original_取引先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_取引先コード));
            }
            if ((Original_取引先名 == null)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_取引先名));
            }
            if ((Original_請求先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((string)(Original_請求先コード));
            }
            if ((Original_売上切捨区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((short)(Original_売上切捨区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_売上税区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((short)(Original_売上税区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_伝票摘要 == null)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((string)(Original_伝票摘要));
            }
            if ((Original_商品コード == null)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((string)(Original_商品コード));
            }
            if ((Original_商名 == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_商名));
            }
            if ((Original_規格 == null)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_規格));
            }
            if ((Original_形式寸法 == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_形式寸法));
            }
            if ((Original_材質 == null)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_材質));
            }
            if ((Original_分類.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((short)(Original_分類.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[89].Value = ((bool)(Original_在庫管理区分));
            if ((Original_品種コード == null)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((string)(Original_品種コード));
            }
            if ((Original_メーカーコード == null)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((string)(Original_メーカーコード));
            }
            if ((Original_入数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((decimal)(Original_入数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_単位コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[97].Value = ((short)(Original_単位コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_倉庫コード == null)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((string)(Original_倉庫コード));
            }
            if ((Original_ケース数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((decimal)(Original_ケース数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_数量.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[103].Value = ((decimal)(Original_数量.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_売上単価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[105].Value = ((decimal)(Original_売上単価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_売上金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[107].Value = ((decimal)(Original_売上金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_税抜売上金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[109].Value = ((decimal)(Original_税抜売上金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_原価単価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[111].Value = ((decimal)(Original_原価単価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_原価金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[113].Value = ((decimal)(Original_原価金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_粗利.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[115].Value = ((decimal)(Original_粗利.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[117].Value = ((decimal)(Original_消費税.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_税抜仕入金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[119].Value = ((decimal)(Original_税抜仕入金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入消費税.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[121].Value = ((decimal)(Original_仕入消費税.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_売上返品値引理由区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[123].Value = ((short)(Original_売上返品値引理由区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_外内税区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[125].Value = ((short)(Original_外内税区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[127].Value = ((decimal)(Original_消費税率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[129].Value = ((decimal)(Original_新消費税率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税適用.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[131].Value = ((System.DateTime)(Original_新消費税適用.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_明細摘要 == null)) {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[133].Value = ((string)(Original_明細摘要));
            }
            if ((Original_受注番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[135].Value = ((int)(Original_受注番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_相手先注文番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[137].Value = ((string)(Original_相手先注文番号));
            }
            if ((Original_自社受付番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[139].Value = ((string)(Original_自社受付番号));
            }
            if ((Original_仕入伝票番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[141].Value = ((int)(Original_仕入伝票番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[143].Value = ((string)(Original_仕入先コード));
            }
            if ((Original_仕名 == null)) {
                this.Adapter.DeleteCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[145].Value = ((string)(Original_仕名));
            }
            if ((Original_仕入分類.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[147].Value = ((short)(Original_仕入分類.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入事業所コード == null)) {
                this.Adapter.DeleteCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[149].Value = ((string)(Original_仕入事業所コード));
            }
            if ((Original_仕入担当者コード == null)) {
                this.Adapter.DeleteCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[151].Value = ((string)(Original_仕入担当者コード));
            }
            if ((Original_仕入切捨区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[153].Value = ((short)(Original_仕入切捨区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入税区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[155].Value = ((short)(Original_仕入税区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((Original_入金番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[157].Value = ((int)(Original_入金番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[158].Value = ((bool)(Original_チェック));
            this.Adapter.DeleteCommand.Parameters[159].Value = ((bool)(Original_入金チェック));
            if ((Original_回収摘要 == null)) {
                this.Adapter.DeleteCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[161].Value = ((string)(Original_回収摘要));
            }
            this.Adapter.DeleteCommand.Parameters[162].Value = ((bool)(Original_検収チェック));
            this.Adapter.DeleteCommand.Parameters[163].Value = ((bool)(Original_完了フラグ));
            if ((Original_WS_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[165].Value = ((short)(Original_WS_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[166].Value = ((bool)(Original_発行済フラグ));
            this.Adapter.DeleteCommand.Parameters[167].Value = ((bool)(Original_受注更新フラグ));
            this.Adapter.DeleteCommand.Parameters[168].Value = ((bool)(Original_出荷更新フラグ));
            this.Adapter.DeleteCommand.Parameters[169].Value = ((bool)(Original_得意先更新フラグ));
            this.Adapter.DeleteCommand.Parameters[170].Value = ((bool)(Original_商品更新フラグ));
            this.Adapter.DeleteCommand.Parameters[171].Value = ((bool)(Original_商品倉庫更新フラグ));
            this.Adapter.DeleteCommand.Parameters[172].Value = ((bool)(Original_商品取引更新フラグ));
            if ((Original_オペレーターコード == null)) {
                this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[174].Value = ((string)(Original_オペレーターコード));
            }
            if ((Original_修正オペレーターコード == null)) {
                this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[176].Value = ((string)(Original_修正オペレーターコード));
            }
            if ((Original_受注行.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[178].Value = ((int)(Original_受注行.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            if ((Original_処理月日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[180].Value = ((System.DateTime)(Original_処理月日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            if ((Original_管理年月.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[182].Value = ((int)(Original_管理年月.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            if ((Original_一括消費税締日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[184].Value = ((short)(Original_一括消費税締日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            if ((Original_発行済INDEX.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[186].Value = ((int)(Original_発行済INDEX.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            if ((Original_受注行番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[188].Value = ((int)(Original_受注行番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            if ((Original_売上行番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[190].Value = ((int)(Original_売上行番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            if ((Original_定価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[191].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[192].Value = ((decimal)(Original_定価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[191].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            if ((Original_納品掛率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[193].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[194].Value = ((decimal)(Original_納品掛率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[193].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            if ((Original_原価掛率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[195].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[196].Value = ((decimal)(Original_原価掛率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[195].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            if ((Original_発注有無区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[198].Value = ((short)(Original_発注有無区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            if ((Original_回答納期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[200].Value = ((System.DateTime)(Original_回答納期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            if ((Original_在庫数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[202].Value = ((decimal)(Original_在庫数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            if ((Original_受注残数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[204].Value = ((decimal)(Original_受注残数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            if ((Original_発注残数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[206].Value = ((decimal)(Original_発注残数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            if ((Original_納品書発行フラグ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[208].Value = ((short)(Original_納品書発行フラグ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            if ((Original_専用伝票発行フラグ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[210].Value = ((short)(Original_専用伝票発行フラグ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            if ((Original_売上累計.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[212].Value = ((decimal)(Original_売上累計.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            if ((Original_受注番号受注残数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[214].Value = ((decimal)(Original_受注番号受注残数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            if ((Original_納品書発行日時.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[216].Value = ((System.DateTime)(Original_納品書発行日時.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            if ((Original_取引先コード２.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[218].Value = ((int)(Original_取引先コード２.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            if ((Original_社名 == null)) {
                this.Adapter.DeleteCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[220].Value = ((string)(Original_社名));
            }
            if ((Original_店名 == null)) {
                this.Adapter.DeleteCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[222].Value = ((string)(Original_店名));
            }
            if ((Original_部名 == null)) {
                this.Adapter.DeleteCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[224].Value = ((string)(Original_部名));
            }
            if ((Original_発注区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[225].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[226].Value = ((int)(Original_発注区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[225].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[226].Value = global::System.DBNull.Value;
            }
            if ((Original_請求月.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[227].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[228].Value = ((int)(Original_請求月.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[227].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[228].Value = global::System.DBNull.Value;
            }
            if ((Original_ＥＯＳ区分 == null)) {
                this.Adapter.DeleteCommand.Parameters[229].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[230].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[229].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[230].Value = ((string)(Original_ＥＯＳ区分));
            }
            if ((Original_帳票区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[232].Value = ((int)(Original_帳票区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            if ((Original_発注単位 == null)) {
                this.Adapter.DeleteCommand.Parameters[233].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[234].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[233].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[234].Value = ((string)(Original_発注単位));
            }
            if ((Original_ＥＯＳ商品コード == null)) {
                this.Adapter.DeleteCommand.Parameters[235].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[236].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[235].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[236].Value = ((string)(Original_ＥＯＳ商品コード));
            }
            if ((Original_ＥＯＳ商品名 == null)) {
                this.Adapter.DeleteCommand.Parameters[237].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[238].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[237].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[238].Value = ((string)(Original_ＥＯＳ商品名));
            }
            if ((Original_ＥＯＳ規格 == null)) {
                this.Adapter.DeleteCommand.Parameters[239].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[240].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[239].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[240].Value = ((string)(Original_ＥＯＳ規格));
            }
            if ((Original_表示価格.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[241].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[242].Value = ((decimal)(Original_表示価格.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[241].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[242].Value = global::System.DBNull.Value;
            }
            if ((Original_ＥＯＳ棚番.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[243].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[244].Value = ((decimal)(Original_ＥＯＳ棚番.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[243].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[244].Value = global::System.DBNull.Value;
            }
            if ((Original_ＪＡＮコード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[245].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[246].Value = ((decimal)(Original_ＪＡＮコード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[245].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[246].Value = global::System.DBNull.Value;
            }
            if ((Original_メーカー品番 == null)) {
                this.Adapter.DeleteCommand.Parameters[247].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[248].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[247].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[248].Value = ((string)(Original_メーカー品番));
            }
            if ((Original_棚番 == null)) {
                this.Adapter.DeleteCommand.Parameters[249].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[250].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[249].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[250].Value = ((string)(Original_棚番));
            }
            if ((Original_メーカー名 == null)) {
                this.Adapter.DeleteCommand.Parameters[251].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[252].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[251].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[252].Value = ((string)(Original_メーカー名));
            }
            if ((Original_店コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[253].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[254].Value = ((int)(Original_店コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[253].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[254].Value = global::System.DBNull.Value;
            }
            if ((Original_部コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[255].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[256].Value = ((int)(Original_部コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[255].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[256].Value = global::System.DBNull.Value;
            }
            if ((Original_エラー区分 == null)) {
                this.Adapter.DeleteCommand.Parameters[257].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[258].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[257].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[258].Value = ((string)(Original_エラー区分));
            }
            if ((Original_更新ビット.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[259].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[260].Value = ((int)(Original_更新ビット.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[259].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[260].Value = global::System.DBNull.Value;
            }
            if ((Original_商品番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[261].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[262].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[261].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[262].Value = ((string)(Original_商品番号));
            }
            if ((Original_社コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[263].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[264].Value = ((int)(Original_社コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[263].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[264].Value = global::System.DBNull.Value;
            }
            if ((Original_店コードＢ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[265].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[266].Value = ((int)(Original_店コードＢ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[265].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[266].Value = global::System.DBNull.Value;
            }
            if ((Original_直送区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[267].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[268].Value = ((int)(Original_直送区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[267].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[268].Value = global::System.DBNull.Value;
            }
            if ((Original_客注区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[269].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[270].Value = ((int)(Original_客注区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[269].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[270].Value = global::System.DBNull.Value;
            }
            if ((Original_経費区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[271].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[272].Value = ((int)(Original_経費区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[271].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[272].Value = global::System.DBNull.Value;
            }
            if ((Original_返品区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[273].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[274].Value = ((int)(Original_返品区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[273].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[274].Value = global::System.DBNull.Value;
            }
            if ((Original_本部原価単価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[275].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[276].Value = ((decimal)(Original_本部原価単価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[275].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[276].Value = global::System.DBNull.Value;
            }
            if ((Original_本部原価金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[277].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[278].Value = ((decimal)(Original_本部原価金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[277].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[278].Value = global::System.DBNull.Value;
            }
            if ((Original_納入単価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[279].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[280].Value = ((decimal)(Original_納入単価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[279].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[280].Value = global::System.DBNull.Value;
            }
            if ((Original_店舗売価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[281].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[282].Value = ((decimal)(Original_店舗売価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[281].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[282].Value = global::System.DBNull.Value;
            }
            if ((Original_大分類コード == null)) {
                this.Adapter.DeleteCommand.Parameters[283].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[284].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[283].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[284].Value = ((string)(Original_大分類コード));
            }
            if ((Original_店舗備考 == null)) {
                this.Adapter.DeleteCommand.Parameters[285].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[286].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[285].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[286].Value = ((string)(Original_店舗備考));
            }
            if ((Original_仕入先備考 == null)) {
                this.Adapter.DeleteCommand.Parameters[287].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[288].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[287].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[288].Value = ((string)(Original_仕入先備考));
            }
            if ((Original_登録番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[289].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[290].Value = ((int)(Original_登録番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[289].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[290].Value = global::System.DBNull.Value;
            }
            if ((Original_ドラスタ発注番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[291].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[292].Value = ((int)(Original_ドラスタ発注番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[291].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[292].Value = global::System.DBNull.Value;
            }
            if ((Original_客注番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[293].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[294].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[293].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[294].Value = ((string)(Original_客注番号));
            }
            if ((Original_ドラスタ区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[295].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[296].Value = ((short)(Original_ドラスタ区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[295].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[296].Value = global::System.DBNull.Value;
            }
            if ((Original_欠品理由.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[297].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[298].Value = ((short)(Original_欠品理由.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[297].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[298].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    global::System.Nullable<short> 入力区分, 
                    global::System.Nullable<int> 処理番号, 
                    bool エラーフラグ, 
                    global::System.Nullable<int> 受発注行数, 
                    global::System.Nullable<int> 受注連番, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 出荷連番, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 発注連番, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    global::System.Nullable<global::System.DateTime> 売上日, 
                    global::System.Nullable<global::System.DateTime> 納入日, 
                    global::System.Nullable<global::System.DateTime> 受注日, 
                    global::System.Nullable<global::System.DateTime> 納期, 
                    global::System.Nullable<global::System.DateTime> 発注納期, 
                    global::System.Nullable<short> 処理区, 
                    global::System.Nullable<short> 売上区分コード, 
                    short システム区分, 
                    global::System.Nullable<short> 取引区分, 
                    global::System.Nullable<short> 請求月区分コード, 
                    string 得意先コード, 
                    string 得名, 
                    string 事業所コード, 
                    global::System.Nullable<short> ランク, 
                    string 部課コード, 
                    string 担当者コード, 
                    string 代理店コード, 
                    string 代名, 
                    string 納入先コード, 
                    string 納名, 
                    string 取引先コード, 
                    string 取引先名, 
                    string 請求先コード, 
                    global::System.Nullable<short> 売上切捨区分, 
                    global::System.Nullable<short> 売上税区分, 
                    string 伝票摘要, 
                    string 商品コード, 
                    string 商名, 
                    string 規格, 
                    string 形式寸法, 
                    string 材質, 
                    global::System.Nullable<short> 分類, 
                    bool 在庫管理区分, 
                    string 品種コード, 
                    string メーカーコード, 
                    global::System.Nullable<decimal> 入数, 
                    global::System.Nullable<short> 単位コード, 
                    string 倉庫コード, 
                    global::System.Nullable<decimal> ケース数, 
                    global::System.Nullable<decimal> 数量, 
                    global::System.Nullable<decimal> 売上単価, 
                    global::System.Nullable<decimal> 売上金額, 
                    global::System.Nullable<decimal> 税抜売上金額, 
                    global::System.Nullable<decimal> 原価単価, 
                    global::System.Nullable<decimal> 原価金額, 
                    global::System.Nullable<decimal> 粗利, 
                    global::System.Nullable<decimal> 消費税, 
                    global::System.Nullable<decimal> 税抜仕入金額, 
                    global::System.Nullable<decimal> 仕入消費税, 
                    global::System.Nullable<short> 売上返品値引理由区分, 
                    global::System.Nullable<short> 外内税区分, 
                    global::System.Nullable<decimal> 消費税率, 
                    global::System.Nullable<decimal> 新消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    string 明細摘要, 
                    global::System.Nullable<int> 受注番号, 
                    string 相手先注文番号, 
                    string 自社受付番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    string 仕入先コード, 
                    string 仕名, 
                    global::System.Nullable<short> 仕入分類, 
                    string 仕入事業所コード, 
                    string 仕入担当者コード, 
                    global::System.Nullable<short> 仕入切捨区分, 
                    global::System.Nullable<short> 仕入税区分, 
                    global::System.Nullable<int> 入金番号, 
                    bool チェック, 
                    bool 入金チェック, 
                    string 回収摘要, 
                    bool 検収チェック, 
                    bool 完了フラグ, 
                    global::System.Nullable<short> WS_ID, 
                    bool 発行済フラグ, 
                    bool 受注更新フラグ, 
                    bool 出荷更新フラグ, 
                    bool 得意先更新フラグ, 
                    bool 商品更新フラグ, 
                    bool 商品倉庫更新フラグ, 
                    bool 商品取引更新フラグ, 
                    string オペレーターコード, 
                    string 修正オペレーターコード, 
                    global::System.Nullable<int> 受注行, 
                    global::System.Nullable<global::System.DateTime> 処理月日, 
                    global::System.Nullable<int> 管理年月, 
                    global::System.Nullable<short> 一括消費税締日, 
                    global::System.Nullable<int> 発行済INDEX, 
                    global::System.Nullable<int> 受注行番号, 
                    global::System.Nullable<int> 売上行番号, 
                    global::System.Nullable<decimal> 定価, 
                    global::System.Nullable<decimal> 納品掛率, 
                    global::System.Nullable<decimal> 原価掛率, 
                    global::System.Nullable<short> 発注有無区分, 
                    global::System.Nullable<global::System.DateTime> 回答納期, 
                    global::System.Nullable<decimal> 在庫数, 
                    global::System.Nullable<decimal> 受注残数, 
                    global::System.Nullable<decimal> 発注残数, 
                    global::System.Nullable<short> 納品書発行フラグ, 
                    global::System.Nullable<short> 専用伝票発行フラグ, 
                    global::System.Nullable<decimal> 売上累計, 
                    global::System.Nullable<decimal> 受注番号受注残数, 
                    global::System.Nullable<global::System.DateTime> 納品書発行日時, 
                    global::System.Nullable<int> 取引先コード２, 
                    string 社名, 
                    string 店名, 
                    string 部名, 
                    global::System.Nullable<int> 発注区分, 
                    global::System.Nullable<int> 請求月, 
                    string ＥＯＳ区分, 
                    global::System.Nullable<int> 帳票区分, 
                    string 発注単位, 
                    string ＥＯＳ商品コード, 
                    string ＥＯＳ商品名, 
                    string ＥＯＳ規格, 
                    global::System.Nullable<decimal> 表示価格, 
                    global::System.Nullable<decimal> ＥＯＳ棚番, 
                    global::System.Nullable<decimal> ＪＡＮコード, 
                    string メーカー品番, 
                    string 棚番, 
                    string メーカー名, 
                    global::System.Nullable<int> 店コード, 
                    global::System.Nullable<int> 部コード, 
                    string エラー区分, 
                    global::System.Nullable<int> 更新ビット, 
                    string 商品番号, 
                    global::System.Nullable<int> 社コード, 
                    global::System.Nullable<int> 店コードＢ, 
                    global::System.Nullable<int> 直送区分, 
                    global::System.Nullable<int> 客注区分, 
                    global::System.Nullable<int> 経費区分, 
                    global::System.Nullable<int> 返品区分, 
                    global::System.Nullable<decimal> 本部原価単価, 
                    global::System.Nullable<decimal> 本部原価金額, 
                    global::System.Nullable<decimal> 納入単価, 
                    global::System.Nullable<decimal> 店舗売価, 
                    string 大分類コード, 
                    string 店舗備考, 
                    string 仕入先備考, 
                    global::System.Nullable<int> 登録番号, 
                    global::System.Nullable<int> ドラスタ発注番号, 
                    string 客注番号, 
                    global::System.Nullable<short> ドラスタ区分, 
                    global::System.Nullable<short> 欠品理由) {
            if ((本支店区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(処理コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((入力区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((short)(入力区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(エラーフラグ));
            if ((受発注行数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(受発注行数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((受注連番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(受注連番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((出荷番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(出荷番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((出荷連番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(出荷連番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((発注番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((発注連番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(発注連番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((売上日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(売上日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((納入日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(納入日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((受注日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(受注日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((納期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(納期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((発注納期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(発注納期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((処理区.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((short)(処理区.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((売上区分コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((short)(売上区分コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((short)(システム区分));
            if ((取引区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((short)(取引区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((請求月区分コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((short)(請求月区分コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((得意先コード == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(得意先コード));
            }
            if ((得名 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(得名));
            }
            if ((事業所コード == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(事業所コード));
            }
            if ((ランク.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((short)(ランク.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((部課コード == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(部課コード));
            }
            if ((担当者コード == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(担当者コード));
            }
            if ((代理店コード == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(代理店コード));
            }
            if ((代名 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(代名));
            }
            if ((納入先コード == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(納入先コード));
            }
            if ((納名 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(納名));
            }
            if ((取引先コード == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(取引先コード));
            }
            if ((取引先名 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(取引先名));
            }
            if ((請求先コード == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(請求先コード));
            }
            if ((売上切捨区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((short)(売上切捨区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((売上税区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((short)(売上税区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((伝票摘要 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(伝票摘要));
            }
            if ((商品コード == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(商品コード));
            }
            if ((商名 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(商名));
            }
            if ((規格 == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(規格));
            }
            if ((形式寸法 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(形式寸法));
            }
            if ((材質 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(材質));
            }
            if ((分類.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((short)(分類.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[45].Value = ((bool)(在庫管理区分));
            if ((品種コード == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(品種コード));
            }
            if ((メーカーコード == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(メーカーコード));
            }
            if ((入数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(入数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((単位コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((short)(単位コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((倉庫コード == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(倉庫コード));
            }
            if ((ケース数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((decimal)(ケース数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((数量.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((decimal)(数量.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((売上単価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(売上単価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((売上金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((decimal)(売上金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((税抜売上金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(税抜売上金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((原価単価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((decimal)(原価単価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((原価金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((decimal)(原価金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((粗利.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((decimal)(粗利.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((消費税.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((decimal)(消費税.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((税抜仕入金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((decimal)(税抜仕入金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((仕入消費税.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((decimal)(仕入消費税.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((売上返品値引理由区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((short)(売上返品値引理由区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((外内税区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((short)(外内税区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((消費税率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((decimal)(消費税率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((新消費税率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((decimal)(新消費税率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((新消費税適用.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((System.DateTime)(新消費税適用.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((明細摘要 == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(明細摘要));
            }
            if ((受注番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((int)(受注番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((相手先注文番号 == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(相手先注文番号));
            }
            if ((自社受付番号 == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(自社受付番号));
            }
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((仕入先コード == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(仕入先コード));
            }
            if ((仕名 == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(仕名));
            }
            if ((仕入分類.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((short)(仕入分類.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((仕入事業所コード == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(仕入事業所コード));
            }
            if ((仕入担当者コード == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(仕入担当者コード));
            }
            if ((仕入切捨区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((short)(仕入切捨区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((仕入税区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((short)(仕入税区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((入金番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((int)(入金番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[80].Value = ((bool)(チェック));
            this.Adapter.InsertCommand.Parameters[81].Value = ((bool)(入金チェック));
            if ((回収摘要 == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(回収摘要));
            }
            this.Adapter.InsertCommand.Parameters[83].Value = ((bool)(検収チェック));
            this.Adapter.InsertCommand.Parameters[84].Value = ((bool)(完了フラグ));
            if ((WS_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((short)(WS_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[86].Value = ((bool)(発行済フラグ));
            this.Adapter.InsertCommand.Parameters[87].Value = ((bool)(受注更新フラグ));
            this.Adapter.InsertCommand.Parameters[88].Value = ((bool)(出荷更新フラグ));
            this.Adapter.InsertCommand.Parameters[89].Value = ((bool)(得意先更新フラグ));
            this.Adapter.InsertCommand.Parameters[90].Value = ((bool)(商品更新フラグ));
            this.Adapter.InsertCommand.Parameters[91].Value = ((bool)(商品倉庫更新フラグ));
            this.Adapter.InsertCommand.Parameters[92].Value = ((bool)(商品取引更新フラグ));
            if ((オペレーターコード == null)) {
                this.Adapter.InsertCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = ((string)(オペレーターコード));
            }
            if ((修正オペレーターコード == null)) {
                this.Adapter.InsertCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = ((string)(修正オペレーターコード));
            }
            if ((受注行.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[95].Value = ((int)(受注行.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((処理月日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[96].Value = ((System.DateTime)(処理月日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((管理年月.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[97].Value = ((int)(管理年月.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((一括消費税締日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[98].Value = ((short)(一括消費税締日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((発行済INDEX.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[99].Value = ((int)(発行済INDEX.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((受注行番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[100].Value = ((int)(受注行番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((売上行番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[101].Value = ((int)(売上行番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((定価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[102].Value = ((decimal)(定価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((納品掛率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[103].Value = ((decimal)(納品掛率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((原価掛率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[104].Value = ((decimal)(原価掛率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((発注有無区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[105].Value = ((short)(発注有無区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((回答納期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[106].Value = ((System.DateTime)(回答納期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((在庫数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[107].Value = ((decimal)(在庫数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((受注残数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[108].Value = ((decimal)(受注残数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((発注残数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[109].Value = ((decimal)(発注残数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((納品書発行フラグ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[110].Value = ((short)(納品書発行フラグ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((専用伝票発行フラグ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[111].Value = ((short)(専用伝票発行フラグ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((売上累計.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[112].Value = ((decimal)(売上累計.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((受注番号受注残数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[113].Value = ((decimal)(受注番号受注残数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((納品書発行日時.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[114].Value = ((System.DateTime)(納品書発行日時.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((取引先コード２.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[115].Value = ((int)(取引先コード２.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((社名 == null)) {
                this.Adapter.InsertCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[116].Value = ((string)(社名));
            }
            if ((店名 == null)) {
                this.Adapter.InsertCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[117].Value = ((string)(店名));
            }
            if ((部名 == null)) {
                this.Adapter.InsertCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[118].Value = ((string)(部名));
            }
            if ((発注区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[119].Value = ((int)(発注区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((請求月.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[120].Value = ((int)(請求月.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((ＥＯＳ区分 == null)) {
                this.Adapter.InsertCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[121].Value = ((string)(ＥＯＳ区分));
            }
            if ((帳票区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[122].Value = ((int)(帳票区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((発注単位 == null)) {
                this.Adapter.InsertCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[123].Value = ((string)(発注単位));
            }
            if ((ＥＯＳ商品コード == null)) {
                this.Adapter.InsertCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[124].Value = ((string)(ＥＯＳ商品コード));
            }
            if ((ＥＯＳ商品名 == null)) {
                this.Adapter.InsertCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[125].Value = ((string)(ＥＯＳ商品名));
            }
            if ((ＥＯＳ規格 == null)) {
                this.Adapter.InsertCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[126].Value = ((string)(ＥＯＳ規格));
            }
            if ((表示価格.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[127].Value = ((decimal)(表示価格.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((ＥＯＳ棚番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[128].Value = ((decimal)(ＥＯＳ棚番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((ＪＡＮコード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[129].Value = ((decimal)(ＪＡＮコード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((メーカー品番 == null)) {
                this.Adapter.InsertCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[130].Value = ((string)(メーカー品番));
            }
            if ((棚番 == null)) {
                this.Adapter.InsertCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[131].Value = ((string)(棚番));
            }
            if ((メーカー名 == null)) {
                this.Adapter.InsertCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[132].Value = ((string)(メーカー名));
            }
            if ((店コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[133].Value = ((int)(店コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((部コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[134].Value = ((int)(部コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((エラー区分 == null)) {
                this.Adapter.InsertCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[135].Value = ((string)(エラー区分));
            }
            if ((更新ビット.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[136].Value = ((int)(更新ビット.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((商品番号 == null)) {
                this.Adapter.InsertCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[137].Value = ((string)(商品番号));
            }
            if ((社コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[138].Value = ((int)(社コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((店コードＢ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[139].Value = ((int)(店コードＢ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((直送区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[140].Value = ((int)(直送区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((客注区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[141].Value = ((int)(客注区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((経費区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[142].Value = ((int)(経費区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((返品区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[143].Value = ((int)(返品区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((本部原価単価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[144].Value = ((decimal)(本部原価単価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((本部原価金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[145].Value = ((decimal)(本部原価金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((納入単価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[146].Value = ((decimal)(納入単価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((店舗売価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[147].Value = ((decimal)(店舗売価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((大分類コード == null)) {
                this.Adapter.InsertCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[148].Value = ((string)(大分類コード));
            }
            if ((店舗備考 == null)) {
                this.Adapter.InsertCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[149].Value = ((string)(店舗備考));
            }
            if ((仕入先備考 == null)) {
                this.Adapter.InsertCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[150].Value = ((string)(仕入先備考));
            }
            if ((登録番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[151].Value = ((int)(登録番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((ドラスタ発注番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[152].Value = ((int)(ドラスタ発注番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((客注番号 == null)) {
                this.Adapter.InsertCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[153].Value = ((string)(客注番号));
            }
            if ((ドラスタ区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[154].Value = ((short)(ドラスタ区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            if ((欠品理由.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[155].Value = ((short)(欠品理由.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    global::System.Nullable<short> 入力区分, 
                    global::System.Nullable<int> 処理番号, 
                    bool エラーフラグ, 
                    global::System.Nullable<int> 受発注行数, 
                    global::System.Nullable<int> 受注連番, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 出荷連番, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 発注連番, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    global::System.Nullable<global::System.DateTime> 売上日, 
                    global::System.Nullable<global::System.DateTime> 納入日, 
                    global::System.Nullable<global::System.DateTime> 受注日, 
                    global::System.Nullable<global::System.DateTime> 納期, 
                    global::System.Nullable<global::System.DateTime> 発注納期, 
                    global::System.Nullable<short> 処理区, 
                    global::System.Nullable<short> 売上区分コード, 
                    short システム区分, 
                    global::System.Nullable<short> 取引区分, 
                    global::System.Nullable<short> 請求月区分コード, 
                    string 得意先コード, 
                    string 得名, 
                    string 事業所コード, 
                    global::System.Nullable<short> ランク, 
                    string 部課コード, 
                    string 担当者コード, 
                    string 代理店コード, 
                    string 代名, 
                    string 納入先コード, 
                    string 納名, 
                    string 取引先コード, 
                    string 取引先名, 
                    string 請求先コード, 
                    global::System.Nullable<short> 売上切捨区分, 
                    global::System.Nullable<short> 売上税区分, 
                    string 伝票摘要, 
                    string 商品コード, 
                    string 商名, 
                    string 規格, 
                    string 形式寸法, 
                    string 材質, 
                    global::System.Nullable<short> 分類, 
                    bool 在庫管理区分, 
                    string 品種コード, 
                    string メーカーコード, 
                    global::System.Nullable<decimal> 入数, 
                    global::System.Nullable<short> 単位コード, 
                    string 倉庫コード, 
                    global::System.Nullable<decimal> ケース数, 
                    global::System.Nullable<decimal> 数量, 
                    global::System.Nullable<decimal> 売上単価, 
                    global::System.Nullable<decimal> 売上金額, 
                    global::System.Nullable<decimal> 税抜売上金額, 
                    global::System.Nullable<decimal> 原価単価, 
                    global::System.Nullable<decimal> 原価金額, 
                    global::System.Nullable<decimal> 粗利, 
                    global::System.Nullable<decimal> 消費税, 
                    global::System.Nullable<decimal> 税抜仕入金額, 
                    global::System.Nullable<decimal> 仕入消費税, 
                    global::System.Nullable<short> 売上返品値引理由区分, 
                    global::System.Nullable<short> 外内税区分, 
                    global::System.Nullable<decimal> 消費税率, 
                    global::System.Nullable<decimal> 新消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    string 明細摘要, 
                    global::System.Nullable<int> 受注番号, 
                    string 相手先注文番号, 
                    string 自社受付番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    string 仕入先コード, 
                    string 仕名, 
                    global::System.Nullable<short> 仕入分類, 
                    string 仕入事業所コード, 
                    string 仕入担当者コード, 
                    global::System.Nullable<short> 仕入切捨区分, 
                    global::System.Nullable<short> 仕入税区分, 
                    global::System.Nullable<int> 入金番号, 
                    bool チェック, 
                    bool 入金チェック, 
                    string 回収摘要, 
                    bool 検収チェック, 
                    bool 完了フラグ, 
                    global::System.Nullable<short> WS_ID, 
                    bool 発行済フラグ, 
                    bool 受注更新フラグ, 
                    bool 出荷更新フラグ, 
                    bool 得意先更新フラグ, 
                    bool 商品更新フラグ, 
                    bool 商品倉庫更新フラグ, 
                    bool 商品取引更新フラグ, 
                    string オペレーターコード, 
                    string 修正オペレーターコード, 
                    global::System.Nullable<int> 受注行, 
                    global::System.Nullable<global::System.DateTime> 処理月日, 
                    global::System.Nullable<int> 管理年月, 
                    global::System.Nullable<short> 一括消費税締日, 
                    global::System.Nullable<int> 発行済INDEX, 
                    global::System.Nullable<int> 受注行番号, 
                    global::System.Nullable<int> 売上行番号, 
                    global::System.Nullable<decimal> 定価, 
                    global::System.Nullable<decimal> 納品掛率, 
                    global::System.Nullable<decimal> 原価掛率, 
                    global::System.Nullable<short> 発注有無区分, 
                    global::System.Nullable<global::System.DateTime> 回答納期, 
                    global::System.Nullable<decimal> 在庫数, 
                    global::System.Nullable<decimal> 受注残数, 
                    global::System.Nullable<decimal> 発注残数, 
                    global::System.Nullable<short> 納品書発行フラグ, 
                    global::System.Nullable<short> 専用伝票発行フラグ, 
                    global::System.Nullable<decimal> 売上累計, 
                    global::System.Nullable<decimal> 受注番号受注残数, 
                    global::System.Nullable<global::System.DateTime> 納品書発行日時, 
                    global::System.Nullable<int> 取引先コード２, 
                    string 社名, 
                    string 店名, 
                    string 部名, 
                    global::System.Nullable<int> 発注区分, 
                    global::System.Nullable<int> 請求月, 
                    string ＥＯＳ区分, 
                    global::System.Nullable<int> 帳票区分, 
                    string 発注単位, 
                    string ＥＯＳ商品コード, 
                    string ＥＯＳ商品名, 
                    string ＥＯＳ規格, 
                    global::System.Nullable<decimal> 表示価格, 
                    global::System.Nullable<decimal> ＥＯＳ棚番, 
                    global::System.Nullable<decimal> ＪＡＮコード, 
                    string メーカー品番, 
                    string 棚番, 
                    string メーカー名, 
                    global::System.Nullable<int> 店コード, 
                    global::System.Nullable<int> 部コード, 
                    string エラー区分, 
                    global::System.Nullable<int> 更新ビット, 
                    string 商品番号, 
                    global::System.Nullable<int> 社コード, 
                    global::System.Nullable<int> 店コードＢ, 
                    global::System.Nullable<int> 直送区分, 
                    global::System.Nullable<int> 客注区分, 
                    global::System.Nullable<int> 経費区分, 
                    global::System.Nullable<int> 返品区分, 
                    global::System.Nullable<decimal> 本部原価単価, 
                    global::System.Nullable<decimal> 本部原価金額, 
                    global::System.Nullable<decimal> 納入単価, 
                    global::System.Nullable<decimal> 店舗売価, 
                    string 大分類コード, 
                    string 店舗備考, 
                    string 仕入先備考, 
                    global::System.Nullable<int> 登録番号, 
                    global::System.Nullable<int> ドラスタ発注番号, 
                    string 客注番号, 
                    global::System.Nullable<short> ドラスタ区分, 
                    global::System.Nullable<short> 欠品理由, 
                    int Original_売上連番, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    global::System.Nullable<short> Original_入力区分, 
                    global::System.Nullable<int> Original_処理番号, 
                    bool Original_エラーフラグ, 
                    global::System.Nullable<int> Original_受発注行数, 
                    global::System.Nullable<int> Original_受注連番, 
                    global::System.Nullable<int> Original_出荷番号, 
                    global::System.Nullable<int> Original_出荷連番, 
                    global::System.Nullable<int> Original_発注番号, 
                    global::System.Nullable<int> Original_発注連番, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    global::System.Nullable<global::System.DateTime> Original_売上日, 
                    global::System.Nullable<global::System.DateTime> Original_納入日, 
                    global::System.Nullable<global::System.DateTime> Original_受注日, 
                    global::System.Nullable<global::System.DateTime> Original_納期, 
                    global::System.Nullable<global::System.DateTime> Original_発注納期, 
                    global::System.Nullable<short> Original_処理区, 
                    global::System.Nullable<short> Original_売上区分コード, 
                    short Original_システム区分, 
                    global::System.Nullable<short> Original_取引区分, 
                    global::System.Nullable<short> Original_請求月区分コード, 
                    string Original_得意先コード, 
                    string Original_得名, 
                    string Original_事業所コード, 
                    global::System.Nullable<short> Original_ランク, 
                    string Original_部課コード, 
                    string Original_担当者コード, 
                    string Original_代理店コード, 
                    string Original_代名, 
                    string Original_納入先コード, 
                    string Original_納名, 
                    string Original_取引先コード, 
                    string Original_取引先名, 
                    string Original_請求先コード, 
                    global::System.Nullable<short> Original_売上切捨区分, 
                    global::System.Nullable<short> Original_売上税区分, 
                    string Original_伝票摘要, 
                    string Original_商品コード, 
                    string Original_商名, 
                    string Original_規格, 
                    string Original_形式寸法, 
                    string Original_材質, 
                    global::System.Nullable<short> Original_分類, 
                    bool Original_在庫管理区分, 
                    string Original_品種コード, 
                    string Original_メーカーコード, 
                    global::System.Nullable<decimal> Original_入数, 
                    global::System.Nullable<short> Original_単位コード, 
                    string Original_倉庫コード, 
                    global::System.Nullable<decimal> Original_ケース数, 
                    global::System.Nullable<decimal> Original_数量, 
                    global::System.Nullable<decimal> Original_売上単価, 
                    global::System.Nullable<decimal> Original_売上金額, 
                    global::System.Nullable<decimal> Original_税抜売上金額, 
                    global::System.Nullable<decimal> Original_原価単価, 
                    global::System.Nullable<decimal> Original_原価金額, 
                    global::System.Nullable<decimal> Original_粗利, 
                    global::System.Nullable<decimal> Original_消費税, 
                    global::System.Nullable<decimal> Original_税抜仕入金額, 
                    global::System.Nullable<decimal> Original_仕入消費税, 
                    global::System.Nullable<short> Original_売上返品値引理由区分, 
                    global::System.Nullable<short> Original_外内税区分, 
                    global::System.Nullable<decimal> Original_消費税率, 
                    global::System.Nullable<decimal> Original_新消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    string Original_明細摘要, 
                    global::System.Nullable<int> Original_受注番号, 
                    string Original_相手先注文番号, 
                    string Original_自社受付番号, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    string Original_仕入先コード, 
                    string Original_仕名, 
                    global::System.Nullable<short> Original_仕入分類, 
                    string Original_仕入事業所コード, 
                    string Original_仕入担当者コード, 
                    global::System.Nullable<short> Original_仕入切捨区分, 
                    global::System.Nullable<short> Original_仕入税区分, 
                    global::System.Nullable<int> Original_入金番号, 
                    bool Original_チェック, 
                    bool Original_入金チェック, 
                    string Original_回収摘要, 
                    bool Original_検収チェック, 
                    bool Original_完了フラグ, 
                    global::System.Nullable<short> Original_WS_ID, 
                    bool Original_発行済フラグ, 
                    bool Original_受注更新フラグ, 
                    bool Original_出荷更新フラグ, 
                    bool Original_得意先更新フラグ, 
                    bool Original_商品更新フラグ, 
                    bool Original_商品倉庫更新フラグ, 
                    bool Original_商品取引更新フラグ, 
                    string Original_オペレーターコード, 
                    string Original_修正オペレーターコード, 
                    global::System.Nullable<int> Original_受注行, 
                    global::System.Nullable<global::System.DateTime> Original_処理月日, 
                    global::System.Nullable<int> Original_管理年月, 
                    global::System.Nullable<short> Original_一括消費税締日, 
                    global::System.Nullable<int> Original_発行済INDEX, 
                    global::System.Nullable<int> Original_受注行番号, 
                    global::System.Nullable<int> Original_売上行番号, 
                    global::System.Nullable<decimal> Original_定価, 
                    global::System.Nullable<decimal> Original_納品掛率, 
                    global::System.Nullable<decimal> Original_原価掛率, 
                    global::System.Nullable<short> Original_発注有無区分, 
                    global::System.Nullable<global::System.DateTime> Original_回答納期, 
                    global::System.Nullable<decimal> Original_在庫数, 
                    global::System.Nullable<decimal> Original_受注残数, 
                    global::System.Nullable<decimal> Original_発注残数, 
                    global::System.Nullable<short> Original_納品書発行フラグ, 
                    global::System.Nullable<short> Original_専用伝票発行フラグ, 
                    global::System.Nullable<decimal> Original_売上累計, 
                    global::System.Nullable<decimal> Original_受注番号受注残数, 
                    global::System.Nullable<global::System.DateTime> Original_納品書発行日時, 
                    global::System.Nullable<int> Original_取引先コード２, 
                    string Original_社名, 
                    string Original_店名, 
                    string Original_部名, 
                    global::System.Nullable<int> Original_発注区分, 
                    global::System.Nullable<int> Original_請求月, 
                    string Original_ＥＯＳ区分, 
                    global::System.Nullable<int> Original_帳票区分, 
                    string Original_発注単位, 
                    string Original_ＥＯＳ商品コード, 
                    string Original_ＥＯＳ商品名, 
                    string Original_ＥＯＳ規格, 
                    global::System.Nullable<decimal> Original_表示価格, 
                    global::System.Nullable<decimal> Original_ＥＯＳ棚番, 
                    global::System.Nullable<decimal> Original_ＪＡＮコード, 
                    string Original_メーカー品番, 
                    string Original_棚番, 
                    string Original_メーカー名, 
                    global::System.Nullable<int> Original_店コード, 
                    global::System.Nullable<int> Original_部コード, 
                    string Original_エラー区分, 
                    global::System.Nullable<int> Original_更新ビット, 
                    string Original_商品番号, 
                    global::System.Nullable<int> Original_社コード, 
                    global::System.Nullable<int> Original_店コードＢ, 
                    global::System.Nullable<int> Original_直送区分, 
                    global::System.Nullable<int> Original_客注区分, 
                    global::System.Nullable<int> Original_経費区分, 
                    global::System.Nullable<int> Original_返品区分, 
                    global::System.Nullable<decimal> Original_本部原価単価, 
                    global::System.Nullable<decimal> Original_本部原価金額, 
                    global::System.Nullable<decimal> Original_納入単価, 
                    global::System.Nullable<decimal> Original_店舗売価, 
                    string Original_大分類コード, 
                    string Original_店舗備考, 
                    string Original_仕入先備考, 
                    global::System.Nullable<int> Original_登録番号, 
                    global::System.Nullable<int> Original_ドラスタ発注番号, 
                    string Original_客注番号, 
                    global::System.Nullable<short> Original_ドラスタ区分, 
                    global::System.Nullable<short> Original_欠品理由, 
                    int 売上連番) {
            if ((本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(処理コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((入力区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(入力区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(エラーフラグ));
            if ((受発注行数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(受発注行数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((受注連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(受注連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((出荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(出荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((出荷連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(出荷連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((発注連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(発注連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((売上日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(売上日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((納入日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(納入日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((受注日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(受注日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((発注納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(発注納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((処理区.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((short)(処理区.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((売上区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((short)(売上区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((short)(システム区分));
            if ((取引区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((short)(取引区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((請求月区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((short)(請求月区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((得意先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(得意先コード));
            }
            if ((得名 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(得名));
            }
            if ((事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(事業所コード));
            }
            if ((ランク.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((short)(ランク.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((部課コード == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(部課コード));
            }
            if ((担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(担当者コード));
            }
            if ((代理店コード == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(代理店コード));
            }
            if ((代名 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(代名));
            }
            if ((納入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(納入先コード));
            }
            if ((納名 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(納名));
            }
            if ((取引先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(取引先コード));
            }
            if ((取引先名 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(取引先名));
            }
            if ((請求先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(請求先コード));
            }
            if ((売上切捨区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((short)(売上切捨区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((売上税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((short)(売上税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((伝票摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(伝票摘要));
            }
            if ((商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(商品コード));
            }
            if ((商名 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(商名));
            }
            if ((規格 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(規格));
            }
            if ((形式寸法 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(形式寸法));
            }
            if ((材質 == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(材質));
            }
            if ((分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((short)(分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((bool)(在庫管理区分));
            if ((品種コード == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(品種コード));
            }
            if ((メーカーコード == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(メーカーコード));
            }
            if ((入数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(入数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((単位コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((short)(単位コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((倉庫コード == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(倉庫コード));
            }
            if ((ケース数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(ケース数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((数量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(数量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((売上単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(売上単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((売上金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(売上金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((税抜売上金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(税抜売上金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((原価単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(原価単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((原価金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((decimal)(原価金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((粗利.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(粗利.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((消費税.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(消費税.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((税抜仕入金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(税抜仕入金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((仕入消費税.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(仕入消費税.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((売上返品値引理由区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((short)(売上返品値引理由区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((外内税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((short)(外内税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((新消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((decimal)(新消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((新消費税適用.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTime)(新消費税適用.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((明細摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(明細摘要));
            }
            if ((受注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(受注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((相手先注文番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(相手先注文番号));
            }
            if ((自社受付番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(自社受付番号));
            }
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((仕入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(仕入先コード));
            }
            if ((仕名 == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(仕名));
            }
            if ((仕入分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((short)(仕入分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((仕入事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(仕入事業所コード));
            }
            if ((仕入担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(仕入担当者コード));
            }
            if ((仕入切捨区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((short)(仕入切捨区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((仕入税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((short)(仕入税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((入金番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(入金番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((bool)(チェック));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((bool)(入金チェック));
            if ((回収摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(回収摘要));
            }
            this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(検収チェック));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((bool)(完了フラグ));
            if ((WS_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((short)(WS_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[86].Value = ((bool)(発行済フラグ));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((bool)(受注更新フラグ));
            this.Adapter.UpdateCommand.Parameters[88].Value = ((bool)(出荷更新フラグ));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((bool)(得意先更新フラグ));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((bool)(商品更新フラグ));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((bool)(商品倉庫更新フラグ));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((bool)(商品取引更新フラグ));
            if ((オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(オペレーターコード));
            }
            if ((修正オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(修正オペレーターコード));
            }
            if ((受注行.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((int)(受注行.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((処理月日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((System.DateTime)(処理月日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((管理年月.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((int)(管理年月.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((一括消費税締日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((short)(一括消費税締日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((発行済INDEX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(発行済INDEX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((受注行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((int)(受注行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((売上行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(売上行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((定価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((decimal)(定価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((納品掛率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((decimal)(納品掛率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((原価掛率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((decimal)(原価掛率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((発注有無区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((short)(発注有無区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((回答納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((System.DateTime)(回答納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((在庫数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((decimal)(在庫数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((受注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((decimal)(受注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((発注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((decimal)(発注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((納品書発行フラグ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((short)(納品書発行フラグ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((専用伝票発行フラグ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((short)(専用伝票発行フラグ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((売上累計.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((decimal)(売上累計.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((受注番号受注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((decimal)(受注番号受注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((納品書発行日時.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((System.DateTime)(納品書発行日時.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((取引先コード２.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((int)(取引先コード２.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((社名 == null)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(社名));
            }
            if ((店名 == null)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(店名));
            }
            if ((部名 == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(部名));
            }
            if ((発注区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((int)(発注区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((請求月.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((int)(請求月.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((ＥＯＳ区分 == null)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(ＥＯＳ区分));
            }
            if ((帳票区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((int)(帳票区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((発注単位 == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(発注単位));
            }
            if ((ＥＯＳ商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(ＥＯＳ商品コード));
            }
            if ((ＥＯＳ商品名 == null)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(ＥＯＳ商品名));
            }
            if ((ＥＯＳ規格 == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(ＥＯＳ規格));
            }
            if ((表示価格.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((decimal)(表示価格.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((ＥＯＳ棚番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((decimal)(ＥＯＳ棚番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((ＪＡＮコード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((decimal)(ＪＡＮコード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((メーカー品番 == null)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((string)(メーカー品番));
            }
            if ((棚番 == null)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(棚番));
            }
            if ((メーカー名 == null)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((string)(メーカー名));
            }
            if ((店コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((int)(店コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((部コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((int)(部コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((エラー区分 == null)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(エラー区分));
            }
            if ((更新ビット.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((int)(更新ビット.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((商品番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((string)(商品番号));
            }
            if ((社コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((int)(社コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((店コードＢ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((int)(店コードＢ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((直送区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((int)(直送区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((客注区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((int)(客注区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((経費区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((int)(経費区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((返品区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((int)(返品区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((本部原価単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((decimal)(本部原価単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((本部原価金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((decimal)(本部原価金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((納入単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((decimal)(納入単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((店舗売価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((decimal)(店舗売価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((大分類コード == null)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((string)(大分類コード));
            }
            if ((店舗備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((string)(店舗備考));
            }
            if ((仕入先備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(仕入先備考));
            }
            if ((登録番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((int)(登録番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((ドラスタ発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((int)(ドラスタ発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((客注番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((string)(客注番号));
            }
            if ((ドラスタ区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((short)(ドラスタ区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            if ((欠品理由.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((short)(欠品理由.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[156].Value = ((int)(Original_売上連番));
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_処理コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((int)(Original_処理コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            if ((Original_入力区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((short)(Original_入力区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            if ((Original_処理番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[164].Value = ((int)(Original_処理番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[165].Value = ((bool)(Original_エラーフラグ));
            if ((Original_受発注行数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((int)(Original_受発注行数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_受注連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((int)(Original_受注連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((int)(Original_出荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((int)(Original_出荷連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((int)(Original_発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_発注連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((int)(Original_発注連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_売上伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((int)(Original_売上伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((System.DateTime)(Original_処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_売上日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((System.DateTime)(Original_売上日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            if ((Original_納入日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((System.DateTime)(Original_納入日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            if ((Original_受注日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((System.DateTime)(Original_受注日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            if ((Original_納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((System.DateTime)(Original_納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            if ((Original_発注納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((System.DateTime)(Original_発注納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            if ((Original_処理区.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((short)(Original_処理区.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            if ((Original_売上区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((short)(Original_売上区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[196].Value = ((short)(Original_システム区分));
            if ((Original_取引区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[198].Value = ((short)(Original_取引区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            if ((Original_請求月区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[200].Value = ((short)(Original_請求月区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            if ((Original_得意先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[202].Value = ((string)(Original_得意先コード));
            }
            if ((Original_得名 == null)) {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[204].Value = ((string)(Original_得名));
            }
            if ((Original_事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[206].Value = ((string)(Original_事業所コード));
            }
            if ((Original_ランク.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[208].Value = ((short)(Original_ランク.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            if ((Original_部課コード == null)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[210].Value = ((string)(Original_部課コード));
            }
            if ((Original_担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[212].Value = ((string)(Original_担当者コード));
            }
            if ((Original_代理店コード == null)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[214].Value = ((string)(Original_代理店コード));
            }
            if ((Original_代名 == null)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((string)(Original_代名));
            }
            if ((Original_納入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((string)(Original_納入先コード));
            }
            if ((Original_納名 == null)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[220].Value = ((string)(Original_納名));
            }
            if ((Original_取引先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[222].Value = ((string)(Original_取引先コード));
            }
            if ((Original_取引先名 == null)) {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[224].Value = ((string)(Original_取引先名));
            }
            if ((Original_請求先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[226].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[226].Value = ((string)(Original_請求先コード));
            }
            if ((Original_売上切捨区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[228].Value = ((short)(Original_売上切捨区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[228].Value = global::System.DBNull.Value;
            }
            if ((Original_売上税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[230].Value = ((short)(Original_売上税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[230].Value = global::System.DBNull.Value;
            }
            if ((Original_伝票摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[232].Value = ((string)(Original_伝票摘要));
            }
            if ((Original_商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[234].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[234].Value = ((string)(Original_商品コード));
            }
            if ((Original_商名 == null)) {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[236].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[236].Value = ((string)(Original_商名));
            }
            if ((Original_規格 == null)) {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[238].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[238].Value = ((string)(Original_規格));
            }
            if ((Original_形式寸法 == null)) {
                this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[240].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[240].Value = ((string)(Original_形式寸法));
            }
            if ((Original_材質 == null)) {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[242].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[242].Value = ((string)(Original_材質));
            }
            if ((Original_分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[243].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[244].Value = ((short)(Original_分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[243].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[244].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[245].Value = ((bool)(Original_在庫管理区分));
            if ((Original_品種コード == null)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((string)(Original_品種コード));
            }
            if ((Original_メーカーコード == null)) {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[249].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[249].Value = ((string)(Original_メーカーコード));
            }
            if ((Original_入数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[251].Value = ((decimal)(Original_入数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[251].Value = global::System.DBNull.Value;
            }
            if ((Original_単位コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[253].Value = ((short)(Original_単位コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[253].Value = global::System.DBNull.Value;
            }
            if ((Original_倉庫コード == null)) {
                this.Adapter.UpdateCommand.Parameters[254].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[255].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[254].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[255].Value = ((string)(Original_倉庫コード));
            }
            if ((Original_ケース数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[257].Value = ((decimal)(Original_ケース数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[257].Value = global::System.DBNull.Value;
            }
            if ((Original_数量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[259].Value = ((decimal)(Original_数量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[259].Value = global::System.DBNull.Value;
            }
            if ((Original_売上単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[261].Value = ((decimal)(Original_売上単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[261].Value = global::System.DBNull.Value;
            }
            if ((Original_売上金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[263].Value = ((decimal)(Original_売上金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[263].Value = global::System.DBNull.Value;
            }
            if ((Original_税抜売上金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[265].Value = ((decimal)(Original_税抜売上金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[265].Value = global::System.DBNull.Value;
            }
            if ((Original_原価単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[267].Value = ((decimal)(Original_原価単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[267].Value = global::System.DBNull.Value;
            }
            if ((Original_原価金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[269].Value = ((decimal)(Original_原価金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[269].Value = global::System.DBNull.Value;
            }
            if ((Original_粗利.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[270].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[271].Value = ((decimal)(Original_粗利.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[270].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[271].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[272].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[273].Value = ((decimal)(Original_消費税.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[272].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[273].Value = global::System.DBNull.Value;
            }
            if ((Original_税抜仕入金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[274].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[275].Value = ((decimal)(Original_税抜仕入金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[274].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[275].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入消費税.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[277].Value = ((decimal)(Original_仕入消費税.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[277].Value = global::System.DBNull.Value;
            }
            if ((Original_売上返品値引理由区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[278].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[279].Value = ((short)(Original_売上返品値引理由区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[278].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[279].Value = global::System.DBNull.Value;
            }
            if ((Original_外内税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[280].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[281].Value = ((short)(Original_外内税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[280].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[281].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[282].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[283].Value = ((decimal)(Original_消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[282].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[283].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[284].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[285].Value = ((decimal)(Original_新消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[284].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[285].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税適用.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[286].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[287].Value = ((System.DateTime)(Original_新消費税適用.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[286].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[287].Value = global::System.DBNull.Value;
            }
            if ((Original_明細摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[288].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[289].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[288].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[289].Value = ((string)(Original_明細摘要));
            }
            if ((Original_受注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[290].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[291].Value = ((int)(Original_受注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[290].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[291].Value = global::System.DBNull.Value;
            }
            if ((Original_相手先注文番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[292].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[293].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[292].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[293].Value = ((string)(Original_相手先注文番号));
            }
            if ((Original_自社受付番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[294].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[295].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[294].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[295].Value = ((string)(Original_自社受付番号));
            }
            if ((Original_仕入伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[296].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[297].Value = ((int)(Original_仕入伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[296].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[297].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[298].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[299].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[298].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[299].Value = ((string)(Original_仕入先コード));
            }
            if ((Original_仕名 == null)) {
                this.Adapter.UpdateCommand.Parameters[300].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[301].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[300].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[301].Value = ((string)(Original_仕名));
            }
            if ((Original_仕入分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[302].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[303].Value = ((short)(Original_仕入分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[302].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[303].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[304].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[305].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[304].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[305].Value = ((string)(Original_仕入事業所コード));
            }
            if ((Original_仕入担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[306].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[307].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[306].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[307].Value = ((string)(Original_仕入担当者コード));
            }
            if ((Original_仕入切捨区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[308].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[309].Value = ((short)(Original_仕入切捨区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[308].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[309].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[310].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[311].Value = ((short)(Original_仕入税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[310].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[311].Value = global::System.DBNull.Value;
            }
            if ((Original_入金番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[312].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[313].Value = ((int)(Original_入金番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[312].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[313].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[314].Value = ((bool)(Original_チェック));
            this.Adapter.UpdateCommand.Parameters[315].Value = ((bool)(Original_入金チェック));
            if ((Original_回収摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[316].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[317].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[316].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[317].Value = ((string)(Original_回収摘要));
            }
            this.Adapter.UpdateCommand.Parameters[318].Value = ((bool)(Original_検収チェック));
            this.Adapter.UpdateCommand.Parameters[319].Value = ((bool)(Original_完了フラグ));
            if ((Original_WS_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[320].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[321].Value = ((short)(Original_WS_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[320].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[321].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[322].Value = ((bool)(Original_発行済フラグ));
            this.Adapter.UpdateCommand.Parameters[323].Value = ((bool)(Original_受注更新フラグ));
            this.Adapter.UpdateCommand.Parameters[324].Value = ((bool)(Original_出荷更新フラグ));
            this.Adapter.UpdateCommand.Parameters[325].Value = ((bool)(Original_得意先更新フラグ));
            this.Adapter.UpdateCommand.Parameters[326].Value = ((bool)(Original_商品更新フラグ));
            this.Adapter.UpdateCommand.Parameters[327].Value = ((bool)(Original_商品倉庫更新フラグ));
            this.Adapter.UpdateCommand.Parameters[328].Value = ((bool)(Original_商品取引更新フラグ));
            if ((Original_オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[329].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[330].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[329].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[330].Value = ((string)(Original_オペレーターコード));
            }
            if ((Original_修正オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[331].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[332].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[331].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[332].Value = ((string)(Original_修正オペレーターコード));
            }
            if ((Original_受注行.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[333].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[334].Value = ((int)(Original_受注行.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[333].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[334].Value = global::System.DBNull.Value;
            }
            if ((Original_処理月日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[335].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[336].Value = ((System.DateTime)(Original_処理月日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[335].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[336].Value = global::System.DBNull.Value;
            }
            if ((Original_管理年月.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[337].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[338].Value = ((int)(Original_管理年月.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[337].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[338].Value = global::System.DBNull.Value;
            }
            if ((Original_一括消費税締日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[339].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[340].Value = ((short)(Original_一括消費税締日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[339].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[340].Value = global::System.DBNull.Value;
            }
            if ((Original_発行済INDEX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[341].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[342].Value = ((int)(Original_発行済INDEX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[341].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[342].Value = global::System.DBNull.Value;
            }
            if ((Original_受注行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[343].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[344].Value = ((int)(Original_受注行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[343].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[344].Value = global::System.DBNull.Value;
            }
            if ((Original_売上行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[345].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[346].Value = ((int)(Original_売上行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[345].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[346].Value = global::System.DBNull.Value;
            }
            if ((Original_定価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[347].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[348].Value = ((decimal)(Original_定価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[347].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[348].Value = global::System.DBNull.Value;
            }
            if ((Original_納品掛率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[349].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[350].Value = ((decimal)(Original_納品掛率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[349].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[350].Value = global::System.DBNull.Value;
            }
            if ((Original_原価掛率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[351].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[352].Value = ((decimal)(Original_原価掛率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[351].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[352].Value = global::System.DBNull.Value;
            }
            if ((Original_発注有無区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[353].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[354].Value = ((short)(Original_発注有無区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[353].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[354].Value = global::System.DBNull.Value;
            }
            if ((Original_回答納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[355].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[356].Value = ((System.DateTime)(Original_回答納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[355].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[356].Value = global::System.DBNull.Value;
            }
            if ((Original_在庫数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[357].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[358].Value = ((decimal)(Original_在庫数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[357].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[358].Value = global::System.DBNull.Value;
            }
            if ((Original_受注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[359].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[360].Value = ((decimal)(Original_受注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[359].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[360].Value = global::System.DBNull.Value;
            }
            if ((Original_発注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[361].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[362].Value = ((decimal)(Original_発注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[361].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[362].Value = global::System.DBNull.Value;
            }
            if ((Original_納品書発行フラグ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[363].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[364].Value = ((short)(Original_納品書発行フラグ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[363].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[364].Value = global::System.DBNull.Value;
            }
            if ((Original_専用伝票発行フラグ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[365].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[366].Value = ((short)(Original_専用伝票発行フラグ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[365].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[366].Value = global::System.DBNull.Value;
            }
            if ((Original_売上累計.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[367].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[368].Value = ((decimal)(Original_売上累計.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[367].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[368].Value = global::System.DBNull.Value;
            }
            if ((Original_受注番号受注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[369].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[370].Value = ((decimal)(Original_受注番号受注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[369].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[370].Value = global::System.DBNull.Value;
            }
            if ((Original_納品書発行日時.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[371].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[372].Value = ((System.DateTime)(Original_納品書発行日時.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[371].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[372].Value = global::System.DBNull.Value;
            }
            if ((Original_取引先コード２.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[373].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[374].Value = ((int)(Original_取引先コード２.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[373].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[374].Value = global::System.DBNull.Value;
            }
            if ((Original_社名 == null)) {
                this.Adapter.UpdateCommand.Parameters[375].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[376].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[375].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[376].Value = ((string)(Original_社名));
            }
            if ((Original_店名 == null)) {
                this.Adapter.UpdateCommand.Parameters[377].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[378].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[377].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[378].Value = ((string)(Original_店名));
            }
            if ((Original_部名 == null)) {
                this.Adapter.UpdateCommand.Parameters[379].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[380].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[379].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[380].Value = ((string)(Original_部名));
            }
            if ((Original_発注区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[381].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[382].Value = ((int)(Original_発注区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[381].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[382].Value = global::System.DBNull.Value;
            }
            if ((Original_請求月.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[383].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[384].Value = ((int)(Original_請求月.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[383].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[384].Value = global::System.DBNull.Value;
            }
            if ((Original_ＥＯＳ区分 == null)) {
                this.Adapter.UpdateCommand.Parameters[385].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[386].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[385].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[386].Value = ((string)(Original_ＥＯＳ区分));
            }
            if ((Original_帳票区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[387].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[388].Value = ((int)(Original_帳票区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[387].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[388].Value = global::System.DBNull.Value;
            }
            if ((Original_発注単位 == null)) {
                this.Adapter.UpdateCommand.Parameters[389].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[390].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[389].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[390].Value = ((string)(Original_発注単位));
            }
            if ((Original_ＥＯＳ商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[391].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[392].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[391].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[392].Value = ((string)(Original_ＥＯＳ商品コード));
            }
            if ((Original_ＥＯＳ商品名 == null)) {
                this.Adapter.UpdateCommand.Parameters[393].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[394].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[393].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[394].Value = ((string)(Original_ＥＯＳ商品名));
            }
            if ((Original_ＥＯＳ規格 == null)) {
                this.Adapter.UpdateCommand.Parameters[395].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[396].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[395].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[396].Value = ((string)(Original_ＥＯＳ規格));
            }
            if ((Original_表示価格.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[397].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[398].Value = ((decimal)(Original_表示価格.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[397].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[398].Value = global::System.DBNull.Value;
            }
            if ((Original_ＥＯＳ棚番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[399].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[400].Value = ((decimal)(Original_ＥＯＳ棚番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[399].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[400].Value = global::System.DBNull.Value;
            }
            if ((Original_ＪＡＮコード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[401].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[402].Value = ((decimal)(Original_ＪＡＮコード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[401].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[402].Value = global::System.DBNull.Value;
            }
            if ((Original_メーカー品番 == null)) {
                this.Adapter.UpdateCommand.Parameters[403].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[404].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[403].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[404].Value = ((string)(Original_メーカー品番));
            }
            if ((Original_棚番 == null)) {
                this.Adapter.UpdateCommand.Parameters[405].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[406].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[405].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[406].Value = ((string)(Original_棚番));
            }
            if ((Original_メーカー名 == null)) {
                this.Adapter.UpdateCommand.Parameters[407].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[408].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[407].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[408].Value = ((string)(Original_メーカー名));
            }
            if ((Original_店コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[409].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[410].Value = ((int)(Original_店コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[409].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[410].Value = global::System.DBNull.Value;
            }
            if ((Original_部コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[411].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[412].Value = ((int)(Original_部コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[411].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[412].Value = global::System.DBNull.Value;
            }
            if ((Original_エラー区分 == null)) {
                this.Adapter.UpdateCommand.Parameters[413].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[414].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[413].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[414].Value = ((string)(Original_エラー区分));
            }
            if ((Original_更新ビット.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[415].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[416].Value = ((int)(Original_更新ビット.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[415].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[416].Value = global::System.DBNull.Value;
            }
            if ((Original_商品番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[417].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[418].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[417].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[418].Value = ((string)(Original_商品番号));
            }
            if ((Original_社コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[419].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[420].Value = ((int)(Original_社コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[419].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[420].Value = global::System.DBNull.Value;
            }
            if ((Original_店コードＢ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[421].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[422].Value = ((int)(Original_店コードＢ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[421].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[422].Value = global::System.DBNull.Value;
            }
            if ((Original_直送区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[423].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[424].Value = ((int)(Original_直送区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[423].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[424].Value = global::System.DBNull.Value;
            }
            if ((Original_客注区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[425].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[426].Value = ((int)(Original_客注区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[425].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[426].Value = global::System.DBNull.Value;
            }
            if ((Original_経費区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[427].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[428].Value = ((int)(Original_経費区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[427].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[428].Value = global::System.DBNull.Value;
            }
            if ((Original_返品区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[429].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[430].Value = ((int)(Original_返品区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[429].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[430].Value = global::System.DBNull.Value;
            }
            if ((Original_本部原価単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[431].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[432].Value = ((decimal)(Original_本部原価単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[431].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[432].Value = global::System.DBNull.Value;
            }
            if ((Original_本部原価金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[433].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[434].Value = ((decimal)(Original_本部原価金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[433].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[434].Value = global::System.DBNull.Value;
            }
            if ((Original_納入単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[435].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[436].Value = ((decimal)(Original_納入単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[435].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[436].Value = global::System.DBNull.Value;
            }
            if ((Original_店舗売価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[437].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[438].Value = ((decimal)(Original_店舗売価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[437].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[438].Value = global::System.DBNull.Value;
            }
            if ((Original_大分類コード == null)) {
                this.Adapter.UpdateCommand.Parameters[439].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[440].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[439].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[440].Value = ((string)(Original_大分類コード));
            }
            if ((Original_店舗備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[441].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[442].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[441].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[442].Value = ((string)(Original_店舗備考));
            }
            if ((Original_仕入先備考 == null)) {
                this.Adapter.UpdateCommand.Parameters[443].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[444].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[443].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[444].Value = ((string)(Original_仕入先備考));
            }
            if ((Original_登録番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[445].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[446].Value = ((int)(Original_登録番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[445].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[446].Value = global::System.DBNull.Value;
            }
            if ((Original_ドラスタ発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[447].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[448].Value = ((int)(Original_ドラスタ発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[447].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[448].Value = global::System.DBNull.Value;
            }
            if ((Original_客注番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[449].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[450].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[449].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[450].Value = ((string)(Original_客注番号));
            }
            if ((Original_ドラスタ区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[451].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[452].Value = ((short)(Original_ドラスタ区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[451].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[452].Value = global::System.DBNull.Value;
            }
            if ((Original_欠品理由.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[453].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[454].Value = ((short)(Original_欠品理由.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[453].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[454].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[455].Value = ((int)(売上連番));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    global::System.Nullable<short> 入力区分, 
                    global::System.Nullable<int> 処理番号, 
                    bool エラーフラグ, 
                    global::System.Nullable<int> 受発注行数, 
                    global::System.Nullable<int> 受注連番, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 出荷連番, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 発注連番, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    global::System.Nullable<global::System.DateTime> 売上日, 
                    global::System.Nullable<global::System.DateTime> 納入日, 
                    global::System.Nullable<global::System.DateTime> 受注日, 
                    global::System.Nullable<global::System.DateTime> 納期, 
                    global::System.Nullable<global::System.DateTime> 発注納期, 
                    global::System.Nullable<short> 処理区, 
                    global::System.Nullable<short> 売上区分コード, 
                    short システム区分, 
                    global::System.Nullable<short> 取引区分, 
                    global::System.Nullable<short> 請求月区分コード, 
                    string 得意先コード, 
                    string 得名, 
                    string 事業所コード, 
                    global::System.Nullable<short> ランク, 
                    string 部課コード, 
                    string 担当者コード, 
                    string 代理店コード, 
                    string 代名, 
                    string 納入先コード, 
                    string 納名, 
                    string 取引先コード, 
                    string 取引先名, 
                    string 請求先コード, 
                    global::System.Nullable<short> 売上切捨区分, 
                    global::System.Nullable<short> 売上税区分, 
                    string 伝票摘要, 
                    string 商品コード, 
                    string 商名, 
                    string 規格, 
                    string 形式寸法, 
                    string 材質, 
                    global::System.Nullable<short> 分類, 
                    bool 在庫管理区分, 
                    string 品種コード, 
                    string メーカーコード, 
                    global::System.Nullable<decimal> 入数, 
                    global::System.Nullable<short> 単位コード, 
                    string 倉庫コード, 
                    global::System.Nullable<decimal> ケース数, 
                    global::System.Nullable<decimal> 数量, 
                    global::System.Nullable<decimal> 売上単価, 
                    global::System.Nullable<decimal> 売上金額, 
                    global::System.Nullable<decimal> 税抜売上金額, 
                    global::System.Nullable<decimal> 原価単価, 
                    global::System.Nullable<decimal> 原価金額, 
                    global::System.Nullable<decimal> 粗利, 
                    global::System.Nullable<decimal> 消費税, 
                    global::System.Nullable<decimal> 税抜仕入金額, 
                    global::System.Nullable<decimal> 仕入消費税, 
                    global::System.Nullable<short> 売上返品値引理由区分, 
                    global::System.Nullable<short> 外内税区分, 
                    global::System.Nullable<decimal> 消費税率, 
                    global::System.Nullable<decimal> 新消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    string 明細摘要, 
                    global::System.Nullable<int> 受注番号, 
                    string 相手先注文番号, 
                    string 自社受付番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    string 仕入先コード, 
                    string 仕名, 
                    global::System.Nullable<short> 仕入分類, 
                    string 仕入事業所コード, 
                    string 仕入担当者コード, 
                    global::System.Nullable<short> 仕入切捨区分, 
                    global::System.Nullable<short> 仕入税区分, 
                    global::System.Nullable<int> 入金番号, 
                    bool チェック, 
                    bool 入金チェック, 
                    string 回収摘要, 
                    bool 検収チェック, 
                    bool 完了フラグ, 
                    global::System.Nullable<short> WS_ID, 
                    bool 発行済フラグ, 
                    bool 受注更新フラグ, 
                    bool 出荷更新フラグ, 
                    bool 得意先更新フラグ, 
                    bool 商品更新フラグ, 
                    bool 商品倉庫更新フラグ, 
                    bool 商品取引更新フラグ, 
                    string オペレーターコード, 
                    string 修正オペレーターコード, 
                    global::System.Nullable<int> 受注行, 
                    global::System.Nullable<global::System.DateTime> 処理月日, 
                    global::System.Nullable<int> 管理年月, 
                    global::System.Nullable<short> 一括消費税締日, 
                    global::System.Nullable<int> 発行済INDEX, 
                    global::System.Nullable<int> 受注行番号, 
                    global::System.Nullable<int> 売上行番号, 
                    global::System.Nullable<decimal> 定価, 
                    global::System.Nullable<decimal> 納品掛率, 
                    global::System.Nullable<decimal> 原価掛率, 
                    global::System.Nullable<short> 発注有無区分, 
                    global::System.Nullable<global::System.DateTime> 回答納期, 
                    global::System.Nullable<decimal> 在庫数, 
                    global::System.Nullable<decimal> 受注残数, 
                    global::System.Nullable<decimal> 発注残数, 
                    global::System.Nullable<short> 納品書発行フラグ, 
                    global::System.Nullable<short> 専用伝票発行フラグ, 
                    global::System.Nullable<decimal> 売上累計, 
                    global::System.Nullable<decimal> 受注番号受注残数, 
                    global::System.Nullable<global::System.DateTime> 納品書発行日時, 
                    global::System.Nullable<int> 取引先コード２, 
                    string 社名, 
                    string 店名, 
                    string 部名, 
                    global::System.Nullable<int> 発注区分, 
                    global::System.Nullable<int> 請求月, 
                    string ＥＯＳ区分, 
                    global::System.Nullable<int> 帳票区分, 
                    string 発注単位, 
                    string ＥＯＳ商品コード, 
                    string ＥＯＳ商品名, 
                    string ＥＯＳ規格, 
                    global::System.Nullable<decimal> 表示価格, 
                    global::System.Nullable<decimal> ＥＯＳ棚番, 
                    global::System.Nullable<decimal> ＪＡＮコード, 
                    string メーカー品番, 
                    string 棚番, 
                    string メーカー名, 
                    global::System.Nullable<int> 店コード, 
                    global::System.Nullable<int> 部コード, 
                    string エラー区分, 
                    global::System.Nullable<int> 更新ビット, 
                    string 商品番号, 
                    global::System.Nullable<int> 社コード, 
                    global::System.Nullable<int> 店コードＢ, 
                    global::System.Nullable<int> 直送区分, 
                    global::System.Nullable<int> 客注区分, 
                    global::System.Nullable<int> 経費区分, 
                    global::System.Nullable<int> 返品区分, 
                    global::System.Nullable<decimal> 本部原価単価, 
                    global::System.Nullable<decimal> 本部原価金額, 
                    global::System.Nullable<decimal> 納入単価, 
                    global::System.Nullable<decimal> 店舗売価, 
                    string 大分類コード, 
                    string 店舗備考, 
                    string 仕入先備考, 
                    global::System.Nullable<int> 登録番号, 
                    global::System.Nullable<int> ドラスタ発注番号, 
                    string 客注番号, 
                    global::System.Nullable<short> ドラスタ区分, 
                    global::System.Nullable<short> 欠品理由, 
                    int Original_売上連番, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    global::System.Nullable<short> Original_入力区分, 
                    global::System.Nullable<int> Original_処理番号, 
                    bool Original_エラーフラグ, 
                    global::System.Nullable<int> Original_受発注行数, 
                    global::System.Nullable<int> Original_受注連番, 
                    global::System.Nullable<int> Original_出荷番号, 
                    global::System.Nullable<int> Original_出荷連番, 
                    global::System.Nullable<int> Original_発注番号, 
                    global::System.Nullable<int> Original_発注連番, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    global::System.Nullable<global::System.DateTime> Original_売上日, 
                    global::System.Nullable<global::System.DateTime> Original_納入日, 
                    global::System.Nullable<global::System.DateTime> Original_受注日, 
                    global::System.Nullable<global::System.DateTime> Original_納期, 
                    global::System.Nullable<global::System.DateTime> Original_発注納期, 
                    global::System.Nullable<short> Original_処理区, 
                    global::System.Nullable<short> Original_売上区分コード, 
                    short Original_システム区分, 
                    global::System.Nullable<short> Original_取引区分, 
                    global::System.Nullable<short> Original_請求月区分コード, 
                    string Original_得意先コード, 
                    string Original_得名, 
                    string Original_事業所コード, 
                    global::System.Nullable<short> Original_ランク, 
                    string Original_部課コード, 
                    string Original_担当者コード, 
                    string Original_代理店コード, 
                    string Original_代名, 
                    string Original_納入先コード, 
                    string Original_納名, 
                    string Original_取引先コード, 
                    string Original_取引先名, 
                    string Original_請求先コード, 
                    global::System.Nullable<short> Original_売上切捨区分, 
                    global::System.Nullable<short> Original_売上税区分, 
                    string Original_伝票摘要, 
                    string Original_商品コード, 
                    string Original_商名, 
                    string Original_規格, 
                    string Original_形式寸法, 
                    string Original_材質, 
                    global::System.Nullable<short> Original_分類, 
                    bool Original_在庫管理区分, 
                    string Original_品種コード, 
                    string Original_メーカーコード, 
                    global::System.Nullable<decimal> Original_入数, 
                    global::System.Nullable<short> Original_単位コード, 
                    string Original_倉庫コード, 
                    global::System.Nullable<decimal> Original_ケース数, 
                    global::System.Nullable<decimal> Original_数量, 
                    global::System.Nullable<decimal> Original_売上単価, 
                    global::System.Nullable<decimal> Original_売上金額, 
                    global::System.Nullable<decimal> Original_税抜売上金額, 
                    global::System.Nullable<decimal> Original_原価単価, 
                    global::System.Nullable<decimal> Original_原価金額, 
                    global::System.Nullable<decimal> Original_粗利, 
                    global::System.Nullable<decimal> Original_消費税, 
                    global::System.Nullable<decimal> Original_税抜仕入金額, 
                    global::System.Nullable<decimal> Original_仕入消費税, 
                    global::System.Nullable<short> Original_売上返品値引理由区分, 
                    global::System.Nullable<short> Original_外内税区分, 
                    global::System.Nullable<decimal> Original_消費税率, 
                    global::System.Nullable<decimal> Original_新消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    string Original_明細摘要, 
                    global::System.Nullable<int> Original_受注番号, 
                    string Original_相手先注文番号, 
                    string Original_自社受付番号, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    string Original_仕入先コード, 
                    string Original_仕名, 
                    global::System.Nullable<short> Original_仕入分類, 
                    string Original_仕入事業所コード, 
                    string Original_仕入担当者コード, 
                    global::System.Nullable<short> Original_仕入切捨区分, 
                    global::System.Nullable<short> Original_仕入税区分, 
                    global::System.Nullable<int> Original_入金番号, 
                    bool Original_チェック, 
                    bool Original_入金チェック, 
                    string Original_回収摘要, 
                    bool Original_検収チェック, 
                    bool Original_完了フラグ, 
                    global::System.Nullable<short> Original_WS_ID, 
                    bool Original_発行済フラグ, 
                    bool Original_受注更新フラグ, 
                    bool Original_出荷更新フラグ, 
                    bool Original_得意先更新フラグ, 
                    bool Original_商品更新フラグ, 
                    bool Original_商品倉庫更新フラグ, 
                    bool Original_商品取引更新フラグ, 
                    string Original_オペレーターコード, 
                    string Original_修正オペレーターコード, 
                    global::System.Nullable<int> Original_受注行, 
                    global::System.Nullable<global::System.DateTime> Original_処理月日, 
                    global::System.Nullable<int> Original_管理年月, 
                    global::System.Nullable<short> Original_一括消費税締日, 
                    global::System.Nullable<int> Original_発行済INDEX, 
                    global::System.Nullable<int> Original_受注行番号, 
                    global::System.Nullable<int> Original_売上行番号, 
                    global::System.Nullable<decimal> Original_定価, 
                    global::System.Nullable<decimal> Original_納品掛率, 
                    global::System.Nullable<decimal> Original_原価掛率, 
                    global::System.Nullable<short> Original_発注有無区分, 
                    global::System.Nullable<global::System.DateTime> Original_回答納期, 
                    global::System.Nullable<decimal> Original_在庫数, 
                    global::System.Nullable<decimal> Original_受注残数, 
                    global::System.Nullable<decimal> Original_発注残数, 
                    global::System.Nullable<short> Original_納品書発行フラグ, 
                    global::System.Nullable<short> Original_専用伝票発行フラグ, 
                    global::System.Nullable<decimal> Original_売上累計, 
                    global::System.Nullable<decimal> Original_受注番号受注残数, 
                    global::System.Nullable<global::System.DateTime> Original_納品書発行日時, 
                    global::System.Nullable<int> Original_取引先コード２, 
                    string Original_社名, 
                    string Original_店名, 
                    string Original_部名, 
                    global::System.Nullable<int> Original_発注区分, 
                    global::System.Nullable<int> Original_請求月, 
                    string Original_ＥＯＳ区分, 
                    global::System.Nullable<int> Original_帳票区分, 
                    string Original_発注単位, 
                    string Original_ＥＯＳ商品コード, 
                    string Original_ＥＯＳ商品名, 
                    string Original_ＥＯＳ規格, 
                    global::System.Nullable<decimal> Original_表示価格, 
                    global::System.Nullable<decimal> Original_ＥＯＳ棚番, 
                    global::System.Nullable<decimal> Original_ＪＡＮコード, 
                    string Original_メーカー品番, 
                    string Original_棚番, 
                    string Original_メーカー名, 
                    global::System.Nullable<int> Original_店コード, 
                    global::System.Nullable<int> Original_部コード, 
                    string Original_エラー区分, 
                    global::System.Nullable<int> Original_更新ビット, 
                    string Original_商品番号, 
                    global::System.Nullable<int> Original_社コード, 
                    global::System.Nullable<int> Original_店コードＢ, 
                    global::System.Nullable<int> Original_直送区分, 
                    global::System.Nullable<int> Original_客注区分, 
                    global::System.Nullable<int> Original_経費区分, 
                    global::System.Nullable<int> Original_返品区分, 
                    global::System.Nullable<decimal> Original_本部原価単価, 
                    global::System.Nullable<decimal> Original_本部原価金額, 
                    global::System.Nullable<decimal> Original_納入単価, 
                    global::System.Nullable<decimal> Original_店舗売価, 
                    string Original_大分類コード, 
                    string Original_店舗備考, 
                    string Original_仕入先備考, 
                    global::System.Nullable<int> Original_登録番号, 
                    global::System.Nullable<int> Original_ドラスタ発注番号, 
                    string Original_客注番号, 
                    global::System.Nullable<short> Original_ドラスタ区分, 
                    global::System.Nullable<short> Original_欠品理由) {
            return this.Update(本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 受注連番, 出荷番号, 出荷連番, 発注番号, 発注連番, 売上伝票番号, 処理日, 売上日, 納入日, 受注日, 納期, 発注納期, 処理区, 売上区分コード, システム区分, 取引区分, 請求月区分コード, 得意先コード, 得名, 事業所コード, ランク, 部課コード, 担当者コード, 代理店コード, 代名, 納入先コード, 納名, 取引先コード, 取引先名, 請求先コード, 売上切捨区分, 売上税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 売上単価, 売上金額, 税抜売上金額, 原価単価, 原価金額, 粗利, 消費税, 税抜仕入金額, 仕入消費税, 売上返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 受注番号, 相手先注文番号, 自社受付番号, 仕入伝票番号, 仕入先コード, 仕名, 仕入分類, 仕入事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 入金番号, チェック, 入金チェック, 回収摘要, 検収チェック, 完了フラグ, WS_ID, 発行済フラグ, 受注更新フラグ, 出荷更新フラグ, 得意先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, 商品取引更新フラグ, オペレーターコード, 修正オペレーターコード, 受注行, 処理月日, 管理年月, 一括消費税締日, 発行済INDEX, 受注行番号, 売上行番号, 定価, 納品掛率, 原価掛率, 発注有無区分, 回答納期, 在庫数, 受注残数, 発注残数, 納品書発行フラグ, 専用伝票発行フラグ, 売上累計, 受注番号受注残数, 納品書発行日時, 取引先コード２, 社名, 店名, 部名, 発注区分, 請求月, ＥＯＳ区分, 帳票区分, 発注単位, ＥＯＳ商品コード, ＥＯＳ商品名, ＥＯＳ規格, 表示価格, ＥＯＳ棚番, ＪＡＮコード, メーカー品番, 棚番, メーカー名, 店コード, 部コード, エラー区分, 更新ビット, 商品番号, 社コード, 店コードＢ, 直送区分, 客注区分, 経費区分, 返品区分, 本部原価単価, 本部原価金額, 納入単価, 店舗売価, 大分類コード, 店舗備考, 仕入先備考, 登録番号, ドラスタ発注番号, 客注番号, ドラスタ区分, 欠品理由, Original_売上連番, Original_本支店区分, Original_処理コード, Original_入力区分, Original_処理番号, Original_エラーフラグ, Original_受発注行数, Original_受注連番, Original_出荷番号, Original_出荷連番, Original_発注番号, Original_発注連番, Original_売上伝票番号, Original_処理日, Original_売上日, Original_納入日, Original_受注日, Original_納期, Original_発注納期, Original_処理区, Original_売上区分コード, Original_システム区分, Original_取引区分, Original_請求月区分コード, Original_得意先コード, Original_得名, Original_事業所コード, Original_ランク, Original_部課コード, Original_担当者コード, Original_代理店コード, Original_代名, Original_納入先コード, Original_納名, Original_取引先コード, Original_取引先名, Original_請求先コード, Original_売上切捨区分, Original_売上税区分, Original_伝票摘要, Original_商品コード, Original_商名, Original_規格, Original_形式寸法, Original_材質, Original_分類, Original_在庫管理区分, Original_品種コード, Original_メーカーコード, Original_入数, Original_単位コード, Original_倉庫コード, Original_ケース数, Original_数量, Original_売上単価, Original_売上金額, Original_税抜売上金額, Original_原価単価, Original_原価金額, Original_粗利, Original_消費税, Original_税抜仕入金額, Original_仕入消費税, Original_売上返品値引理由区分, Original_外内税区分, Original_消費税率, Original_新消費税率, Original_新消費税適用, Original_明細摘要, Original_受注番号, Original_相手先注文番号, Original_自社受付番号, Original_仕入伝票番号, Original_仕入先コード, Original_仕名, Original_仕入分類, Original_仕入事業所コード, Original_仕入担当者コード, Original_仕入切捨区分, Original_仕入税区分, Original_入金番号, Original_チェック, Original_入金チェック, Original_回収摘要, Original_検収チェック, Original_完了フラグ, Original_WS_ID, Original_発行済フラグ, Original_受注更新フラグ, Original_出荷更新フラグ, Original_得意先更新フラグ, Original_商品更新フラグ, Original_商品倉庫更新フラグ, Original_商品取引更新フラグ, Original_オペレーターコード, Original_修正オペレーターコード, Original_受注行, Original_処理月日, Original_管理年月, Original_一括消費税締日, Original_発行済INDEX, Original_受注行番号, Original_売上行番号, Original_定価, Original_納品掛率, Original_原価掛率, Original_発注有無区分, Original_回答納期, Original_在庫数, Original_受注残数, Original_発注残数, Original_納品書発行フラグ, Original_専用伝票発行フラグ, Original_売上累計, Original_受注番号受注残数, Original_納品書発行日時, Original_取引先コード２, Original_社名, Original_店名, Original_部名, Original_発注区分, Original_請求月, Original_ＥＯＳ区分, Original_帳票区分, Original_発注単位, Original_ＥＯＳ商品コード, Original_ＥＯＳ商品名, Original_ＥＯＳ規格, Original_表示価格, Original_ＥＯＳ棚番, Original_ＪＡＮコード, Original_メーカー品番, Original_棚番, Original_メーカー名, Original_店コード, Original_部コード, Original_エラー区分, Original_更新ビット, Original_商品番号, Original_社コード, Original_店コードＢ, Original_直送区分, Original_客注区分, Original_経費区分, Original_返品区分, Original_本部原価単価, Original_本部原価金額, Original_納入単価, Original_店舗売価, Original_大分類コード, Original_店舗備考, Original_仕入先備考, Original_登録番号, Original_ドラスタ発注番号, Original_客注番号, Original_ドラスタ区分, Original_欠品理由, Original_売上連番);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T処理履歴テーブルTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T処理履歴テーブルTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T処理履歴テーブル";
            tableMapping.ColumnMappings.Add("カウント", "カウント");
            tableMapping.ColumnMappings.Add("本支店区分", "本支店区分");
            tableMapping.ColumnMappings.Add("処理コード", "処理コード");
            tableMapping.ColumnMappings.Add("処理名", "処理名");
            tableMapping.ColumnMappings.Add("入力区分", "入力区分");
            tableMapping.ColumnMappings.Add("事業所コード", "事業所コード");
            tableMapping.ColumnMappings.Add("処理番号", "処理番号");
            tableMapping.ColumnMappings.Add("売上仕入区分コード", "売上仕入区分コード");
            tableMapping.ColumnMappings.Add("システム区分", "システム区分");
            tableMapping.ColumnMappings.Add("売上伝票番号", "売上伝票番号");
            tableMapping.ColumnMappings.Add("受注番号", "受注番号");
            tableMapping.ColumnMappings.Add("出荷番号", "出荷番号");
            tableMapping.ColumnMappings.Add("発注番号", "発注番号");
            tableMapping.ColumnMappings.Add("仕入伝票番号", "仕入伝票番号");
            tableMapping.ColumnMappings.Add("入荷番号", "入荷番号");
            tableMapping.ColumnMappings.Add("入金番号", "入金番号");
            tableMapping.ColumnMappings.Add("支払番号", "支払番号");
            tableMapping.ColumnMappings.Add("移動番号", "移動番号");
            tableMapping.ColumnMappings.Add("棚卸番号", "棚卸番号");
            tableMapping.ColumnMappings.Add("処理日", "処理日");
            tableMapping.ColumnMappings.Add("更新フラグ", "更新フラグ");
            tableMapping.ColumnMappings.Add("更新INDEX", "更新INDEX");
            tableMapping.ColumnMappings.Add("更新処理日", "更新処理日");
            tableMapping.ColumnMappings.Add("オペレーターコード", "オペレーターコード");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [T処理履歴テーブル] WHERE (([カウント] = @Original_カウント) AND ((@IsNull_本支店区分 = 1 " +
                "AND [本支店区分] IS NULL) OR ([本支店区分] = @Original_本支店区分)) AND ((@IsNull_処理コード = 1 AND" +
                " [処理コード] IS NULL) OR ([処理コード] = @Original_処理コード)) AND ((@IsNull_処理名 = 1 AND [処理名" +
                "] IS NULL) OR ([処理名] = @Original_処理名)) AND ((@IsNull_入力区分 = 1 AND [入力区分] IS NULL" +
                ") OR ([入力区分] = @Original_入力区分)) AND ((@IsNull_事業所コード = 1 AND [事業所コード] IS NULL) O" +
                "R ([事業所コード] = @Original_事業所コード)) AND ((@IsNull_処理番号 = 1 AND [処理番号] IS NULL) OR (" +
                "[処理番号] = @Original_処理番号)) AND ((@IsNull_売上仕入区分コード = 1 AND [売上仕入区分コード] IS NULL) O" +
                "R ([売上仕入区分コード] = @Original_売上仕入区分コード)) AND ((@IsNull_システム区分 = 1 AND [システム区分] IS " +
                "NULL) OR ([システム区分] = @Original_システム区分)) AND ((@IsNull_売上伝票番号 = 1 AND [売上伝票番号] IS" +
                " NULL) OR ([売上伝票番号] = @Original_売上伝票番号)) AND ((@IsNull_受注番号 = 1 AND [受注番号] IS NU" +
                "LL) OR ([受注番号] = @Original_受注番号)) AND ((@IsNull_出荷番号 = 1 AND [出荷番号] IS NULL) OR " +
                "([出荷番号] = @Original_出荷番号)) AND ((@IsNull_発注番号 = 1 AND [発注番号] IS NULL) OR ([発注番号]" +
                " = @Original_発注番号)) AND ((@IsNull_仕入伝票番号 = 1 AND [仕入伝票番号] IS NULL) OR ([仕入伝票番号] " +
                "= @Original_仕入伝票番号)) AND ((@IsNull_入荷番号 = 1 AND [入荷番号] IS NULL) OR ([入荷番号] = @Or" +
                "iginal_入荷番号)) AND ((@IsNull_入金番号 = 1 AND [入金番号] IS NULL) OR ([入金番号] = @Original_" +
                "入金番号)) AND ((@IsNull_支払番号 = 1 AND [支払番号] IS NULL) OR ([支払番号] = @Original_支払番号)) " +
                "AND ((@IsNull_移動番号 = 1 AND [移動番号] IS NULL) OR ([移動番号] = @Original_移動番号)) AND ((@" +
                "IsNull_棚卸番号 = 1 AND [棚卸番号] IS NULL) OR ([棚卸番号] = @Original_棚卸番号)) AND ((@IsNull_" +
                "処理日 = 1 AND [処理日] IS NULL) OR ([処理日] = @Original_処理日)) AND ([更新フラグ] = @Original_" +
                "更新フラグ) AND ([更新INDEX] = @Original_更新INDEX) AND ((@IsNull_更新処理日 = 1 AND [更新処理日] I" +
                "S NULL) OR ([更新処理日] = @Original_更新処理日)) AND ((@IsNull_オペレーターコード = 1 AND [オペレーターコ" +
                "ード] IS NULL) OR ([オペレーターコード] = @Original_オペレーターコード)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_カウント", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "カウント", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入力区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上仕入区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_システム区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_移動番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_移動番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_棚卸番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚卸番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新INDEX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_更新処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [T処理履歴テーブル] ([本支店区分], [処理コード], [処理名], [入力区分], [事業所コード], [処理番号], [売上仕入区分コード], [システム区分], [売上伝票番号], [受注番号], [出荷番号], [発注番号], [仕入伝票番号], [入荷番号], [入金番号], [支払番号], [移動番号], [棚卸番号], [処理日], [更新フラグ], [更新INDEX], [更新処理日], [オペレーターコード]) VALUES (@本支店区分, @処理コード, @処理名, @入力区分, @事業所コード, @処理番号, @売上仕入区分コード, @システム区分, @売上伝票番号, @受注番号, @出荷番号, @発注番号, @仕入伝票番号, @入荷番号, @入金番号, @支払番号, @移動番号, @棚卸番号, @処理日, @更新フラグ, @更新INDEX, @更新処理日, @オペレーターコード);
SELECT カウント, 本支店区分, 処理コード, 処理名, 入力区分, 事業所コード, 処理番号, 売上仕入区分コード, システム区分, 売上伝票番号, 受注番号, 出荷番号, 発注番号, 仕入伝票番号, 入荷番号, 入金番号, 支払番号, 移動番号, 棚卸番号, 処理日, 更新フラグ, 更新INDEX, 更新処理日, オペレーターコード FROM T処理履歴テーブル WHERE (カウント = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@移動番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新INDEX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [T処理履歴テーブル] SET [本支店区分] = @本支店区分, [処理コード] = @処理コード, [処理名] = @処理名, [入力区分] =" +
                " @入力区分, [事業所コード] = @事業所コード, [処理番号] = @処理番号, [売上仕入区分コード] = @売上仕入区分コード, [システム区分] =" +
                " @システム区分, [売上伝票番号] = @売上伝票番号, [受注番号] = @受注番号, [出荷番号] = @出荷番号, [発注番号] = @発注番号, [仕" +
                "入伝票番号] = @仕入伝票番号, [入荷番号] = @入荷番号, [入金番号] = @入金番号, [支払番号] = @支払番号, [移動番号] = @移動番号" +
                ", [棚卸番号] = @棚卸番号, [処理日] = @処理日, [更新フラグ] = @更新フラグ, [更新INDEX] = @更新INDEX, [更新処理日] " +
                "= @更新処理日, [オペレーターコード] = @オペレーターコード WHERE (([カウント] = @Original_カウント) AND ((@IsNul" +
                "l_本支店区分 = 1 AND [本支店区分] IS NULL) OR ([本支店区分] = @Original_本支店区分)) AND ((@IsNull_処" +
                "理コード = 1 AND [処理コード] IS NULL) OR ([処理コード] = @Original_処理コード)) AND ((@IsNull_処理名 " +
                "= 1 AND [処理名] IS NULL) OR ([処理名] = @Original_処理名)) AND ((@IsNull_入力区分 = 1 AND [入" +
                "力区分] IS NULL) OR ([入力区分] = @Original_入力区分)) AND ((@IsNull_事業所コード = 1 AND [事業所コード" +
                "] IS NULL) OR ([事業所コード] = @Original_事業所コード)) AND ((@IsNull_処理番号 = 1 AND [処理番号] I" +
                "S NULL) OR ([処理番号] = @Original_処理番号)) AND ((@IsNull_売上仕入区分コード = 1 AND [売上仕入区分コード" +
                "] IS NULL) OR ([売上仕入区分コード] = @Original_売上仕入区分コード)) AND ((@IsNull_システム区分 = 1 AND " +
                "[システム区分] IS NULL) OR ([システム区分] = @Original_システム区分)) AND ((@IsNull_売上伝票番号 = 1 AND" +
                " [売上伝票番号] IS NULL) OR ([売上伝票番号] = @Original_売上伝票番号)) AND ((@IsNull_受注番号 = 1 AND " +
                "[受注番号] IS NULL) OR ([受注番号] = @Original_受注番号)) AND ((@IsNull_出荷番号 = 1 AND [出荷番号] " +
                "IS NULL) OR ([出荷番号] = @Original_出荷番号)) AND ((@IsNull_発注番号 = 1 AND [発注番号] IS NULL" +
                ") OR ([発注番号] = @Original_発注番号)) AND ((@IsNull_仕入伝票番号 = 1 AND [仕入伝票番号] IS NULL) O" +
                "R ([仕入伝票番号] = @Original_仕入伝票番号)) AND ((@IsNull_入荷番号 = 1 AND [入荷番号] IS NULL) OR (" +
                "[入荷番号] = @Original_入荷番号)) AND ((@IsNull_入金番号 = 1 AND [入金番号] IS NULL) OR ([入金番号] " +
                "= @Original_入金番号)) AND ((@IsNull_支払番号 = 1 AND [支払番号] IS NULL) OR ([支払番号] = @Orig" +
                "inal_支払番号)) AND ((@IsNull_移動番号 = 1 AND [移動番号] IS NULL) OR ([移動番号] = @Original_移動" +
                "番号)) AND ((@IsNull_棚卸番号 = 1 AND [棚卸番号] IS NULL) OR ([棚卸番号] = @Original_棚卸番号)) AN" +
                "D ((@IsNull_処理日 = 1 AND [処理日] IS NULL) OR ([処理日] = @Original_処理日)) AND ([更新フラグ] " +
                "= @Original_更新フラグ) AND ([更新INDEX] = @Original_更新INDEX) AND ((@IsNull_更新処理日 = 1 A" +
                "ND [更新処理日] IS NULL) OR ([更新処理日] = @Original_更新処理日)) AND ((@IsNull_オペレーターコード = 1 " +
                "AND [オペレーターコード] IS NULL) OR ([オペレーターコード] = @Original_オペレーターコード)));\r\nSELECT カウント," +
                " 本支店区分, 処理コード, 処理名, 入力区分, 事業所コード, 処理番号, 売上仕入区分コード, システム区分, 売上伝票番号, 受注番号, 出荷番号, 発" +
                "注番号, 仕入伝票番号, 入荷番号, 入金番号, 支払番号, 移動番号, 棚卸番号, 処理日, 更新フラグ, 更新INDEX, 更新処理日, オペレーターコード" +
                " FROM T処理履歴テーブル WHERE (カウント = @カウント)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@移動番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新INDEX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_カウント", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "カウント", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入力区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上仕入区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_システム区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_移動番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_移動番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_棚卸番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚卸番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新INDEX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_更新処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@カウント", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "カウント", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::db_test.Properties.Settings.Default.SPEEDDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT            カウント, 本支店区分, 処理コード, 処理名, 入力区分, 事業所コード, 処理番号, 売上仕入区分コード, システム区分," +
                " 売上伝票番号, 受注番号, 出荷番号, 発注番号, \r\n                        仕入伝票番号, 入荷番号, 入金番号, 支払番号, 移" +
                "動番号, 棚卸番号, 処理日, 更新フラグ, 更新INDEX, 更新処理日, オペレーターコード\r\nFROM              T処理履歴テーブル";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"INSERT INTO  T処理履歴テーブル
                        (本支店区分, 処理コード, 処理名, 入力区分, 事業所コード, 処理番号, 売上仕入区分コード, システム区分, 売上伝票番号, 受注番号, 出荷番号, 発注番号, 仕入伝票番号, 
                        入荷番号, 入金番号, 支払番号, 移動番号, 棚卸番号, 処理日, 更新フラグ, 更新INDEX, 更新処理日, オペレーターコード)
VALUES          (@本支店区分, 4, '売上計上',@入力区分,@事業所コード,@処理番号,@売上仕入区分コード,@システム区分,@売上伝票番号,@受注番号, 0, 0, 0, 0, 0, 0, 0, 0, 
                        GETDATE(),@更新フラグ,@更新INDEX, GETDATE(),@オペレーターコード);  
SELECT カウント, 本支店区分, 処理コード, 処理名, 入力区分, 事業所コード, 処理番号, 売上仕入区分コード, システム区分, 売上伝票番号, 受注番号, 出荷番号, 発注番号, 仕入伝票番号, 入荷番号, 入金番号, 支払番号, 移動番号, 棚卸番号, 処理日, 更新フラグ, 更新INDEX, 更新処理日, オペレーターコード FROM T処理履歴テーブル WHERE (カウント = SCOPE_IDENTITY())";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上仕入区分コード", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新フラグ", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新INDEX", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "更新INDEX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(売上計上DataSet.T処理履歴テーブルDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 売上計上DataSet.T処理履歴テーブルDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            売上計上DataSet.T処理履歴テーブルDataTable dataTable = new 売上計上DataSet.T処理履歴テーブルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(売上計上DataSet.T処理履歴テーブルDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(売上計上DataSet dataSet) {
            return this.Adapter.Update(dataSet, "T処理履歴テーブル");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_カウント, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    string Original_処理名, 
                    global::System.Nullable<short> Original_入力区分, 
                    string Original_事業所コード, 
                    global::System.Nullable<int> Original_処理番号, 
                    global::System.Nullable<short> Original_売上仕入区分コード, 
                    global::System.Nullable<short> Original_システム区分, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    global::System.Nullable<int> Original_受注番号, 
                    global::System.Nullable<int> Original_出荷番号, 
                    global::System.Nullable<int> Original_発注番号, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    global::System.Nullable<int> Original_入荷番号, 
                    global::System.Nullable<int> Original_入金番号, 
                    global::System.Nullable<int> Original_支払番号, 
                    global::System.Nullable<int> Original_移動番号, 
                    global::System.Nullable<int> Original_棚卸番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    bool Original_更新フラグ, 
                    int Original_更新INDEX, 
                    global::System.Nullable<global::System.DateTime> Original_更新処理日, 
                    string Original_オペレーターコード) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_カウント));
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_処理コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_処理コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_処理名 == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_処理名));
            }
            if ((Original_入力区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((short)(Original_入力区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_事業所コード == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_事業所コード));
            }
            if ((Original_処理番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_処理番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_売上仕入区分コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((short)(Original_売上仕入区分コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_システム区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((short)(Original_システム区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_売上伝票番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_売上伝票番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_受注番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_受注番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_出荷番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_発注番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_発注番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入伝票番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_仕入伝票番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_入荷番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_入金番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_入金番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_支払番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_支払番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_移動番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_移動番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_棚卸番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_棚卸番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_処理日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((System.DateTime)(Original_処理日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[39].Value = ((bool)(Original_更新フラグ));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_更新INDEX));
            if ((Original_更新処理日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((System.DateTime)(Original_更新処理日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_オペレーターコード == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_オペレーターコード));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    string 処理名, 
                    global::System.Nullable<short> 入力区分, 
                    string 事業所コード, 
                    global::System.Nullable<int> 処理番号, 
                    global::System.Nullable<short> 売上仕入区分コード, 
                    global::System.Nullable<short> システム区分, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<int> 受注番号, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入金番号, 
                    global::System.Nullable<int> 支払番号, 
                    global::System.Nullable<int> 移動番号, 
                    global::System.Nullable<int> 棚卸番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    bool 更新フラグ, 
                    int 更新INDEX, 
                    global::System.Nullable<global::System.DateTime> 更新処理日, 
                    string オペレーターコード) {
            if ((本支店区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(処理コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((処理名 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(処理名));
            }
            if ((入力区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(入力区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((事業所コード == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(事業所コード));
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((売上仕入区分コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((short)(売上仕入区分コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((システム区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((short)(システム区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((受注番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(受注番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((出荷番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(出荷番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((発注番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((入荷番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(入荷番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((入金番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(入金番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((支払番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(支払番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((移動番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(移動番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((棚卸番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(棚卸番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(更新フラグ));
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(更新INDEX));
            if ((更新処理日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(更新処理日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((オペレーターコード == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(オペレーターコード));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    string 処理名, 
                    global::System.Nullable<short> 入力区分, 
                    string 事業所コード, 
                    global::System.Nullable<int> 処理番号, 
                    global::System.Nullable<short> 売上仕入区分コード, 
                    global::System.Nullable<short> システム区分, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<int> 受注番号, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入金番号, 
                    global::System.Nullable<int> 支払番号, 
                    global::System.Nullable<int> 移動番号, 
                    global::System.Nullable<int> 棚卸番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    bool 更新フラグ, 
                    int 更新INDEX, 
                    global::System.Nullable<global::System.DateTime> 更新処理日, 
                    string オペレーターコード, 
                    int Original_カウント, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    string Original_処理名, 
                    global::System.Nullable<short> Original_入力区分, 
                    string Original_事業所コード, 
                    global::System.Nullable<int> Original_処理番号, 
                    global::System.Nullable<short> Original_売上仕入区分コード, 
                    global::System.Nullable<short> Original_システム区分, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    global::System.Nullable<int> Original_受注番号, 
                    global::System.Nullable<int> Original_出荷番号, 
                    global::System.Nullable<int> Original_発注番号, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    global::System.Nullable<int> Original_入荷番号, 
                    global::System.Nullable<int> Original_入金番号, 
                    global::System.Nullable<int> Original_支払番号, 
                    global::System.Nullable<int> Original_移動番号, 
                    global::System.Nullable<int> Original_棚卸番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    bool Original_更新フラグ, 
                    int Original_更新INDEX, 
                    global::System.Nullable<global::System.DateTime> Original_更新処理日, 
                    string Original_オペレーターコード, 
                    int カウント) {
            if ((本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(処理コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((処理名 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(処理名));
            }
            if ((入力区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(入力区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(事業所コード));
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((売上仕入区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(売上仕入区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((システム区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(システム区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((受注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(受注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((出荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(出荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((入荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(入荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((入金番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(入金番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((支払番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(支払番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((移動番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(移動番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((棚卸番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(棚卸番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(更新フラグ));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(更新INDEX));
            if ((更新処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(更新処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(オペレーターコード));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_カウント));
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_処理コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_処理コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_処理名 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_処理名));
            }
            if ((Original_入力区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((short)(Original_入力区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_事業所コード));
            }
            if ((Original_処理番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_処理番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_売上仕入区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((short)(Original_売上仕入区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_システム区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((short)(Original_システム区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_売上伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_売上伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_受注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_受注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_出荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_仕入伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_入荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_入金番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_入金番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_支払番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_支払番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_移動番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_移動番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_棚卸番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_棚卸番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Original_更新フラグ));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(Original_更新INDEX));
            if ((Original_更新処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(Original_更新処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_オペレーターコード));
            }
            this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(カウント));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    string 処理名, 
                    global::System.Nullable<short> 入力区分, 
                    string 事業所コード, 
                    global::System.Nullable<int> 処理番号, 
                    global::System.Nullable<short> 売上仕入区分コード, 
                    global::System.Nullable<short> システム区分, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<int> 受注番号, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入金番号, 
                    global::System.Nullable<int> 支払番号, 
                    global::System.Nullable<int> 移動番号, 
                    global::System.Nullable<int> 棚卸番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    bool 更新フラグ, 
                    int 更新INDEX, 
                    global::System.Nullable<global::System.DateTime> 更新処理日, 
                    string オペレーターコード, 
                    int Original_カウント, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    string Original_処理名, 
                    global::System.Nullable<short> Original_入力区分, 
                    string Original_事業所コード, 
                    global::System.Nullable<int> Original_処理番号, 
                    global::System.Nullable<short> Original_売上仕入区分コード, 
                    global::System.Nullable<short> Original_システム区分, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    global::System.Nullable<int> Original_受注番号, 
                    global::System.Nullable<int> Original_出荷番号, 
                    global::System.Nullable<int> Original_発注番号, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    global::System.Nullable<int> Original_入荷番号, 
                    global::System.Nullable<int> Original_入金番号, 
                    global::System.Nullable<int> Original_支払番号, 
                    global::System.Nullable<int> Original_移動番号, 
                    global::System.Nullable<int> Original_棚卸番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    bool Original_更新フラグ, 
                    int Original_更新INDEX, 
                    global::System.Nullable<global::System.DateTime> Original_更新処理日, 
                    string Original_オペレーターコード) {
            return this.Update(本支店区分, 処理コード, 処理名, 入力区分, 事業所コード, 処理番号, 売上仕入区分コード, システム区分, 売上伝票番号, 受注番号, 出荷番号, 発注番号, 仕入伝票番号, 入荷番号, 入金番号, 支払番号, 移動番号, 棚卸番号, 処理日, 更新フラグ, 更新INDEX, 更新処理日, オペレーターコード, Original_カウント, Original_本支店区分, Original_処理コード, Original_処理名, Original_入力区分, Original_事業所コード, Original_処理番号, Original_売上仕入区分コード, Original_システム区分, Original_売上伝票番号, Original_受注番号, Original_出荷番号, Original_発注番号, Original_仕入伝票番号, Original_入荷番号, Original_入金番号, Original_支払番号, Original_移動番号, Original_棚卸番号, Original_処理日, Original_更新フラグ, Original_更新INDEX, Original_更新処理日, Original_オペレーターコード, Original_カウント);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQueryT処理履歴(global::System.Nullable<short> 本支店区分, global::System.Nullable<short> 入力区分, string 事業所コード, global::System.Nullable<int> 処理番号, global::System.Nullable<short> 売上仕入区分コード, global::System.Nullable<short> システム区分, global::System.Nullable<int> 売上伝票番号, global::System.Nullable<int> 受注番号, bool 更新フラグ, int 更新INDEX, string オペレーターコード) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((本支店区分.HasValue == true)) {
                command.Parameters[0].Value = ((short)(本支店区分.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((入力区分.HasValue == true)) {
                command.Parameters[1].Value = ((short)(入力区分.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((事業所コード == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(事業所コード));
            }
            if ((処理番号.HasValue == true)) {
                command.Parameters[3].Value = ((int)(処理番号.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((売上仕入区分コード.HasValue == true)) {
                command.Parameters[4].Value = ((short)(売上仕入区分コード.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((システム区分.HasValue == true)) {
                command.Parameters[5].Value = ((short)(システム区分.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((売上伝票番号.HasValue == true)) {
                command.Parameters[6].Value = ((int)(売上伝票番号.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((受注番号.HasValue == true)) {
                command.Parameters[7].Value = ((int)(受注番号.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            command.Parameters[8].Value = ((bool)(更新フラグ));
            command.Parameters[9].Value = ((int)(更新INDEX));
            if ((オペレーターコード == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(オペレーターコード));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private T売上修正戻ファイルTableAdapter _t売上修正戻ファイルTableAdapter;
        
        private T売上明細ファイルTableAdapter _t売上明細ファイルTableAdapter;
        
        private T処理履歴テーブルTableAdapter _t処理履歴テーブルTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T売上修正戻ファイルTableAdapter T売上修正戻ファイルTableAdapter {
            get {
                return this._t売上修正戻ファイルTableAdapter;
            }
            set {
                this._t売上修正戻ファイルTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T売上明細ファイルTableAdapter T売上明細ファイルTableAdapter {
            get {
                return this._t売上明細ファイルTableAdapter;
            }
            set {
                this._t売上明細ファイルTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T処理履歴テーブルTableAdapter T処理履歴テーブルTableAdapter {
            get {
                return this._t処理履歴テーブルTableAdapter;
            }
            set {
                this._t処理履歴テーブルTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._t売上修正戻ファイルTableAdapter != null) 
                            && (this._t売上修正戻ファイルTableAdapter.Connection != null))) {
                    return this._t売上修正戻ファイルTableAdapter.Connection;
                }
                if (((this._t売上明細ファイルTableAdapter != null) 
                            && (this._t売上明細ファイルTableAdapter.Connection != null))) {
                    return this._t売上明細ファイルTableAdapter.Connection;
                }
                if (((this._t処理履歴テーブルTableAdapter != null) 
                            && (this._t処理履歴テーブルTableAdapter.Connection != null))) {
                    return this._t処理履歴テーブルTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._t売上修正戻ファイルTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._t売上明細ファイルTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._t処理履歴テーブルTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(売上計上DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._t処理履歴テーブルTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T処理履歴テーブル.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t処理履歴テーブルTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._t売上明細ファイルTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T売上明細ファイル.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t売上明細ファイルTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._t売上修正戻ファイルTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T売上修正戻ファイル.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t売上修正戻ファイルTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(売上計上DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._t処理履歴テーブルTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T処理履歴テーブル.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t処理履歴テーブルTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._t売上明細ファイルTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T売上明細ファイル.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t売上明細ファイルTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._t売上修正戻ファイルTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T売上修正戻ファイル.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t売上修正戻ファイルTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(売上計上DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._t売上修正戻ファイルTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T売上修正戻ファイル.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t売上修正戻ファイルTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._t売上明細ファイルTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T売上明細ファイル.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t売上明細ファイルTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._t処理履歴テーブルTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T処理履歴テーブル.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t処理履歴テーブルTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(売上計上DataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._t売上修正戻ファイルTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t売上修正戻ファイルTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            if (((this._t売上明細ファイルTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t売上明細ファイルTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            if (((this._t処理履歴テーブルTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t処理履歴テーブルTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager には接続情報がありません。それぞれの TableAdapterManager TableAdapter プロパティを有効な" +
                        " TableAdapter インスタンスに設定してください。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("トランザクションを開始できません。現在のデータ接続がトランザクションをサポートしていないか、または現在の状態がトランザクションの開始を許可していません。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._t売上修正戻ファイルTableAdapter != null)) {
                    revertConnections.Add(this._t売上修正戻ファイルTableAdapter, this._t売上修正戻ファイルTableAdapter.Connection);
                    this._t売上修正戻ファイルTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t売上修正戻ファイルTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t売上修正戻ファイルTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t売上修正戻ファイルTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t売上修正戻ファイルTableAdapter.Adapter);
                    }
                }
                if ((this._t売上明細ファイルTableAdapter != null)) {
                    revertConnections.Add(this._t売上明細ファイルTableAdapter, this._t売上明細ファイルTableAdapter.Connection);
                    this._t売上明細ファイルTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t売上明細ファイルTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t売上明細ファイルTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t売上明細ファイルTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t売上明細ファイルTableAdapter.Adapter);
                    }
                }
                if ((this._t処理履歴テーブルTableAdapter != null)) {
                    revertConnections.Add(this._t処理履歴テーブルTableAdapter, this._t処理履歴テーブルTableAdapter.Connection);
                    this._t処理履歴テーブルTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t処理履歴テーブルTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t処理履歴テーブルTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t処理履歴テーブルTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t処理履歴テーブルTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._t売上修正戻ファイルTableAdapter != null)) {
                    this._t売上修正戻ファイルTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t売上修正戻ファイルTableAdapter]));
                    this._t売上修正戻ファイルTableAdapter.Transaction = null;
                }
                if ((this._t売上明細ファイルTableAdapter != null)) {
                    this._t売上明細ファイルTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t売上明細ファイルTableAdapter]));
                    this._t売上明細ファイルTableAdapter.Transaction = null;
                }
                if ((this._t処理履歴テーブルTableAdapter != null)) {
                    this._t処理履歴テーブルTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t処理履歴テーブルTableAdapter]));
                    this._t処理履歴テーブルTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591