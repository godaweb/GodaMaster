//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace db_test {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("仕入計上DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class 仕入計上DataSet : global::System.Data.DataSet {
        
        private T仕入修正戻ファイルDataTable tableT仕入修正戻ファイル;
        
        private T仕入明細ファイルDataTable tableT仕入明細ファイル;
        
        private T処理履歴テーブルDataTable tableT処理履歴テーブル;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public 仕入計上DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected 仕入計上DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T仕入修正戻ファイル"] != null)) {
                    base.Tables.Add(new T仕入修正戻ファイルDataTable(ds.Tables["T仕入修正戻ファイル"]));
                }
                if ((ds.Tables["T仕入明細ファイル"] != null)) {
                    base.Tables.Add(new T仕入明細ファイルDataTable(ds.Tables["T仕入明細ファイル"]));
                }
                if ((ds.Tables["T処理履歴テーブル"] != null)) {
                    base.Tables.Add(new T処理履歴テーブルDataTable(ds.Tables["T処理履歴テーブル"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T仕入修正戻ファイルDataTable T仕入修正戻ファイル {
            get {
                return this.tableT仕入修正戻ファイル;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T仕入明細ファイルDataTable T仕入明細ファイル {
            get {
                return this.tableT仕入明細ファイル;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T処理履歴テーブルDataTable T処理履歴テーブル {
            get {
                return this.tableT処理履歴テーブル;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            仕入計上DataSet cln = ((仕入計上DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T仕入修正戻ファイル"] != null)) {
                    base.Tables.Add(new T仕入修正戻ファイルDataTable(ds.Tables["T仕入修正戻ファイル"]));
                }
                if ((ds.Tables["T仕入明細ファイル"] != null)) {
                    base.Tables.Add(new T仕入明細ファイルDataTable(ds.Tables["T仕入明細ファイル"]));
                }
                if ((ds.Tables["T処理履歴テーブル"] != null)) {
                    base.Tables.Add(new T処理履歴テーブルDataTable(ds.Tables["T処理履歴テーブル"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableT仕入修正戻ファイル = ((T仕入修正戻ファイルDataTable)(base.Tables["T仕入修正戻ファイル"]));
            if ((initTable == true)) {
                if ((this.tableT仕入修正戻ファイル != null)) {
                    this.tableT仕入修正戻ファイル.InitVars();
                }
            }
            this.tableT仕入明細ファイル = ((T仕入明細ファイルDataTable)(base.Tables["T仕入明細ファイル"]));
            if ((initTable == true)) {
                if ((this.tableT仕入明細ファイル != null)) {
                    this.tableT仕入明細ファイル.InitVars();
                }
            }
            this.tableT処理履歴テーブル = ((T処理履歴テーブルDataTable)(base.Tables["T処理履歴テーブル"]));
            if ((initTable == true)) {
                if ((this.tableT処理履歴テーブル != null)) {
                    this.tableT処理履歴テーブル.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "仕入計上DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/仕入計上DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT仕入修正戻ファイル = new T仕入修正戻ファイルDataTable();
            base.Tables.Add(this.tableT仕入修正戻ファイル);
            this.tableT仕入明細ファイル = new T仕入明細ファイルDataTable();
            base.Tables.Add(this.tableT仕入明細ファイル);
            this.tableT処理履歴テーブル = new T処理履歴テーブルDataTable();
            base.Tables.Add(this.tableT処理履歴テーブル);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT仕入修正戻ファイル() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT仕入明細ファイル() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT処理履歴テーブル() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            仕入計上DataSet ds = new 仕入計上DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T仕入修正戻ファイルRowChangeEventHandler(object sender, T仕入修正戻ファイルRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T仕入明細ファイルRowChangeEventHandler(object sender, T仕入明細ファイルRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T処理履歴テーブルRowChangeEventHandler(object sender, T処理履歴テーブルRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T仕入修正戻ファイルDataTable : global::System.Data.TypedTableBase<T仕入修正戻ファイルRow> {
            
            private global::System.Data.DataColumn column仕入修正連番;
            
            private global::System.Data.DataColumn column修正処理年月日;
            
            private global::System.Data.DataColumn column本支店区分;
            
            private global::System.Data.DataColumn column処理コード;
            
            private global::System.Data.DataColumn column入力区分;
            
            private global::System.Data.DataColumn column処理番号;
            
            private global::System.Data.DataColumn columnエラーフラグ;
            
            private global::System.Data.DataColumn column受発注行数;
            
            private global::System.Data.DataColumn column発注連番;
            
            private global::System.Data.DataColumn column入荷番号;
            
            private global::System.Data.DataColumn column入荷連番;
            
            private global::System.Data.DataColumn column仕入伝票番号;
            
            private global::System.Data.DataColumn column処理日;
            
            private global::System.Data.DataColumn column仕入日;
            
            private global::System.Data.DataColumn column入荷日;
            
            private global::System.Data.DataColumn column発注日;
            
            private global::System.Data.DataColumn column納期;
            
            private global::System.Data.DataColumn column処理区;
            
            private global::System.Data.DataColumn column仕入区分コード;
            
            private global::System.Data.DataColumn columnシステム区分;
            
            private global::System.Data.DataColumn column支払月区分コード;
            
            private global::System.Data.DataColumn column仕入先コード;
            
            private global::System.Data.DataColumn column仕名;
            
            private global::System.Data.DataColumn column仕入分類;
            
            private global::System.Data.DataColumn column事業所コード;
            
            private global::System.Data.DataColumn column仕入担当者コード;
            
            private global::System.Data.DataColumn column仕入切捨区分;
            
            private global::System.Data.DataColumn column仕入税区分;
            
            private global::System.Data.DataColumn column伝票摘要;
            
            private global::System.Data.DataColumn column商品コード;
            
            private global::System.Data.DataColumn column商名;
            
            private global::System.Data.DataColumn column規格;
            
            private global::System.Data.DataColumn column形式寸法;
            
            private global::System.Data.DataColumn column材質;
            
            private global::System.Data.DataColumn column分類;
            
            private global::System.Data.DataColumn column在庫管理区分;
            
            private global::System.Data.DataColumn column品種コード;
            
            private global::System.Data.DataColumn columnメーカーコード;
            
            private global::System.Data.DataColumn column入数;
            
            private global::System.Data.DataColumn column単位コード;
            
            private global::System.Data.DataColumn column倉庫コード;
            
            private global::System.Data.DataColumn columnケース数;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column仕入単価;
            
            private global::System.Data.DataColumn column仕入金額;
            
            private global::System.Data.DataColumn column税抜仕入金額;
            
            private global::System.Data.DataColumn column消費税;
            
            private global::System.Data.DataColumn column仕入返品値引理由区分;
            
            private global::System.Data.DataColumn column外内税区分;
            
            private global::System.Data.DataColumn column消費税率;
            
            private global::System.Data.DataColumn column新消費税率;
            
            private global::System.Data.DataColumn column新消費税適用;
            
            private global::System.Data.DataColumn column明細摘要;
            
            private global::System.Data.DataColumn column発注番号;
            
            private global::System.Data.DataColumn column相手先受付番号;
            
            private global::System.Data.DataColumn column自社発注番号;
            
            private global::System.Data.DataColumn column売上伝票番号;
            
            private global::System.Data.DataColumn column得意先コード;
            
            private global::System.Data.DataColumn column支払番号;
            
            private global::System.Data.DataColumn columnチェック;
            
            private global::System.Data.DataColumn column完了フラグ;
            
            private global::System.Data.DataColumn columnWS_ID;
            
            private global::System.Data.DataColumn column発注更新フラグ;
            
            private global::System.Data.DataColumn column入荷更新フラグ;
            
            private global::System.Data.DataColumn column仕入先更新フラグ;
            
            private global::System.Data.DataColumn column商品更新フラグ;
            
            private global::System.Data.DataColumn column商品倉庫更新フラグ;
            
            private global::System.Data.DataColumn columnオペレーターコード;
            
            private global::System.Data.DataColumn column修正オペレーターコード;
            
            private global::System.Data.DataColumn column発注行;
            
            private global::System.Data.DataColumn column処理月日;
            
            private global::System.Data.DataColumn column管理年月;
            
            private global::System.Data.DataColumn column発注行番号;
            
            private global::System.Data.DataColumn column仕入行番号;
            
            private global::System.Data.DataColumn column定価;
            
            private global::System.Data.DataColumn column原価掛率;
            
            private global::System.Data.DataColumn columnメーカー品番;
            
            private global::System.Data.DataColumn column納入先コード;
            
            private global::System.Data.DataColumn column在庫数;
            
            private global::System.Data.DataColumn column受注残数;
            
            private global::System.Data.DataColumn column発注残数;
            
            private global::System.Data.DataColumn columnモニター発行フラグ;
            
            private global::System.Data.DataColumn columnオーダー区分;
            
            private global::System.Data.DataColumn column回答コード;
            
            private global::System.Data.DataColumn column回答名;
            
            private global::System.Data.DataColumn column回答納期;
            
            private global::System.Data.DataColumn column発注番号発注残数;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入修正戻ファイルDataTable() {
                this.TableName = "T仕入修正戻ファイル";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T仕入修正戻ファイルDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T仕入修正戻ファイルDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入修正連番Column {
                get {
                    return this.column仕入修正連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 修正処理年月日Column {
                get {
                    return this.column修正処理年月日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 本支店区分Column {
                get {
                    return this.column本支店区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理コードColumn {
                get {
                    return this.column処理コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入力区分Column {
                get {
                    return this.column入力区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理番号Column {
                get {
                    return this.column処理番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn エラーフラグColumn {
                get {
                    return this.columnエラーフラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受発注行数Column {
                get {
                    return this.column受発注行数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注連番Column {
                get {
                    return this.column発注連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入荷番号Column {
                get {
                    return this.column入荷番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入荷連番Column {
                get {
                    return this.column入荷連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入伝票番号Column {
                get {
                    return this.column仕入伝票番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理日Column {
                get {
                    return this.column処理日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入日Column {
                get {
                    return this.column仕入日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入荷日Column {
                get {
                    return this.column入荷日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注日Column {
                get {
                    return this.column発注日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納期Column {
                get {
                    return this.column納期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理区Column {
                get {
                    return this.column処理区;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入区分コードColumn {
                get {
                    return this.column仕入区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn システム区分Column {
                get {
                    return this.columnシステム区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払月区分コードColumn {
                get {
                    return this.column支払月区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入先コードColumn {
                get {
                    return this.column仕入先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕名Column {
                get {
                    return this.column仕名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入分類Column {
                get {
                    return this.column仕入分類;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 事業所コードColumn {
                get {
                    return this.column事業所コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入担当者コードColumn {
                get {
                    return this.column仕入担当者コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入切捨区分Column {
                get {
                    return this.column仕入切捨区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入税区分Column {
                get {
                    return this.column仕入税区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 伝票摘要Column {
                get {
                    return this.column伝票摘要;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品コードColumn {
                get {
                    return this.column商品コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商名Column {
                get {
                    return this.column商名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 規格Column {
                get {
                    return this.column規格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 形式寸法Column {
                get {
                    return this.column形式寸法;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 材質Column {
                get {
                    return this.column材質;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 分類Column {
                get {
                    return this.column分類;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 在庫管理区分Column {
                get {
                    return this.column在庫管理区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 品種コードColumn {
                get {
                    return this.column品種コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn メーカーコードColumn {
                get {
                    return this.columnメーカーコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入数Column {
                get {
                    return this.column入数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 単位コードColumn {
                get {
                    return this.column単位コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 倉庫コードColumn {
                get {
                    return this.column倉庫コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ケース数Column {
                get {
                    return this.columnケース数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入単価Column {
                get {
                    return this.column仕入単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入金額Column {
                get {
                    return this.column仕入金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 税抜仕入金額Column {
                get {
                    return this.column税抜仕入金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 消費税Column {
                get {
                    return this.column消費税;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入返品値引理由区分Column {
                get {
                    return this.column仕入返品値引理由区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 外内税区分Column {
                get {
                    return this.column外内税区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 消費税率Column {
                get {
                    return this.column消費税率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 新消費税率Column {
                get {
                    return this.column新消費税率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 新消費税適用Column {
                get {
                    return this.column新消費税適用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 明細摘要Column {
                get {
                    return this.column明細摘要;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注番号Column {
                get {
                    return this.column発注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 相手先受付番号Column {
                get {
                    return this.column相手先受付番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 自社発注番号Column {
                get {
                    return this.column自社発注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上伝票番号Column {
                get {
                    return this.column売上伝票番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 得意先コードColumn {
                get {
                    return this.column得意先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払番号Column {
                get {
                    return this.column支払番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn チェックColumn {
                get {
                    return this.columnチェック;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 完了フラグColumn {
                get {
                    return this.column完了フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WS_IDColumn {
                get {
                    return this.columnWS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注更新フラグColumn {
                get {
                    return this.column発注更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入荷更新フラグColumn {
                get {
                    return this.column入荷更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入先更新フラグColumn {
                get {
                    return this.column仕入先更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品更新フラグColumn {
                get {
                    return this.column商品更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品倉庫更新フラグColumn {
                get {
                    return this.column商品倉庫更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn オペレーターコードColumn {
                get {
                    return this.columnオペレーターコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 修正オペレーターコードColumn {
                get {
                    return this.column修正オペレーターコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注行Column {
                get {
                    return this.column発注行;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理月日Column {
                get {
                    return this.column処理月日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 管理年月Column {
                get {
                    return this.column管理年月;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注行番号Column {
                get {
                    return this.column発注行番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入行番号Column {
                get {
                    return this.column仕入行番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 定価Column {
                get {
                    return this.column定価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 原価掛率Column {
                get {
                    return this.column原価掛率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn メーカー品番Column {
                get {
                    return this.columnメーカー品番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納入先コードColumn {
                get {
                    return this.column納入先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 在庫数Column {
                get {
                    return this.column在庫数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注残数Column {
                get {
                    return this.column受注残数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注残数Column {
                get {
                    return this.column発注残数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn モニター発行フラグColumn {
                get {
                    return this.columnモニター発行フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn オーダー区分Column {
                get {
                    return this.columnオーダー区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 回答コードColumn {
                get {
                    return this.column回答コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 回答名Column {
                get {
                    return this.column回答名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 回答納期Column {
                get {
                    return this.column回答納期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注番号発注残数Column {
                get {
                    return this.column発注番号発注残数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入修正戻ファイルRow this[int index] {
                get {
                    return ((T仕入修正戻ファイルRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T仕入修正戻ファイルRowChangeEventHandler T仕入修正戻ファイルRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T仕入修正戻ファイルRowChangeEventHandler T仕入修正戻ファイルRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T仕入修正戻ファイルRowChangeEventHandler T仕入修正戻ファイルRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T仕入修正戻ファイルRowChangeEventHandler T仕入修正戻ファイルRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT仕入修正戻ファイルRow(T仕入修正戻ファイルRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入修正戻ファイルRow AddT仕入修正戻ファイルRow(
                        System.DateTime 修正処理年月日, 
                        short 本支店区分, 
                        int 処理コード, 
                        short 入力区分, 
                        int 処理番号, 
                        bool エラーフラグ, 
                        int 受発注行数, 
                        int 発注連番, 
                        int 入荷番号, 
                        int 入荷連番, 
                        int 仕入伝票番号, 
                        System.DateTime 処理日, 
                        System.DateTime 仕入日, 
                        System.DateTime 入荷日, 
                        System.DateTime 発注日, 
                        System.DateTime 納期, 
                        short 処理区, 
                        short 仕入区分コード, 
                        short システム区分, 
                        short 支払月区分コード, 
                        string 仕入先コード, 
                        string 仕名, 
                        short 仕入分類, 
                        string 事業所コード, 
                        string 仕入担当者コード, 
                        short 仕入切捨区分, 
                        short 仕入税区分, 
                        string 伝票摘要, 
                        string 商品コード, 
                        string 商名, 
                        string 規格, 
                        string 形式寸法, 
                        string 材質, 
                        short 分類, 
                        bool 在庫管理区分, 
                        string 品種コード, 
                        string メーカーコード, 
                        decimal 入数, 
                        short 単位コード, 
                        string 倉庫コード, 
                        decimal ケース数, 
                        decimal 数量, 
                        decimal 仕入単価, 
                        decimal 仕入金額, 
                        decimal 税抜仕入金額, 
                        decimal 消費税, 
                        short 仕入返品値引理由区分, 
                        short 外内税区分, 
                        decimal 消費税率, 
                        decimal 新消費税率, 
                        System.DateTime 新消費税適用, 
                        string 明細摘要, 
                        int 発注番号, 
                        string 相手先受付番号, 
                        string 自社発注番号, 
                        int 売上伝票番号, 
                        string 得意先コード, 
                        int 支払番号, 
                        bool チェック, 
                        bool 完了フラグ, 
                        short WS_ID, 
                        bool 発注更新フラグ, 
                        bool 入荷更新フラグ, 
                        bool 仕入先更新フラグ, 
                        bool 商品更新フラグ, 
                        bool 商品倉庫更新フラグ, 
                        string オペレーターコード, 
                        string 修正オペレーターコード, 
                        int 発注行, 
                        System.DateTime 処理月日, 
                        int 管理年月, 
                        int 発注行番号, 
                        int 仕入行番号, 
                        decimal 定価, 
                        decimal 原価掛率, 
                        string メーカー品番, 
                        string 納入先コード, 
                        decimal 在庫数, 
                        decimal 受注残数, 
                        decimal 発注残数, 
                        short モニター発行フラグ, 
                        string オーダー区分, 
                        string 回答コード, 
                        string 回答名, 
                        System.DateTime 回答納期, 
                        decimal 発注番号発注残数) {
                T仕入修正戻ファイルRow rowT仕入修正戻ファイルRow = ((T仕入修正戻ファイルRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        修正処理年月日,
                        本支店区分,
                        処理コード,
                        入力区分,
                        処理番号,
                        エラーフラグ,
                        受発注行数,
                        発注連番,
                        入荷番号,
                        入荷連番,
                        仕入伝票番号,
                        処理日,
                        仕入日,
                        入荷日,
                        発注日,
                        納期,
                        処理区,
                        仕入区分コード,
                        システム区分,
                        支払月区分コード,
                        仕入先コード,
                        仕名,
                        仕入分類,
                        事業所コード,
                        仕入担当者コード,
                        仕入切捨区分,
                        仕入税区分,
                        伝票摘要,
                        商品コード,
                        商名,
                        規格,
                        形式寸法,
                        材質,
                        分類,
                        在庫管理区分,
                        品種コード,
                        メーカーコード,
                        入数,
                        単位コード,
                        倉庫コード,
                        ケース数,
                        数量,
                        仕入単価,
                        仕入金額,
                        税抜仕入金額,
                        消費税,
                        仕入返品値引理由区分,
                        外内税区分,
                        消費税率,
                        新消費税率,
                        新消費税適用,
                        明細摘要,
                        発注番号,
                        相手先受付番号,
                        自社発注番号,
                        売上伝票番号,
                        得意先コード,
                        支払番号,
                        チェック,
                        完了フラグ,
                        WS_ID,
                        発注更新フラグ,
                        入荷更新フラグ,
                        仕入先更新フラグ,
                        商品更新フラグ,
                        商品倉庫更新フラグ,
                        オペレーターコード,
                        修正オペレーターコード,
                        発注行,
                        処理月日,
                        管理年月,
                        発注行番号,
                        仕入行番号,
                        定価,
                        原価掛率,
                        メーカー品番,
                        納入先コード,
                        在庫数,
                        受注残数,
                        発注残数,
                        モニター発行フラグ,
                        オーダー区分,
                        回答コード,
                        回答名,
                        回答納期,
                        発注番号発注残数};
                rowT仕入修正戻ファイルRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT仕入修正戻ファイルRow);
                return rowT仕入修正戻ファイルRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入修正戻ファイルRow FindBy仕入修正連番(int 仕入修正連番) {
                return ((T仕入修正戻ファイルRow)(this.Rows.Find(new object[] {
                            仕入修正連番})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T仕入修正戻ファイルDataTable cln = ((T仕入修正戻ファイルDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T仕入修正戻ファイルDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column仕入修正連番 = base.Columns["仕入修正連番"];
                this.column修正処理年月日 = base.Columns["修正処理年月日"];
                this.column本支店区分 = base.Columns["本支店区分"];
                this.column処理コード = base.Columns["処理コード"];
                this.column入力区分 = base.Columns["入力区分"];
                this.column処理番号 = base.Columns["処理番号"];
                this.columnエラーフラグ = base.Columns["エラーフラグ"];
                this.column受発注行数 = base.Columns["受発注行数"];
                this.column発注連番 = base.Columns["発注連番"];
                this.column入荷番号 = base.Columns["入荷番号"];
                this.column入荷連番 = base.Columns["入荷連番"];
                this.column仕入伝票番号 = base.Columns["仕入伝票番号"];
                this.column処理日 = base.Columns["処理日"];
                this.column仕入日 = base.Columns["仕入日"];
                this.column入荷日 = base.Columns["入荷日"];
                this.column発注日 = base.Columns["発注日"];
                this.column納期 = base.Columns["納期"];
                this.column処理区 = base.Columns["処理区"];
                this.column仕入区分コード = base.Columns["仕入区分コード"];
                this.columnシステム区分 = base.Columns["システム区分"];
                this.column支払月区分コード = base.Columns["支払月区分コード"];
                this.column仕入先コード = base.Columns["仕入先コード"];
                this.column仕名 = base.Columns["仕名"];
                this.column仕入分類 = base.Columns["仕入分類"];
                this.column事業所コード = base.Columns["事業所コード"];
                this.column仕入担当者コード = base.Columns["仕入担当者コード"];
                this.column仕入切捨区分 = base.Columns["仕入切捨区分"];
                this.column仕入税区分 = base.Columns["仕入税区分"];
                this.column伝票摘要 = base.Columns["伝票摘要"];
                this.column商品コード = base.Columns["商品コード"];
                this.column商名 = base.Columns["商名"];
                this.column規格 = base.Columns["規格"];
                this.column形式寸法 = base.Columns["形式寸法"];
                this.column材質 = base.Columns["材質"];
                this.column分類 = base.Columns["分類"];
                this.column在庫管理区分 = base.Columns["在庫管理区分"];
                this.column品種コード = base.Columns["品種コード"];
                this.columnメーカーコード = base.Columns["メーカーコード"];
                this.column入数 = base.Columns["入数"];
                this.column単位コード = base.Columns["単位コード"];
                this.column倉庫コード = base.Columns["倉庫コード"];
                this.columnケース数 = base.Columns["ケース数"];
                this.column数量 = base.Columns["数量"];
                this.column仕入単価 = base.Columns["仕入単価"];
                this.column仕入金額 = base.Columns["仕入金額"];
                this.column税抜仕入金額 = base.Columns["税抜仕入金額"];
                this.column消費税 = base.Columns["消費税"];
                this.column仕入返品値引理由区分 = base.Columns["仕入返品値引理由区分"];
                this.column外内税区分 = base.Columns["外内税区分"];
                this.column消費税率 = base.Columns["消費税率"];
                this.column新消費税率 = base.Columns["新消費税率"];
                this.column新消費税適用 = base.Columns["新消費税適用"];
                this.column明細摘要 = base.Columns["明細摘要"];
                this.column発注番号 = base.Columns["発注番号"];
                this.column相手先受付番号 = base.Columns["相手先受付番号"];
                this.column自社発注番号 = base.Columns["自社発注番号"];
                this.column売上伝票番号 = base.Columns["売上伝票番号"];
                this.column得意先コード = base.Columns["得意先コード"];
                this.column支払番号 = base.Columns["支払番号"];
                this.columnチェック = base.Columns["チェック"];
                this.column完了フラグ = base.Columns["完了フラグ"];
                this.columnWS_ID = base.Columns["WS_ID"];
                this.column発注更新フラグ = base.Columns["発注更新フラグ"];
                this.column入荷更新フラグ = base.Columns["入荷更新フラグ"];
                this.column仕入先更新フラグ = base.Columns["仕入先更新フラグ"];
                this.column商品更新フラグ = base.Columns["商品更新フラグ"];
                this.column商品倉庫更新フラグ = base.Columns["商品倉庫更新フラグ"];
                this.columnオペレーターコード = base.Columns["オペレーターコード"];
                this.column修正オペレーターコード = base.Columns["修正オペレーターコード"];
                this.column発注行 = base.Columns["発注行"];
                this.column処理月日 = base.Columns["処理月日"];
                this.column管理年月 = base.Columns["管理年月"];
                this.column発注行番号 = base.Columns["発注行番号"];
                this.column仕入行番号 = base.Columns["仕入行番号"];
                this.column定価 = base.Columns["定価"];
                this.column原価掛率 = base.Columns["原価掛率"];
                this.columnメーカー品番 = base.Columns["メーカー品番"];
                this.column納入先コード = base.Columns["納入先コード"];
                this.column在庫数 = base.Columns["在庫数"];
                this.column受注残数 = base.Columns["受注残数"];
                this.column発注残数 = base.Columns["発注残数"];
                this.columnモニター発行フラグ = base.Columns["モニター発行フラグ"];
                this.columnオーダー区分 = base.Columns["オーダー区分"];
                this.column回答コード = base.Columns["回答コード"];
                this.column回答名 = base.Columns["回答名"];
                this.column回答納期 = base.Columns["回答納期"];
                this.column発注番号発注残数 = base.Columns["発注番号発注残数"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column仕入修正連番 = new global::System.Data.DataColumn("仕入修正連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入修正連番);
                this.column修正処理年月日 = new global::System.Data.DataColumn("修正処理年月日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column修正処理年月日);
                this.column本支店区分 = new global::System.Data.DataColumn("本支店区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本支店区分);
                this.column処理コード = new global::System.Data.DataColumn("処理コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理コード);
                this.column入力区分 = new global::System.Data.DataColumn("入力区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入力区分);
                this.column処理番号 = new global::System.Data.DataColumn("処理番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理番号);
                this.columnエラーフラグ = new global::System.Data.DataColumn("エラーフラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnエラーフラグ);
                this.column受発注行数 = new global::System.Data.DataColumn("受発注行数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受発注行数);
                this.column発注連番 = new global::System.Data.DataColumn("発注連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注連番);
                this.column入荷番号 = new global::System.Data.DataColumn("入荷番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入荷番号);
                this.column入荷連番 = new global::System.Data.DataColumn("入荷連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入荷連番);
                this.column仕入伝票番号 = new global::System.Data.DataColumn("仕入伝票番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入伝票番号);
                this.column処理日 = new global::System.Data.DataColumn("処理日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理日);
                this.column仕入日 = new global::System.Data.DataColumn("仕入日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入日);
                this.column入荷日 = new global::System.Data.DataColumn("入荷日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入荷日);
                this.column発注日 = new global::System.Data.DataColumn("発注日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注日);
                this.column納期 = new global::System.Data.DataColumn("納期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納期);
                this.column処理区 = new global::System.Data.DataColumn("処理区", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理区);
                this.column仕入区分コード = new global::System.Data.DataColumn("仕入区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入区分コード);
                this.columnシステム区分 = new global::System.Data.DataColumn("システム区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnシステム区分);
                this.column支払月区分コード = new global::System.Data.DataColumn("支払月区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払月区分コード);
                this.column仕入先コード = new global::System.Data.DataColumn("仕入先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入先コード);
                this.column仕名 = new global::System.Data.DataColumn("仕名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕名);
                this.column仕入分類 = new global::System.Data.DataColumn("仕入分類", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入分類);
                this.column事業所コード = new global::System.Data.DataColumn("事業所コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column事業所コード);
                this.column仕入担当者コード = new global::System.Data.DataColumn("仕入担当者コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入担当者コード);
                this.column仕入切捨区分 = new global::System.Data.DataColumn("仕入切捨区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入切捨区分);
                this.column仕入税区分 = new global::System.Data.DataColumn("仕入税区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入税区分);
                this.column伝票摘要 = new global::System.Data.DataColumn("伝票摘要", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column伝票摘要);
                this.column商品コード = new global::System.Data.DataColumn("商品コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品コード);
                this.column商名 = new global::System.Data.DataColumn("商名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商名);
                this.column規格 = new global::System.Data.DataColumn("規格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column規格);
                this.column形式寸法 = new global::System.Data.DataColumn("形式寸法", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column形式寸法);
                this.column材質 = new global::System.Data.DataColumn("材質", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材質);
                this.column分類 = new global::System.Data.DataColumn("分類", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分類);
                this.column在庫管理区分 = new global::System.Data.DataColumn("在庫管理区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column在庫管理区分);
                this.column品種コード = new global::System.Data.DataColumn("品種コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column品種コード);
                this.columnメーカーコード = new global::System.Data.DataColumn("メーカーコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnメーカーコード);
                this.column入数 = new global::System.Data.DataColumn("入数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入数);
                this.column単位コード = new global::System.Data.DataColumn("単位コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column単位コード);
                this.column倉庫コード = new global::System.Data.DataColumn("倉庫コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column倉庫コード);
                this.columnケース数 = new global::System.Data.DataColumn("ケース数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnケース数);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column仕入単価 = new global::System.Data.DataColumn("仕入単価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入単価);
                this.column仕入金額 = new global::System.Data.DataColumn("仕入金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入金額);
                this.column税抜仕入金額 = new global::System.Data.DataColumn("税抜仕入金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column税抜仕入金額);
                this.column消費税 = new global::System.Data.DataColumn("消費税", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column消費税);
                this.column仕入返品値引理由区分 = new global::System.Data.DataColumn("仕入返品値引理由区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入返品値引理由区分);
                this.column外内税区分 = new global::System.Data.DataColumn("外内税区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column外内税区分);
                this.column消費税率 = new global::System.Data.DataColumn("消費税率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column消費税率);
                this.column新消費税率 = new global::System.Data.DataColumn("新消費税率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column新消費税率);
                this.column新消費税適用 = new global::System.Data.DataColumn("新消費税適用", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column新消費税適用);
                this.column明細摘要 = new global::System.Data.DataColumn("明細摘要", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column明細摘要);
                this.column発注番号 = new global::System.Data.DataColumn("発注番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注番号);
                this.column相手先受付番号 = new global::System.Data.DataColumn("相手先受付番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column相手先受付番号);
                this.column自社発注番号 = new global::System.Data.DataColumn("自社発注番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column自社発注番号);
                this.column売上伝票番号 = new global::System.Data.DataColumn("売上伝票番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上伝票番号);
                this.column得意先コード = new global::System.Data.DataColumn("得意先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column得意先コード);
                this.column支払番号 = new global::System.Data.DataColumn("支払番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払番号);
                this.columnチェック = new global::System.Data.DataColumn("チェック", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnチェック);
                this.column完了フラグ = new global::System.Data.DataColumn("完了フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column完了フラグ);
                this.columnWS_ID = new global::System.Data.DataColumn("WS_ID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWS_ID);
                this.column発注更新フラグ = new global::System.Data.DataColumn("発注更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注更新フラグ);
                this.column入荷更新フラグ = new global::System.Data.DataColumn("入荷更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入荷更新フラグ);
                this.column仕入先更新フラグ = new global::System.Data.DataColumn("仕入先更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入先更新フラグ);
                this.column商品更新フラグ = new global::System.Data.DataColumn("商品更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品更新フラグ);
                this.column商品倉庫更新フラグ = new global::System.Data.DataColumn("商品倉庫更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品倉庫更新フラグ);
                this.columnオペレーターコード = new global::System.Data.DataColumn("オペレーターコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnオペレーターコード);
                this.column修正オペレーターコード = new global::System.Data.DataColumn("修正オペレーターコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column修正オペレーターコード);
                this.column発注行 = new global::System.Data.DataColumn("発注行", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注行);
                this.column処理月日 = new global::System.Data.DataColumn("処理月日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理月日);
                this.column管理年月 = new global::System.Data.DataColumn("管理年月", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column管理年月);
                this.column発注行番号 = new global::System.Data.DataColumn("発注行番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注行番号);
                this.column仕入行番号 = new global::System.Data.DataColumn("仕入行番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入行番号);
                this.column定価 = new global::System.Data.DataColumn("定価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column定価);
                this.column原価掛率 = new global::System.Data.DataColumn("原価掛率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column原価掛率);
                this.columnメーカー品番 = new global::System.Data.DataColumn("メーカー品番", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnメーカー品番);
                this.column納入先コード = new global::System.Data.DataColumn("納入先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納入先コード);
                this.column在庫数 = new global::System.Data.DataColumn("在庫数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column在庫数);
                this.column受注残数 = new global::System.Data.DataColumn("受注残数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注残数);
                this.column発注残数 = new global::System.Data.DataColumn("発注残数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注残数);
                this.columnモニター発行フラグ = new global::System.Data.DataColumn("モニター発行フラグ", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnモニター発行フラグ);
                this.columnオーダー区分 = new global::System.Data.DataColumn("オーダー区分", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnオーダー区分);
                this.column回答コード = new global::System.Data.DataColumn("回答コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column回答コード);
                this.column回答名 = new global::System.Data.DataColumn("回答名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column回答名);
                this.column回答納期 = new global::System.Data.DataColumn("回答納期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column回答納期);
                this.column発注番号発注残数 = new global::System.Data.DataColumn("発注番号発注残数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注番号発注残数);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column仕入修正連番}, true));
                this.column仕入修正連番.AutoIncrement = true;
                this.column仕入修正連番.AutoIncrementSeed = -1;
                this.column仕入修正連番.AutoIncrementStep = -1;
                this.column仕入修正連番.AllowDBNull = false;
                this.column仕入修正連番.ReadOnly = true;
                this.column仕入修正連番.Unique = true;
                this.columnエラーフラグ.AllowDBNull = false;
                this.columnシステム区分.AllowDBNull = false;
                this.column仕入先コード.MaxLength = 8;
                this.column仕名.MaxLength = 32;
                this.column事業所コード.MaxLength = 8;
                this.column仕入担当者コード.MaxLength = 6;
                this.column伝票摘要.MaxLength = 40;
                this.column商品コード.MaxLength = 13;
                this.column商名.MaxLength = 40;
                this.column規格.MaxLength = 24;
                this.column形式寸法.MaxLength = 40;
                this.column材質.MaxLength = 40;
                this.column在庫管理区分.AllowDBNull = false;
                this.column品種コード.MaxLength = 6;
                this.columnメーカーコード.MaxLength = 8;
                this.column倉庫コード.MaxLength = 6;
                this.column明細摘要.MaxLength = 40;
                this.column相手先受付番号.MaxLength = 20;
                this.column自社発注番号.MaxLength = 20;
                this.column得意先コード.MaxLength = 8;
                this.columnチェック.AllowDBNull = false;
                this.column完了フラグ.AllowDBNull = false;
                this.column発注更新フラグ.AllowDBNull = false;
                this.column入荷更新フラグ.AllowDBNull = false;
                this.column仕入先更新フラグ.AllowDBNull = false;
                this.column商品更新フラグ.AllowDBNull = false;
                this.column商品倉庫更新フラグ.AllowDBNull = false;
                this.columnオペレーターコード.MaxLength = 20;
                this.column修正オペレーターコード.MaxLength = 20;
                this.columnメーカー品番.MaxLength = 20;
                this.column納入先コード.MaxLength = 20;
                this.columnオーダー区分.MaxLength = 1;
                this.column回答コード.MaxLength = 6;
                this.column回答名.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入修正戻ファイルRow NewT仕入修正戻ファイルRow() {
                return ((T仕入修正戻ファイルRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T仕入修正戻ファイルRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T仕入修正戻ファイルRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T仕入修正戻ファイルRowChanged != null)) {
                    this.T仕入修正戻ファイルRowChanged(this, new T仕入修正戻ファイルRowChangeEvent(((T仕入修正戻ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T仕入修正戻ファイルRowChanging != null)) {
                    this.T仕入修正戻ファイルRowChanging(this, new T仕入修正戻ファイルRowChangeEvent(((T仕入修正戻ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T仕入修正戻ファイルRowDeleted != null)) {
                    this.T仕入修正戻ファイルRowDeleted(this, new T仕入修正戻ファイルRowChangeEvent(((T仕入修正戻ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T仕入修正戻ファイルRowDeleting != null)) {
                    this.T仕入修正戻ファイルRowDeleting(this, new T仕入修正戻ファイルRowChangeEvent(((T仕入修正戻ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT仕入修正戻ファイルRow(T仕入修正戻ファイルRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                仕入計上DataSet ds = new 仕入計上DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T仕入修正戻ファイルDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T仕入明細ファイルDataTable : global::System.Data.TypedTableBase<T仕入明細ファイルRow> {
            
            private global::System.Data.DataColumn column仕入連番;
            
            private global::System.Data.DataColumn column本支店区分;
            
            private global::System.Data.DataColumn column処理コード;
            
            private global::System.Data.DataColumn column入力区分;
            
            private global::System.Data.DataColumn column処理番号;
            
            private global::System.Data.DataColumn columnエラーフラグ;
            
            private global::System.Data.DataColumn column受発注行数;
            
            private global::System.Data.DataColumn column発注連番;
            
            private global::System.Data.DataColumn column入荷番号;
            
            private global::System.Data.DataColumn column入荷連番;
            
            private global::System.Data.DataColumn column仕入伝票番号;
            
            private global::System.Data.DataColumn column処理日;
            
            private global::System.Data.DataColumn column仕入日;
            
            private global::System.Data.DataColumn column入荷日;
            
            private global::System.Data.DataColumn column発注日;
            
            private global::System.Data.DataColumn column納期;
            
            private global::System.Data.DataColumn column処理区;
            
            private global::System.Data.DataColumn column仕入区分コード;
            
            private global::System.Data.DataColumn columnシステム区分;
            
            private global::System.Data.DataColumn column支払月区分コード;
            
            private global::System.Data.DataColumn column仕入先コード;
            
            private global::System.Data.DataColumn column仕名;
            
            private global::System.Data.DataColumn column仕入分類;
            
            private global::System.Data.DataColumn column事業所コード;
            
            private global::System.Data.DataColumn column仕入担当者コード;
            
            private global::System.Data.DataColumn column仕入切捨区分;
            
            private global::System.Data.DataColumn column仕入税区分;
            
            private global::System.Data.DataColumn column伝票摘要;
            
            private global::System.Data.DataColumn column商品コード;
            
            private global::System.Data.DataColumn column商名;
            
            private global::System.Data.DataColumn column規格;
            
            private global::System.Data.DataColumn column形式寸法;
            
            private global::System.Data.DataColumn column材質;
            
            private global::System.Data.DataColumn column分類;
            
            private global::System.Data.DataColumn column在庫管理区分;
            
            private global::System.Data.DataColumn column品種コード;
            
            private global::System.Data.DataColumn columnメーカーコード;
            
            private global::System.Data.DataColumn column入数;
            
            private global::System.Data.DataColumn column単位コード;
            
            private global::System.Data.DataColumn column倉庫コード;
            
            private global::System.Data.DataColumn columnケース数;
            
            private global::System.Data.DataColumn column数量;
            
            private global::System.Data.DataColumn column仕入単価;
            
            private global::System.Data.DataColumn column仕入金額;
            
            private global::System.Data.DataColumn column税抜仕入金額;
            
            private global::System.Data.DataColumn column消費税;
            
            private global::System.Data.DataColumn column仕入返品値引理由区分;
            
            private global::System.Data.DataColumn column外内税区分;
            
            private global::System.Data.DataColumn column消費税率;
            
            private global::System.Data.DataColumn column新消費税率;
            
            private global::System.Data.DataColumn column新消費税適用;
            
            private global::System.Data.DataColumn column明細摘要;
            
            private global::System.Data.DataColumn column発注番号;
            
            private global::System.Data.DataColumn column相手先受付番号;
            
            private global::System.Data.DataColumn column自社発注番号;
            
            private global::System.Data.DataColumn column売上伝票番号;
            
            private global::System.Data.DataColumn column得意先コード;
            
            private global::System.Data.DataColumn column支払番号;
            
            private global::System.Data.DataColumn columnチェック;
            
            private global::System.Data.DataColumn column完了フラグ;
            
            private global::System.Data.DataColumn columnWS_ID;
            
            private global::System.Data.DataColumn column発注更新フラグ;
            
            private global::System.Data.DataColumn column入荷更新フラグ;
            
            private global::System.Data.DataColumn column仕入先更新フラグ;
            
            private global::System.Data.DataColumn column商品更新フラグ;
            
            private global::System.Data.DataColumn column商品倉庫更新フラグ;
            
            private global::System.Data.DataColumn columnオペレーターコード;
            
            private global::System.Data.DataColumn column修正オペレーターコード;
            
            private global::System.Data.DataColumn column発注行;
            
            private global::System.Data.DataColumn column処理月日;
            
            private global::System.Data.DataColumn column管理年月;
            
            private global::System.Data.DataColumn column一括消費税締日;
            
            private global::System.Data.DataColumn column発注行番号;
            
            private global::System.Data.DataColumn column仕入行番号;
            
            private global::System.Data.DataColumn column定価;
            
            private global::System.Data.DataColumn column原価掛率;
            
            private global::System.Data.DataColumn columnメーカー品番;
            
            private global::System.Data.DataColumn column納入先コード;
            
            private global::System.Data.DataColumn column在庫数;
            
            private global::System.Data.DataColumn column受注残数;
            
            private global::System.Data.DataColumn column発注残数;
            
            private global::System.Data.DataColumn columnモニター発行フラグ;
            
            private global::System.Data.DataColumn columnオーダー区分;
            
            private global::System.Data.DataColumn column回答コード;
            
            private global::System.Data.DataColumn column回答名;
            
            private global::System.Data.DataColumn column回答納期;
            
            private global::System.Data.DataColumn column発注番号発注残数;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入明細ファイルDataTable() {
                this.TableName = "T仕入明細ファイル";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T仕入明細ファイルDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T仕入明細ファイルDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入連番Column {
                get {
                    return this.column仕入連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 本支店区分Column {
                get {
                    return this.column本支店区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理コードColumn {
                get {
                    return this.column処理コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入力区分Column {
                get {
                    return this.column入力区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理番号Column {
                get {
                    return this.column処理番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn エラーフラグColumn {
                get {
                    return this.columnエラーフラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受発注行数Column {
                get {
                    return this.column受発注行数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注連番Column {
                get {
                    return this.column発注連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入荷番号Column {
                get {
                    return this.column入荷番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入荷連番Column {
                get {
                    return this.column入荷連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入伝票番号Column {
                get {
                    return this.column仕入伝票番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理日Column {
                get {
                    return this.column処理日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入日Column {
                get {
                    return this.column仕入日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入荷日Column {
                get {
                    return this.column入荷日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注日Column {
                get {
                    return this.column発注日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納期Column {
                get {
                    return this.column納期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理区Column {
                get {
                    return this.column処理区;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入区分コードColumn {
                get {
                    return this.column仕入区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn システム区分Column {
                get {
                    return this.columnシステム区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払月区分コードColumn {
                get {
                    return this.column支払月区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入先コードColumn {
                get {
                    return this.column仕入先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕名Column {
                get {
                    return this.column仕名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入分類Column {
                get {
                    return this.column仕入分類;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 事業所コードColumn {
                get {
                    return this.column事業所コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入担当者コードColumn {
                get {
                    return this.column仕入担当者コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入切捨区分Column {
                get {
                    return this.column仕入切捨区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入税区分Column {
                get {
                    return this.column仕入税区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 伝票摘要Column {
                get {
                    return this.column伝票摘要;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品コードColumn {
                get {
                    return this.column商品コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商名Column {
                get {
                    return this.column商名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 規格Column {
                get {
                    return this.column規格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 形式寸法Column {
                get {
                    return this.column形式寸法;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 材質Column {
                get {
                    return this.column材質;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 分類Column {
                get {
                    return this.column分類;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 在庫管理区分Column {
                get {
                    return this.column在庫管理区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 品種コードColumn {
                get {
                    return this.column品種コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn メーカーコードColumn {
                get {
                    return this.columnメーカーコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入数Column {
                get {
                    return this.column入数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 単位コードColumn {
                get {
                    return this.column単位コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 倉庫コードColumn {
                get {
                    return this.column倉庫コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ケース数Column {
                get {
                    return this.columnケース数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入単価Column {
                get {
                    return this.column仕入単価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入金額Column {
                get {
                    return this.column仕入金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 税抜仕入金額Column {
                get {
                    return this.column税抜仕入金額;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 消費税Column {
                get {
                    return this.column消費税;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入返品値引理由区分Column {
                get {
                    return this.column仕入返品値引理由区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 外内税区分Column {
                get {
                    return this.column外内税区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 消費税率Column {
                get {
                    return this.column消費税率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 新消費税率Column {
                get {
                    return this.column新消費税率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 新消費税適用Column {
                get {
                    return this.column新消費税適用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 明細摘要Column {
                get {
                    return this.column明細摘要;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注番号Column {
                get {
                    return this.column発注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 相手先受付番号Column {
                get {
                    return this.column相手先受付番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 自社発注番号Column {
                get {
                    return this.column自社発注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上伝票番号Column {
                get {
                    return this.column売上伝票番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 得意先コードColumn {
                get {
                    return this.column得意先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払番号Column {
                get {
                    return this.column支払番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn チェックColumn {
                get {
                    return this.columnチェック;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 完了フラグColumn {
                get {
                    return this.column完了フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WS_IDColumn {
                get {
                    return this.columnWS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注更新フラグColumn {
                get {
                    return this.column発注更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入荷更新フラグColumn {
                get {
                    return this.column入荷更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入先更新フラグColumn {
                get {
                    return this.column仕入先更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品更新フラグColumn {
                get {
                    return this.column商品更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商品倉庫更新フラグColumn {
                get {
                    return this.column商品倉庫更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn オペレーターコードColumn {
                get {
                    return this.columnオペレーターコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 修正オペレーターコードColumn {
                get {
                    return this.column修正オペレーターコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注行Column {
                get {
                    return this.column発注行;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理月日Column {
                get {
                    return this.column処理月日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 管理年月Column {
                get {
                    return this.column管理年月;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 一括消費税締日Column {
                get {
                    return this.column一括消費税締日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注行番号Column {
                get {
                    return this.column発注行番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入行番号Column {
                get {
                    return this.column仕入行番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 定価Column {
                get {
                    return this.column定価;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 原価掛率Column {
                get {
                    return this.column原価掛率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn メーカー品番Column {
                get {
                    return this.columnメーカー品番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納入先コードColumn {
                get {
                    return this.column納入先コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 在庫数Column {
                get {
                    return this.column在庫数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注残数Column {
                get {
                    return this.column受注残数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注残数Column {
                get {
                    return this.column発注残数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn モニター発行フラグColumn {
                get {
                    return this.columnモニター発行フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn オーダー区分Column {
                get {
                    return this.columnオーダー区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 回答コードColumn {
                get {
                    return this.column回答コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 回答名Column {
                get {
                    return this.column回答名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 回答納期Column {
                get {
                    return this.column回答納期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注番号発注残数Column {
                get {
                    return this.column発注番号発注残数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入明細ファイルRow this[int index] {
                get {
                    return ((T仕入明細ファイルRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T仕入明細ファイルRowChangeEventHandler T仕入明細ファイルRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T仕入明細ファイルRowChangeEventHandler T仕入明細ファイルRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T仕入明細ファイルRowChangeEventHandler T仕入明細ファイルRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T仕入明細ファイルRowChangeEventHandler T仕入明細ファイルRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT仕入明細ファイルRow(T仕入明細ファイルRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入明細ファイルRow AddT仕入明細ファイルRow(
                        short 本支店区分, 
                        int 処理コード, 
                        short 入力区分, 
                        int 処理番号, 
                        bool エラーフラグ, 
                        int 受発注行数, 
                        int 発注連番, 
                        int 入荷番号, 
                        int 入荷連番, 
                        int 仕入伝票番号, 
                        System.DateTime 処理日, 
                        System.DateTime 仕入日, 
                        System.DateTime 入荷日, 
                        System.DateTime 発注日, 
                        System.DateTime 納期, 
                        short 処理区, 
                        short 仕入区分コード, 
                        short システム区分, 
                        short 支払月区分コード, 
                        string 仕入先コード, 
                        string 仕名, 
                        short 仕入分類, 
                        string 事業所コード, 
                        string 仕入担当者コード, 
                        short 仕入切捨区分, 
                        short 仕入税区分, 
                        string 伝票摘要, 
                        string 商品コード, 
                        string 商名, 
                        string 規格, 
                        string 形式寸法, 
                        string 材質, 
                        short 分類, 
                        bool 在庫管理区分, 
                        string 品種コード, 
                        string メーカーコード, 
                        decimal 入数, 
                        short 単位コード, 
                        string 倉庫コード, 
                        decimal ケース数, 
                        decimal 数量, 
                        decimal 仕入単価, 
                        decimal 仕入金額, 
                        decimal 税抜仕入金額, 
                        decimal 消費税, 
                        short 仕入返品値引理由区分, 
                        short 外内税区分, 
                        decimal 消費税率, 
                        decimal 新消費税率, 
                        System.DateTime 新消費税適用, 
                        string 明細摘要, 
                        int 発注番号, 
                        string 相手先受付番号, 
                        string 自社発注番号, 
                        int 売上伝票番号, 
                        string 得意先コード, 
                        int 支払番号, 
                        bool チェック, 
                        bool 完了フラグ, 
                        short WS_ID, 
                        bool 発注更新フラグ, 
                        bool 入荷更新フラグ, 
                        bool 仕入先更新フラグ, 
                        bool 商品更新フラグ, 
                        bool 商品倉庫更新フラグ, 
                        string オペレーターコード, 
                        string 修正オペレーターコード, 
                        int 発注行, 
                        System.DateTime 処理月日, 
                        int 管理年月, 
                        short 一括消費税締日, 
                        int 発注行番号, 
                        int 仕入行番号, 
                        decimal 定価, 
                        decimal 原価掛率, 
                        string メーカー品番, 
                        string 納入先コード, 
                        decimal 在庫数, 
                        decimal 受注残数, 
                        decimal 発注残数, 
                        short モニター発行フラグ, 
                        string オーダー区分, 
                        string 回答コード, 
                        string 回答名, 
                        System.DateTime 回答納期, 
                        decimal 発注番号発注残数) {
                T仕入明細ファイルRow rowT仕入明細ファイルRow = ((T仕入明細ファイルRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        本支店区分,
                        処理コード,
                        入力区分,
                        処理番号,
                        エラーフラグ,
                        受発注行数,
                        発注連番,
                        入荷番号,
                        入荷連番,
                        仕入伝票番号,
                        処理日,
                        仕入日,
                        入荷日,
                        発注日,
                        納期,
                        処理区,
                        仕入区分コード,
                        システム区分,
                        支払月区分コード,
                        仕入先コード,
                        仕名,
                        仕入分類,
                        事業所コード,
                        仕入担当者コード,
                        仕入切捨区分,
                        仕入税区分,
                        伝票摘要,
                        商品コード,
                        商名,
                        規格,
                        形式寸法,
                        材質,
                        分類,
                        在庫管理区分,
                        品種コード,
                        メーカーコード,
                        入数,
                        単位コード,
                        倉庫コード,
                        ケース数,
                        数量,
                        仕入単価,
                        仕入金額,
                        税抜仕入金額,
                        消費税,
                        仕入返品値引理由区分,
                        外内税区分,
                        消費税率,
                        新消費税率,
                        新消費税適用,
                        明細摘要,
                        発注番号,
                        相手先受付番号,
                        自社発注番号,
                        売上伝票番号,
                        得意先コード,
                        支払番号,
                        チェック,
                        完了フラグ,
                        WS_ID,
                        発注更新フラグ,
                        入荷更新フラグ,
                        仕入先更新フラグ,
                        商品更新フラグ,
                        商品倉庫更新フラグ,
                        オペレーターコード,
                        修正オペレーターコード,
                        発注行,
                        処理月日,
                        管理年月,
                        一括消費税締日,
                        発注行番号,
                        仕入行番号,
                        定価,
                        原価掛率,
                        メーカー品番,
                        納入先コード,
                        在庫数,
                        受注残数,
                        発注残数,
                        モニター発行フラグ,
                        オーダー区分,
                        回答コード,
                        回答名,
                        回答納期,
                        発注番号発注残数};
                rowT仕入明細ファイルRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT仕入明細ファイルRow);
                return rowT仕入明細ファイルRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入明細ファイルRow FindBy仕入連番(int 仕入連番) {
                return ((T仕入明細ファイルRow)(this.Rows.Find(new object[] {
                            仕入連番})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T仕入明細ファイルDataTable cln = ((T仕入明細ファイルDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T仕入明細ファイルDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column仕入連番 = base.Columns["仕入連番"];
                this.column本支店区分 = base.Columns["本支店区分"];
                this.column処理コード = base.Columns["処理コード"];
                this.column入力区分 = base.Columns["入力区分"];
                this.column処理番号 = base.Columns["処理番号"];
                this.columnエラーフラグ = base.Columns["エラーフラグ"];
                this.column受発注行数 = base.Columns["受発注行数"];
                this.column発注連番 = base.Columns["発注連番"];
                this.column入荷番号 = base.Columns["入荷番号"];
                this.column入荷連番 = base.Columns["入荷連番"];
                this.column仕入伝票番号 = base.Columns["仕入伝票番号"];
                this.column処理日 = base.Columns["処理日"];
                this.column仕入日 = base.Columns["仕入日"];
                this.column入荷日 = base.Columns["入荷日"];
                this.column発注日 = base.Columns["発注日"];
                this.column納期 = base.Columns["納期"];
                this.column処理区 = base.Columns["処理区"];
                this.column仕入区分コード = base.Columns["仕入区分コード"];
                this.columnシステム区分 = base.Columns["システム区分"];
                this.column支払月区分コード = base.Columns["支払月区分コード"];
                this.column仕入先コード = base.Columns["仕入先コード"];
                this.column仕名 = base.Columns["仕名"];
                this.column仕入分類 = base.Columns["仕入分類"];
                this.column事業所コード = base.Columns["事業所コード"];
                this.column仕入担当者コード = base.Columns["仕入担当者コード"];
                this.column仕入切捨区分 = base.Columns["仕入切捨区分"];
                this.column仕入税区分 = base.Columns["仕入税区分"];
                this.column伝票摘要 = base.Columns["伝票摘要"];
                this.column商品コード = base.Columns["商品コード"];
                this.column商名 = base.Columns["商名"];
                this.column規格 = base.Columns["規格"];
                this.column形式寸法 = base.Columns["形式寸法"];
                this.column材質 = base.Columns["材質"];
                this.column分類 = base.Columns["分類"];
                this.column在庫管理区分 = base.Columns["在庫管理区分"];
                this.column品種コード = base.Columns["品種コード"];
                this.columnメーカーコード = base.Columns["メーカーコード"];
                this.column入数 = base.Columns["入数"];
                this.column単位コード = base.Columns["単位コード"];
                this.column倉庫コード = base.Columns["倉庫コード"];
                this.columnケース数 = base.Columns["ケース数"];
                this.column数量 = base.Columns["数量"];
                this.column仕入単価 = base.Columns["仕入単価"];
                this.column仕入金額 = base.Columns["仕入金額"];
                this.column税抜仕入金額 = base.Columns["税抜仕入金額"];
                this.column消費税 = base.Columns["消費税"];
                this.column仕入返品値引理由区分 = base.Columns["仕入返品値引理由区分"];
                this.column外内税区分 = base.Columns["外内税区分"];
                this.column消費税率 = base.Columns["消費税率"];
                this.column新消費税率 = base.Columns["新消費税率"];
                this.column新消費税適用 = base.Columns["新消費税適用"];
                this.column明細摘要 = base.Columns["明細摘要"];
                this.column発注番号 = base.Columns["発注番号"];
                this.column相手先受付番号 = base.Columns["相手先受付番号"];
                this.column自社発注番号 = base.Columns["自社発注番号"];
                this.column売上伝票番号 = base.Columns["売上伝票番号"];
                this.column得意先コード = base.Columns["得意先コード"];
                this.column支払番号 = base.Columns["支払番号"];
                this.columnチェック = base.Columns["チェック"];
                this.column完了フラグ = base.Columns["完了フラグ"];
                this.columnWS_ID = base.Columns["WS_ID"];
                this.column発注更新フラグ = base.Columns["発注更新フラグ"];
                this.column入荷更新フラグ = base.Columns["入荷更新フラグ"];
                this.column仕入先更新フラグ = base.Columns["仕入先更新フラグ"];
                this.column商品更新フラグ = base.Columns["商品更新フラグ"];
                this.column商品倉庫更新フラグ = base.Columns["商品倉庫更新フラグ"];
                this.columnオペレーターコード = base.Columns["オペレーターコード"];
                this.column修正オペレーターコード = base.Columns["修正オペレーターコード"];
                this.column発注行 = base.Columns["発注行"];
                this.column処理月日 = base.Columns["処理月日"];
                this.column管理年月 = base.Columns["管理年月"];
                this.column一括消費税締日 = base.Columns["一括消費税締日"];
                this.column発注行番号 = base.Columns["発注行番号"];
                this.column仕入行番号 = base.Columns["仕入行番号"];
                this.column定価 = base.Columns["定価"];
                this.column原価掛率 = base.Columns["原価掛率"];
                this.columnメーカー品番 = base.Columns["メーカー品番"];
                this.column納入先コード = base.Columns["納入先コード"];
                this.column在庫数 = base.Columns["在庫数"];
                this.column受注残数 = base.Columns["受注残数"];
                this.column発注残数 = base.Columns["発注残数"];
                this.columnモニター発行フラグ = base.Columns["モニター発行フラグ"];
                this.columnオーダー区分 = base.Columns["オーダー区分"];
                this.column回答コード = base.Columns["回答コード"];
                this.column回答名 = base.Columns["回答名"];
                this.column回答納期 = base.Columns["回答納期"];
                this.column発注番号発注残数 = base.Columns["発注番号発注残数"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column仕入連番 = new global::System.Data.DataColumn("仕入連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入連番);
                this.column本支店区分 = new global::System.Data.DataColumn("本支店区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本支店区分);
                this.column処理コード = new global::System.Data.DataColumn("処理コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理コード);
                this.column入力区分 = new global::System.Data.DataColumn("入力区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入力区分);
                this.column処理番号 = new global::System.Data.DataColumn("処理番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理番号);
                this.columnエラーフラグ = new global::System.Data.DataColumn("エラーフラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnエラーフラグ);
                this.column受発注行数 = new global::System.Data.DataColumn("受発注行数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受発注行数);
                this.column発注連番 = new global::System.Data.DataColumn("発注連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注連番);
                this.column入荷番号 = new global::System.Data.DataColumn("入荷番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入荷番号);
                this.column入荷連番 = new global::System.Data.DataColumn("入荷連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入荷連番);
                this.column仕入伝票番号 = new global::System.Data.DataColumn("仕入伝票番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入伝票番号);
                this.column処理日 = new global::System.Data.DataColumn("処理日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理日);
                this.column仕入日 = new global::System.Data.DataColumn("仕入日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入日);
                this.column入荷日 = new global::System.Data.DataColumn("入荷日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入荷日);
                this.column発注日 = new global::System.Data.DataColumn("発注日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注日);
                this.column納期 = new global::System.Data.DataColumn("納期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納期);
                this.column処理区 = new global::System.Data.DataColumn("処理区", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理区);
                this.column仕入区分コード = new global::System.Data.DataColumn("仕入区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入区分コード);
                this.columnシステム区分 = new global::System.Data.DataColumn("システム区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnシステム区分);
                this.column支払月区分コード = new global::System.Data.DataColumn("支払月区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払月区分コード);
                this.column仕入先コード = new global::System.Data.DataColumn("仕入先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入先コード);
                this.column仕名 = new global::System.Data.DataColumn("仕名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕名);
                this.column仕入分類 = new global::System.Data.DataColumn("仕入分類", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入分類);
                this.column事業所コード = new global::System.Data.DataColumn("事業所コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column事業所コード);
                this.column仕入担当者コード = new global::System.Data.DataColumn("仕入担当者コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入担当者コード);
                this.column仕入切捨区分 = new global::System.Data.DataColumn("仕入切捨区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入切捨区分);
                this.column仕入税区分 = new global::System.Data.DataColumn("仕入税区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入税区分);
                this.column伝票摘要 = new global::System.Data.DataColumn("伝票摘要", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column伝票摘要);
                this.column商品コード = new global::System.Data.DataColumn("商品コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品コード);
                this.column商名 = new global::System.Data.DataColumn("商名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商名);
                this.column規格 = new global::System.Data.DataColumn("規格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column規格);
                this.column形式寸法 = new global::System.Data.DataColumn("形式寸法", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column形式寸法);
                this.column材質 = new global::System.Data.DataColumn("材質", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材質);
                this.column分類 = new global::System.Data.DataColumn("分類", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分類);
                this.column在庫管理区分 = new global::System.Data.DataColumn("在庫管理区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column在庫管理区分);
                this.column品種コード = new global::System.Data.DataColumn("品種コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column品種コード);
                this.columnメーカーコード = new global::System.Data.DataColumn("メーカーコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnメーカーコード);
                this.column入数 = new global::System.Data.DataColumn("入数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入数);
                this.column単位コード = new global::System.Data.DataColumn("単位コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column単位コード);
                this.column倉庫コード = new global::System.Data.DataColumn("倉庫コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column倉庫コード);
                this.columnケース数 = new global::System.Data.DataColumn("ケース数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnケース数);
                this.column数量 = new global::System.Data.DataColumn("数量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量);
                this.column仕入単価 = new global::System.Data.DataColumn("仕入単価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入単価);
                this.column仕入金額 = new global::System.Data.DataColumn("仕入金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入金額);
                this.column税抜仕入金額 = new global::System.Data.DataColumn("税抜仕入金額", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column税抜仕入金額);
                this.column消費税 = new global::System.Data.DataColumn("消費税", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column消費税);
                this.column仕入返品値引理由区分 = new global::System.Data.DataColumn("仕入返品値引理由区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入返品値引理由区分);
                this.column外内税区分 = new global::System.Data.DataColumn("外内税区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column外内税区分);
                this.column消費税率 = new global::System.Data.DataColumn("消費税率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column消費税率);
                this.column新消費税率 = new global::System.Data.DataColumn("新消費税率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column新消費税率);
                this.column新消費税適用 = new global::System.Data.DataColumn("新消費税適用", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column新消費税適用);
                this.column明細摘要 = new global::System.Data.DataColumn("明細摘要", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column明細摘要);
                this.column発注番号 = new global::System.Data.DataColumn("発注番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注番号);
                this.column相手先受付番号 = new global::System.Data.DataColumn("相手先受付番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column相手先受付番号);
                this.column自社発注番号 = new global::System.Data.DataColumn("自社発注番号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column自社発注番号);
                this.column売上伝票番号 = new global::System.Data.DataColumn("売上伝票番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上伝票番号);
                this.column得意先コード = new global::System.Data.DataColumn("得意先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column得意先コード);
                this.column支払番号 = new global::System.Data.DataColumn("支払番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払番号);
                this.columnチェック = new global::System.Data.DataColumn("チェック", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnチェック);
                this.column完了フラグ = new global::System.Data.DataColumn("完了フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column完了フラグ);
                this.columnWS_ID = new global::System.Data.DataColumn("WS_ID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWS_ID);
                this.column発注更新フラグ = new global::System.Data.DataColumn("発注更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注更新フラグ);
                this.column入荷更新フラグ = new global::System.Data.DataColumn("入荷更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入荷更新フラグ);
                this.column仕入先更新フラグ = new global::System.Data.DataColumn("仕入先更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入先更新フラグ);
                this.column商品更新フラグ = new global::System.Data.DataColumn("商品更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品更新フラグ);
                this.column商品倉庫更新フラグ = new global::System.Data.DataColumn("商品倉庫更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商品倉庫更新フラグ);
                this.columnオペレーターコード = new global::System.Data.DataColumn("オペレーターコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnオペレーターコード);
                this.column修正オペレーターコード = new global::System.Data.DataColumn("修正オペレーターコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column修正オペレーターコード);
                this.column発注行 = new global::System.Data.DataColumn("発注行", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注行);
                this.column処理月日 = new global::System.Data.DataColumn("処理月日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理月日);
                this.column管理年月 = new global::System.Data.DataColumn("管理年月", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column管理年月);
                this.column一括消費税締日 = new global::System.Data.DataColumn("一括消費税締日", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column一括消費税締日);
                this.column発注行番号 = new global::System.Data.DataColumn("発注行番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注行番号);
                this.column仕入行番号 = new global::System.Data.DataColumn("仕入行番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入行番号);
                this.column定価 = new global::System.Data.DataColumn("定価", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column定価);
                this.column原価掛率 = new global::System.Data.DataColumn("原価掛率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column原価掛率);
                this.columnメーカー品番 = new global::System.Data.DataColumn("メーカー品番", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnメーカー品番);
                this.column納入先コード = new global::System.Data.DataColumn("納入先コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納入先コード);
                this.column在庫数 = new global::System.Data.DataColumn("在庫数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column在庫数);
                this.column受注残数 = new global::System.Data.DataColumn("受注残数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注残数);
                this.column発注残数 = new global::System.Data.DataColumn("発注残数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注残数);
                this.columnモニター発行フラグ = new global::System.Data.DataColumn("モニター発行フラグ", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnモニター発行フラグ);
                this.columnオーダー区分 = new global::System.Data.DataColumn("オーダー区分", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnオーダー区分);
                this.column回答コード = new global::System.Data.DataColumn("回答コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column回答コード);
                this.column回答名 = new global::System.Data.DataColumn("回答名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column回答名);
                this.column回答納期 = new global::System.Data.DataColumn("回答納期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column回答納期);
                this.column発注番号発注残数 = new global::System.Data.DataColumn("発注番号発注残数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注番号発注残数);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column仕入連番}, true));
                this.column仕入連番.AutoIncrement = true;
                this.column仕入連番.AutoIncrementSeed = -1;
                this.column仕入連番.AutoIncrementStep = -1;
                this.column仕入連番.AllowDBNull = false;
                this.column仕入連番.ReadOnly = true;
                this.column仕入連番.Unique = true;
                this.columnエラーフラグ.AllowDBNull = false;
                this.columnシステム区分.AllowDBNull = false;
                this.column仕入先コード.MaxLength = 8;
                this.column仕名.MaxLength = 32;
                this.column事業所コード.MaxLength = 8;
                this.column仕入担当者コード.MaxLength = 6;
                this.column伝票摘要.MaxLength = 40;
                this.column商品コード.MaxLength = 13;
                this.column商名.MaxLength = 40;
                this.column規格.MaxLength = 24;
                this.column形式寸法.MaxLength = 40;
                this.column材質.MaxLength = 40;
                this.column在庫管理区分.AllowDBNull = false;
                this.column品種コード.MaxLength = 6;
                this.columnメーカーコード.MaxLength = 8;
                this.column倉庫コード.MaxLength = 6;
                this.column明細摘要.MaxLength = 40;
                this.column相手先受付番号.MaxLength = 20;
                this.column自社発注番号.MaxLength = 20;
                this.column得意先コード.MaxLength = 8;
                this.columnチェック.AllowDBNull = false;
                this.column完了フラグ.AllowDBNull = false;
                this.column発注更新フラグ.AllowDBNull = false;
                this.column入荷更新フラグ.AllowDBNull = false;
                this.column仕入先更新フラグ.AllowDBNull = false;
                this.column商品更新フラグ.AllowDBNull = false;
                this.column商品倉庫更新フラグ.AllowDBNull = false;
                this.columnオペレーターコード.MaxLength = 20;
                this.column修正オペレーターコード.MaxLength = 20;
                this.columnメーカー品番.MaxLength = 20;
                this.column納入先コード.MaxLength = 20;
                this.columnオーダー区分.MaxLength = 1;
                this.column回答コード.MaxLength = 6;
                this.column回答名.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入明細ファイルRow NewT仕入明細ファイルRow() {
                return ((T仕入明細ファイルRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T仕入明細ファイルRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T仕入明細ファイルRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T仕入明細ファイルRowChanged != null)) {
                    this.T仕入明細ファイルRowChanged(this, new T仕入明細ファイルRowChangeEvent(((T仕入明細ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T仕入明細ファイルRowChanging != null)) {
                    this.T仕入明細ファイルRowChanging(this, new T仕入明細ファイルRowChangeEvent(((T仕入明細ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T仕入明細ファイルRowDeleted != null)) {
                    this.T仕入明細ファイルRowDeleted(this, new T仕入明細ファイルRowChangeEvent(((T仕入明細ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T仕入明細ファイルRowDeleting != null)) {
                    this.T仕入明細ファイルRowDeleting(this, new T仕入明細ファイルRowChangeEvent(((T仕入明細ファイルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT仕入明細ファイルRow(T仕入明細ファイルRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                仕入計上DataSet ds = new 仕入計上DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T仕入明細ファイルDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T処理履歴テーブルDataTable : global::System.Data.TypedTableBase<T処理履歴テーブルRow> {
            
            private global::System.Data.DataColumn columnカウント;
            
            private global::System.Data.DataColumn column本支店区分;
            
            private global::System.Data.DataColumn column処理コード;
            
            private global::System.Data.DataColumn column処理名;
            
            private global::System.Data.DataColumn column入力区分;
            
            private global::System.Data.DataColumn column事業所コード;
            
            private global::System.Data.DataColumn column処理番号;
            
            private global::System.Data.DataColumn column売上仕入区分コード;
            
            private global::System.Data.DataColumn columnシステム区分;
            
            private global::System.Data.DataColumn column受注番号;
            
            private global::System.Data.DataColumn column売上伝票番号;
            
            private global::System.Data.DataColumn column出荷番号;
            
            private global::System.Data.DataColumn column発注番号;
            
            private global::System.Data.DataColumn column仕入伝票番号;
            
            private global::System.Data.DataColumn column入荷番号;
            
            private global::System.Data.DataColumn column入金番号;
            
            private global::System.Data.DataColumn column支払番号;
            
            private global::System.Data.DataColumn column移動番号;
            
            private global::System.Data.DataColumn column棚卸番号;
            
            private global::System.Data.DataColumn column処理日;
            
            private global::System.Data.DataColumn column更新フラグ;
            
            private global::System.Data.DataColumn column更新INDEX;
            
            private global::System.Data.DataColumn column更新処理日;
            
            private global::System.Data.DataColumn columnオペレーターコード;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルDataTable() {
                this.TableName = "T処理履歴テーブル";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T処理履歴テーブルDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T処理履歴テーブルDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn カウントColumn {
                get {
                    return this.columnカウント;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 本支店区分Column {
                get {
                    return this.column本支店区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理コードColumn {
                get {
                    return this.column処理コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理名Column {
                get {
                    return this.column処理名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入力区分Column {
                get {
                    return this.column入力区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 事業所コードColumn {
                get {
                    return this.column事業所コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理番号Column {
                get {
                    return this.column処理番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上仕入区分コードColumn {
                get {
                    return this.column売上仕入区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn システム区分Column {
                get {
                    return this.columnシステム区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注番号Column {
                get {
                    return this.column受注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上伝票番号Column {
                get {
                    return this.column売上伝票番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出荷番号Column {
                get {
                    return this.column出荷番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注番号Column {
                get {
                    return this.column発注番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入伝票番号Column {
                get {
                    return this.column仕入伝票番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入荷番号Column {
                get {
                    return this.column入荷番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入金番号Column {
                get {
                    return this.column入金番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払番号Column {
                get {
                    return this.column支払番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 移動番号Column {
                get {
                    return this.column移動番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 棚卸番号Column {
                get {
                    return this.column棚卸番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理日Column {
                get {
                    return this.column処理日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 更新フラグColumn {
                get {
                    return this.column更新フラグ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 更新INDEXColumn {
                get {
                    return this.column更新INDEX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 更新処理日Column {
                get {
                    return this.column更新処理日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn オペレーターコードColumn {
                get {
                    return this.columnオペレーターコード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルRow this[int index] {
                get {
                    return ((T処理履歴テーブルRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T処理履歴テーブルRowChangeEventHandler T処理履歴テーブルRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T処理履歴テーブルRowChangeEventHandler T処理履歴テーブルRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T処理履歴テーブルRowChangeEventHandler T処理履歴テーブルRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T処理履歴テーブルRowChangeEventHandler T処理履歴テーブルRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT処理履歴テーブルRow(T処理履歴テーブルRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルRow AddT処理履歴テーブルRow(
                        short 本支店区分, 
                        int 処理コード, 
                        string 処理名, 
                        short 入力区分, 
                        string 事業所コード, 
                        int 処理番号, 
                        short 売上仕入区分コード, 
                        short システム区分, 
                        int 受注番号, 
                        int 売上伝票番号, 
                        int 出荷番号, 
                        int 発注番号, 
                        int 仕入伝票番号, 
                        int 入荷番号, 
                        int 入金番号, 
                        int 支払番号, 
                        int 移動番号, 
                        int 棚卸番号, 
                        System.DateTime 処理日, 
                        bool 更新フラグ, 
                        int 更新INDEX, 
                        System.DateTime 更新処理日, 
                        string オペレーターコード) {
                T処理履歴テーブルRow rowT処理履歴テーブルRow = ((T処理履歴テーブルRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        本支店区分,
                        処理コード,
                        処理名,
                        入力区分,
                        事業所コード,
                        処理番号,
                        売上仕入区分コード,
                        システム区分,
                        受注番号,
                        売上伝票番号,
                        出荷番号,
                        発注番号,
                        仕入伝票番号,
                        入荷番号,
                        入金番号,
                        支払番号,
                        移動番号,
                        棚卸番号,
                        処理日,
                        更新フラグ,
                        更新INDEX,
                        更新処理日,
                        オペレーターコード};
                rowT処理履歴テーブルRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT処理履歴テーブルRow);
                return rowT処理履歴テーブルRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルRow FindByカウント(int カウント) {
                return ((T処理履歴テーブルRow)(this.Rows.Find(new object[] {
                            カウント})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T処理履歴テーブルDataTable cln = ((T処理履歴テーブルDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T処理履歴テーブルDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnカウント = base.Columns["カウント"];
                this.column本支店区分 = base.Columns["本支店区分"];
                this.column処理コード = base.Columns["処理コード"];
                this.column処理名 = base.Columns["処理名"];
                this.column入力区分 = base.Columns["入力区分"];
                this.column事業所コード = base.Columns["事業所コード"];
                this.column処理番号 = base.Columns["処理番号"];
                this.column売上仕入区分コード = base.Columns["売上仕入区分コード"];
                this.columnシステム区分 = base.Columns["システム区分"];
                this.column受注番号 = base.Columns["受注番号"];
                this.column売上伝票番号 = base.Columns["売上伝票番号"];
                this.column出荷番号 = base.Columns["出荷番号"];
                this.column発注番号 = base.Columns["発注番号"];
                this.column仕入伝票番号 = base.Columns["仕入伝票番号"];
                this.column入荷番号 = base.Columns["入荷番号"];
                this.column入金番号 = base.Columns["入金番号"];
                this.column支払番号 = base.Columns["支払番号"];
                this.column移動番号 = base.Columns["移動番号"];
                this.column棚卸番号 = base.Columns["棚卸番号"];
                this.column処理日 = base.Columns["処理日"];
                this.column更新フラグ = base.Columns["更新フラグ"];
                this.column更新INDEX = base.Columns["更新INDEX"];
                this.column更新処理日 = base.Columns["更新処理日"];
                this.columnオペレーターコード = base.Columns["オペレーターコード"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnカウント = new global::System.Data.DataColumn("カウント", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnカウント);
                this.column本支店区分 = new global::System.Data.DataColumn("本支店区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本支店区分);
                this.column処理コード = new global::System.Data.DataColumn("処理コード", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理コード);
                this.column処理名 = new global::System.Data.DataColumn("処理名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理名);
                this.column入力区分 = new global::System.Data.DataColumn("入力区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入力区分);
                this.column事業所コード = new global::System.Data.DataColumn("事業所コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column事業所コード);
                this.column処理番号 = new global::System.Data.DataColumn("処理番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理番号);
                this.column売上仕入区分コード = new global::System.Data.DataColumn("売上仕入区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上仕入区分コード);
                this.columnシステム区分 = new global::System.Data.DataColumn("システム区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnシステム区分);
                this.column受注番号 = new global::System.Data.DataColumn("受注番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注番号);
                this.column売上伝票番号 = new global::System.Data.DataColumn("売上伝票番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上伝票番号);
                this.column出荷番号 = new global::System.Data.DataColumn("出荷番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷番号);
                this.column発注番号 = new global::System.Data.DataColumn("発注番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注番号);
                this.column仕入伝票番号 = new global::System.Data.DataColumn("仕入伝票番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入伝票番号);
                this.column入荷番号 = new global::System.Data.DataColumn("入荷番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入荷番号);
                this.column入金番号 = new global::System.Data.DataColumn("入金番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入金番号);
                this.column支払番号 = new global::System.Data.DataColumn("支払番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払番号);
                this.column移動番号 = new global::System.Data.DataColumn("移動番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column移動番号);
                this.column棚卸番号 = new global::System.Data.DataColumn("棚卸番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column棚卸番号);
                this.column処理日 = new global::System.Data.DataColumn("処理日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理日);
                this.column更新フラグ = new global::System.Data.DataColumn("更新フラグ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column更新フラグ);
                this.column更新INDEX = new global::System.Data.DataColumn("更新INDEX", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column更新INDEX);
                this.column更新処理日 = new global::System.Data.DataColumn("更新処理日", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column更新処理日);
                this.columnオペレーターコード = new global::System.Data.DataColumn("オペレーターコード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnオペレーターコード);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnカウント}, true));
                this.columnカウント.AutoIncrement = true;
                this.columnカウント.AutoIncrementSeed = -1;
                this.columnカウント.AutoIncrementStep = -1;
                this.columnカウント.AllowDBNull = false;
                this.columnカウント.ReadOnly = true;
                this.columnカウント.Unique = true;
                this.column処理名.MaxLength = 20;
                this.column事業所コード.MaxLength = 8;
                this.column更新フラグ.AllowDBNull = false;
                this.column更新INDEX.AllowDBNull = false;
                this.columnオペレーターコード.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルRow NewT処理履歴テーブルRow() {
                return ((T処理履歴テーブルRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T処理履歴テーブルRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T処理履歴テーブルRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T処理履歴テーブルRowChanged != null)) {
                    this.T処理履歴テーブルRowChanged(this, new T処理履歴テーブルRowChangeEvent(((T処理履歴テーブルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T処理履歴テーブルRowChanging != null)) {
                    this.T処理履歴テーブルRowChanging(this, new T処理履歴テーブルRowChangeEvent(((T処理履歴テーブルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T処理履歴テーブルRowDeleted != null)) {
                    this.T処理履歴テーブルRowDeleted(this, new T処理履歴テーブルRowChangeEvent(((T処理履歴テーブルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T処理履歴テーブルRowDeleting != null)) {
                    this.T処理履歴テーブルRowDeleting(this, new T処理履歴テーブルRowChangeEvent(((T処理履歴テーブルRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT処理履歴テーブルRow(T処理履歴テーブルRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                仕入計上DataSet ds = new 仕入計上DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T処理履歴テーブルDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T仕入修正戻ファイルRow : global::System.Data.DataRow {
            
            private T仕入修正戻ファイルDataTable tableT仕入修正戻ファイル;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T仕入修正戻ファイルRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT仕入修正戻ファイル = ((T仕入修正戻ファイルDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 仕入修正連番 {
                get {
                    return ((int)(this[this.tableT仕入修正戻ファイル.仕入修正連番Column]));
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入修正連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 修正処理年月日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入修正戻ファイル.修正処理年月日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'修正処理年月日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.修正処理年月日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 本支店区分 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.本支店区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'本支店区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.本支店区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理コード {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.処理コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'処理コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.処理コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 入力区分 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.入力区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'入力区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.入力区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.処理番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'処理番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.処理番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool エラーフラグ {
                get {
                    return ((bool)(this[this.tableT仕入修正戻ファイル.エラーフラグColumn]));
                }
                set {
                    this[this.tableT仕入修正戻ファイル.エラーフラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受発注行数 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.受発注行数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'受発注行数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.受発注行数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注連番 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.発注連番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'発注連番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.発注連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 入荷番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.入荷番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'入荷番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.入荷番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 入荷連番 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.入荷連番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'入荷連番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.入荷連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 仕入伝票番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.仕入伝票番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕入伝票番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入伝票番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 処理日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入修正戻ファイル.処理日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'処理日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.処理日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 仕入日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入修正戻ファイル.仕入日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕入日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 入荷日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入修正戻ファイル.入荷日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'入荷日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.入荷日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 発注日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入修正戻ファイル.発注日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'発注日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.発注日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 納期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入修正戻ファイル.納期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'納期\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.納期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 処理区 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.処理区Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'処理区\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.処理区Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入区分コード {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.仕入区分コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕入区分コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short システム区分 {
                get {
                    return ((short)(this[this.tableT仕入修正戻ファイル.システム区分Column]));
                }
                set {
                    this[this.tableT仕入修正戻ファイル.システム区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 支払月区分コード {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.支払月区分コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'支払月区分コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.支払月区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕入先コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.仕入先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕入先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕名 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.仕名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入分類 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.仕入分類Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕入分類\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入分類Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 事業所コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.事業所コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'事業所コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.事業所コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕入担当者コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.仕入担当者コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕入担当者コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入担当者コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入切捨区分 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.仕入切捨区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕入切捨区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入切捨区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入税区分 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.仕入税区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕入税区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入税区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 伝票摘要 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.伝票摘要Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'伝票摘要\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.伝票摘要Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 商品コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.商品コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'商品コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.商品コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 商名 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.商名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'商名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.商名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 規格 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.規格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'規格\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.規格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 形式寸法 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.形式寸法Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'形式寸法\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.形式寸法Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 材質 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.材質Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'材質\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.材質Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 分類 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.分類Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'分類\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.分類Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 在庫管理区分 {
                get {
                    return ((bool)(this[this.tableT仕入修正戻ファイル.在庫管理区分Column]));
                }
                set {
                    this[this.tableT仕入修正戻ファイル.在庫管理区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 品種コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.品種コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'品種コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.品種コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string メーカーコード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.メーカーコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'メーカーコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.メーカーコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 入数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.入数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'入数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.入数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 単位コード {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.単位コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'単位コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.単位コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 倉庫コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.倉庫コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'倉庫コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.倉庫コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ケース数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.ケース数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'ケース数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.ケース数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 数量 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'数量\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 仕入単価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.仕入単価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕入単価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 仕入金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.仕入金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕入金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 税抜仕入金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.税抜仕入金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'税抜仕入金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.税抜仕入金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 消費税 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.消費税Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'消費税\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.消費税Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入返品値引理由区分 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.仕入返品値引理由区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕入返品値引理由区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入返品値引理由区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 外内税区分 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.外内税区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'外内税区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.外内税区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 消費税率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.消費税率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'消費税率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.消費税率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 新消費税率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.新消費税率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'新消費税率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.新消費税率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 新消費税適用 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入修正戻ファイル.新消費税適用Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'新消費税適用\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.新消費税適用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 明細摘要 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.明細摘要Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'明細摘要\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.明細摘要Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.発注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'発注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.発注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 相手先受付番号 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.相手先受付番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'相手先受付番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.相手先受付番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 自社発注番号 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.自社発注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'自社発注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.自社発注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 売上伝票番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.売上伝票番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'売上伝票番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.売上伝票番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 得意先コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.得意先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'得意先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.得意先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 支払番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.支払番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'支払番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.支払番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool チェック {
                get {
                    return ((bool)(this[this.tableT仕入修正戻ファイル.チェックColumn]));
                }
                set {
                    this[this.tableT仕入修正戻ファイル.チェックColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 完了フラグ {
                get {
                    return ((bool)(this[this.tableT仕入修正戻ファイル.完了フラグColumn]));
                }
                set {
                    this[this.tableT仕入修正戻ファイル.完了フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short WS_ID {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.WS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'WS_ID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.WS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 発注更新フラグ {
                get {
                    return ((bool)(this[this.tableT仕入修正戻ファイル.発注更新フラグColumn]));
                }
                set {
                    this[this.tableT仕入修正戻ファイル.発注更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 入荷更新フラグ {
                get {
                    return ((bool)(this[this.tableT仕入修正戻ファイル.入荷更新フラグColumn]));
                }
                set {
                    this[this.tableT仕入修正戻ファイル.入荷更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 仕入先更新フラグ {
                get {
                    return ((bool)(this[this.tableT仕入修正戻ファイル.仕入先更新フラグColumn]));
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入先更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 商品更新フラグ {
                get {
                    return ((bool)(this[this.tableT仕入修正戻ファイル.商品更新フラグColumn]));
                }
                set {
                    this[this.tableT仕入修正戻ファイル.商品更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 商品倉庫更新フラグ {
                get {
                    return ((bool)(this[this.tableT仕入修正戻ファイル.商品倉庫更新フラグColumn]));
                }
                set {
                    this[this.tableT仕入修正戻ファイル.商品倉庫更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string オペレーターコード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.オペレーターコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'オペレーターコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.オペレーターコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 修正オペレーターコード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.修正オペレーターコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'修正オペレーターコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.修正オペレーターコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注行 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.発注行Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'発注行\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.発注行Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 処理月日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入修正戻ファイル.処理月日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'処理月日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.処理月日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 管理年月 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.管理年月Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'管理年月\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.管理年月Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注行番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.発注行番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'発注行番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.発注行番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 仕入行番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入修正戻ファイル.仕入行番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'仕入行番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.仕入行番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 定価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.定価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'定価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.定価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 原価掛率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.原価掛率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'原価掛率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.原価掛率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string メーカー品番 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.メーカー品番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'メーカー品番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.メーカー品番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 納入先コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.納入先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'納入先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.納入先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 在庫数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.在庫数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'在庫数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.在庫数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 受注残数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.受注残数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'受注残数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.受注残数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 発注残数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.発注残数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'発注残数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.発注残数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short モニター発行フラグ {
                get {
                    try {
                        return ((short)(this[this.tableT仕入修正戻ファイル.モニター発行フラグColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'モニター発行フラグ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.モニター発行フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string オーダー区分 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.オーダー区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'オーダー区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.オーダー区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 回答コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.回答コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'回答コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.回答コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 回答名 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入修正戻ファイル.回答名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'回答名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.回答名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 回答納期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入修正戻ファイル.回答納期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'回答納期\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.回答納期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 発注番号発注残数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入修正戻ファイル.発注番号発注残数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入修正戻ファイル\' にある列 \'発注番号発注残数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入修正戻ファイル.発注番号発注残数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is修正処理年月日Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.修正処理年月日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set修正処理年月日Null() {
                this[this.tableT仕入修正戻ファイル.修正処理年月日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is本支店区分Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.本支店区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set本支店区分Null() {
                this[this.tableT仕入修正戻ファイル.本支店区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.処理コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理コードNull() {
                this[this.tableT仕入修正戻ファイル.処理コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入力区分Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.入力区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入力区分Null() {
                this[this.tableT仕入修正戻ファイル.入力区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理番号Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.処理番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理番号Null() {
                this[this.tableT仕入修正戻ファイル.処理番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受発注行数Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.受発注行数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受発注行数Null() {
                this[this.tableT仕入修正戻ファイル.受発注行数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注連番Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.発注連番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注連番Null() {
                this[this.tableT仕入修正戻ファイル.発注連番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入荷番号Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.入荷番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入荷番号Null() {
                this[this.tableT仕入修正戻ファイル.入荷番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入荷連番Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.入荷連番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入荷連番Null() {
                this[this.tableT仕入修正戻ファイル.入荷連番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入伝票番号Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕入伝票番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入伝票番号Null() {
                this[this.tableT仕入修正戻ファイル.仕入伝票番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理日Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.処理日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理日Null() {
                this[this.tableT仕入修正戻ファイル.処理日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入日Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕入日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入日Null() {
                this[this.tableT仕入修正戻ファイル.仕入日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入荷日Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.入荷日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入荷日Null() {
                this[this.tableT仕入修正戻ファイル.入荷日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注日Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.発注日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注日Null() {
                this[this.tableT仕入修正戻ファイル.発注日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納期Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.納期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納期Null() {
                this[this.tableT仕入修正戻ファイル.納期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理区Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.処理区Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理区Null() {
                this[this.tableT仕入修正戻ファイル.処理区Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入区分コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕入区分コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入区分コードNull() {
                this[this.tableT仕入修正戻ファイル.仕入区分コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is支払月区分コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.支払月区分コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set支払月区分コードNull() {
                this[this.tableT仕入修正戻ファイル.支払月区分コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入先コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕入先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入先コードNull() {
                this[this.tableT仕入修正戻ファイル.仕入先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕名Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕名Null() {
                this[this.tableT仕入修正戻ファイル.仕名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入分類Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕入分類Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入分類Null() {
                this[this.tableT仕入修正戻ファイル.仕入分類Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is事業所コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.事業所コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set事業所コードNull() {
                this[this.tableT仕入修正戻ファイル.事業所コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入担当者コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕入担当者コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入担当者コードNull() {
                this[this.tableT仕入修正戻ファイル.仕入担当者コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入切捨区分Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕入切捨区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入切捨区分Null() {
                this[this.tableT仕入修正戻ファイル.仕入切捨区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入税区分Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕入税区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入税区分Null() {
                this[this.tableT仕入修正戻ファイル.仕入税区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is伝票摘要Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.伝票摘要Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set伝票摘要Null() {
                this[this.tableT仕入修正戻ファイル.伝票摘要Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is商品コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.商品コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set商品コードNull() {
                this[this.tableT仕入修正戻ファイル.商品コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is商名Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.商名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set商名Null() {
                this[this.tableT仕入修正戻ファイル.商名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is規格Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.規格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set規格Null() {
                this[this.tableT仕入修正戻ファイル.規格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is形式寸法Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.形式寸法Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set形式寸法Null() {
                this[this.tableT仕入修正戻ファイル.形式寸法Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is材質Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.材質Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set材質Null() {
                this[this.tableT仕入修正戻ファイル.材質Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is分類Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.分類Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set分類Null() {
                this[this.tableT仕入修正戻ファイル.分類Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is品種コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.品種コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set品種コードNull() {
                this[this.tableT仕入修正戻ファイル.品種コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsメーカーコードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.メーカーコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetメーカーコードNull() {
                this[this.tableT仕入修正戻ファイル.メーカーコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入数Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.入数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入数Null() {
                this[this.tableT仕入修正戻ファイル.入数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is単位コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.単位コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set単位コードNull() {
                this[this.tableT仕入修正戻ファイル.単位コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is倉庫コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.倉庫コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set倉庫コードNull() {
                this[this.tableT仕入修正戻ファイル.倉庫コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isケース数Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.ケース数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setケース数Null() {
                this[this.tableT仕入修正戻ファイル.ケース数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is数量Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set数量Null() {
                this[this.tableT仕入修正戻ファイル.数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入単価Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕入単価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入単価Null() {
                this[this.tableT仕入修正戻ファイル.仕入単価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入金額Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕入金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入金額Null() {
                this[this.tableT仕入修正戻ファイル.仕入金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is税抜仕入金額Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.税抜仕入金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set税抜仕入金額Null() {
                this[this.tableT仕入修正戻ファイル.税抜仕入金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is消費税Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.消費税Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set消費税Null() {
                this[this.tableT仕入修正戻ファイル.消費税Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入返品値引理由区分Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕入返品値引理由区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入返品値引理由区分Null() {
                this[this.tableT仕入修正戻ファイル.仕入返品値引理由区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is外内税区分Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.外内税区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set外内税区分Null() {
                this[this.tableT仕入修正戻ファイル.外内税区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is消費税率Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.消費税率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set消費税率Null() {
                this[this.tableT仕入修正戻ファイル.消費税率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is新消費税率Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.新消費税率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set新消費税率Null() {
                this[this.tableT仕入修正戻ファイル.新消費税率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is新消費税適用Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.新消費税適用Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set新消費税適用Null() {
                this[this.tableT仕入修正戻ファイル.新消費税適用Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is明細摘要Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.明細摘要Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set明細摘要Null() {
                this[this.tableT仕入修正戻ファイル.明細摘要Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注番号Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.発注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注番号Null() {
                this[this.tableT仕入修正戻ファイル.発注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is相手先受付番号Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.相手先受付番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set相手先受付番号Null() {
                this[this.tableT仕入修正戻ファイル.相手先受付番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is自社発注番号Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.自社発注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set自社発注番号Null() {
                this[this.tableT仕入修正戻ファイル.自社発注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上伝票番号Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.売上伝票番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上伝票番号Null() {
                this[this.tableT仕入修正戻ファイル.売上伝票番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is得意先コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.得意先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set得意先コードNull() {
                this[this.tableT仕入修正戻ファイル.得意先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is支払番号Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.支払番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set支払番号Null() {
                this[this.tableT仕入修正戻ファイル.支払番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWS_IDNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.WS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWS_IDNull() {
                this[this.tableT仕入修正戻ファイル.WS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsオペレーターコードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.オペレーターコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetオペレーターコードNull() {
                this[this.tableT仕入修正戻ファイル.オペレーターコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is修正オペレーターコードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.修正オペレーターコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set修正オペレーターコードNull() {
                this[this.tableT仕入修正戻ファイル.修正オペレーターコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注行Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.発注行Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注行Null() {
                this[this.tableT仕入修正戻ファイル.発注行Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理月日Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.処理月日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理月日Null() {
                this[this.tableT仕入修正戻ファイル.処理月日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is管理年月Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.管理年月Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set管理年月Null() {
                this[this.tableT仕入修正戻ファイル.管理年月Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注行番号Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.発注行番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注行番号Null() {
                this[this.tableT仕入修正戻ファイル.発注行番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入行番号Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.仕入行番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入行番号Null() {
                this[this.tableT仕入修正戻ファイル.仕入行番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is定価Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.定価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set定価Null() {
                this[this.tableT仕入修正戻ファイル.定価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is原価掛率Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.原価掛率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set原価掛率Null() {
                this[this.tableT仕入修正戻ファイル.原価掛率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isメーカー品番Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.メーカー品番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setメーカー品番Null() {
                this[this.tableT仕入修正戻ファイル.メーカー品番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納入先コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.納入先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納入先コードNull() {
                this[this.tableT仕入修正戻ファイル.納入先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is在庫数Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.在庫数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set在庫数Null() {
                this[this.tableT仕入修正戻ファイル.在庫数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注残数Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.受注残数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注残数Null() {
                this[this.tableT仕入修正戻ファイル.受注残数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注残数Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.発注残数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注残数Null() {
                this[this.tableT仕入修正戻ファイル.発注残数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isモニター発行フラグNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.モニター発行フラグColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setモニター発行フラグNull() {
                this[this.tableT仕入修正戻ファイル.モニター発行フラグColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isオーダー区分Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.オーダー区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setオーダー区分Null() {
                this[this.tableT仕入修正戻ファイル.オーダー区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is回答コードNull() {
                return this.IsNull(this.tableT仕入修正戻ファイル.回答コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set回答コードNull() {
                this[this.tableT仕入修正戻ファイル.回答コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is回答名Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.回答名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set回答名Null() {
                this[this.tableT仕入修正戻ファイル.回答名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is回答納期Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.回答納期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set回答納期Null() {
                this[this.tableT仕入修正戻ファイル.回答納期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注番号発注残数Null() {
                return this.IsNull(this.tableT仕入修正戻ファイル.発注番号発注残数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注番号発注残数Null() {
                this[this.tableT仕入修正戻ファイル.発注番号発注残数Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T仕入明細ファイルRow : global::System.Data.DataRow {
            
            private T仕入明細ファイルDataTable tableT仕入明細ファイル;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T仕入明細ファイルRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT仕入明細ファイル = ((T仕入明細ファイルDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 仕入連番 {
                get {
                    return ((int)(this[this.tableT仕入明細ファイル.仕入連番Column]));
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 本支店区分 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.本支店区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'本支店区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.本支店区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理コード {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.処理コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'処理コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.処理コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 入力区分 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.入力区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'入力区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.入力区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.処理番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'処理番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.処理番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool エラーフラグ {
                get {
                    return ((bool)(this[this.tableT仕入明細ファイル.エラーフラグColumn]));
                }
                set {
                    this[this.tableT仕入明細ファイル.エラーフラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受発注行数 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.受発注行数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'受発注行数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.受発注行数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注連番 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.発注連番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'発注連番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.発注連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 入荷番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.入荷番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'入荷番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.入荷番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 入荷連番 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.入荷連番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'入荷連番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.入荷連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 仕入伝票番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.仕入伝票番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕入伝票番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入伝票番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 処理日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入明細ファイル.処理日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'処理日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.処理日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 仕入日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入明細ファイル.仕入日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕入日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 入荷日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入明細ファイル.入荷日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'入荷日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.入荷日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 発注日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入明細ファイル.発注日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'発注日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.発注日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 納期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入明細ファイル.納期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'納期\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.納期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 処理区 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.処理区Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'処理区\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.処理区Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入区分コード {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.仕入区分コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕入区分コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short システム区分 {
                get {
                    return ((short)(this[this.tableT仕入明細ファイル.システム区分Column]));
                }
                set {
                    this[this.tableT仕入明細ファイル.システム区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 支払月区分コード {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.支払月区分コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'支払月区分コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.支払月区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕入先コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.仕入先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕入先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕名 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.仕名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入分類 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.仕入分類Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕入分類\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入分類Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 事業所コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.事業所コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'事業所コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.事業所コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 仕入担当者コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.仕入担当者コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕入担当者コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入担当者コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入切捨区分 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.仕入切捨区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕入切捨区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入切捨区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入税区分 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.仕入税区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕入税区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入税区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 伝票摘要 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.伝票摘要Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'伝票摘要\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.伝票摘要Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 商品コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.商品コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'商品コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.商品コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 商名 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.商名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'商名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.商名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 規格 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.規格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'規格\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.規格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 形式寸法 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.形式寸法Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'形式寸法\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.形式寸法Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 材質 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.材質Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'材質\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.材質Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 分類 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.分類Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'分類\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.分類Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 在庫管理区分 {
                get {
                    return ((bool)(this[this.tableT仕入明細ファイル.在庫管理区分Column]));
                }
                set {
                    this[this.tableT仕入明細ファイル.在庫管理区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 品種コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.品種コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'品種コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.品種コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string メーカーコード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.メーカーコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'メーカーコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.メーカーコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 入数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.入数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'入数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.入数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 単位コード {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.単位コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'単位コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.単位コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 倉庫コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.倉庫コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'倉庫コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.倉庫コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ケース数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.ケース数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'ケース数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.ケース数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 数量 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.数量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'数量\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 仕入単価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.仕入単価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕入単価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入単価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 仕入金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.仕入金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕入金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 税抜仕入金額 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.税抜仕入金額Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'税抜仕入金額\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.税抜仕入金額Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 消費税 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.消費税Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'消費税\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.消費税Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入返品値引理由区分 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.仕入返品値引理由区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕入返品値引理由区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入返品値引理由区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 外内税区分 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.外内税区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'外内税区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.外内税区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 消費税率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.消費税率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'消費税率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.消費税率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 新消費税率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.新消費税率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'新消費税率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.新消費税率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 新消費税適用 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入明細ファイル.新消費税適用Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'新消費税適用\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.新消費税適用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 明細摘要 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.明細摘要Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'明細摘要\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.明細摘要Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.発注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'発注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.発注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 相手先受付番号 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.相手先受付番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'相手先受付番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.相手先受付番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 自社発注番号 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.自社発注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'自社発注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.自社発注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 売上伝票番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.売上伝票番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'売上伝票番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.売上伝票番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 得意先コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.得意先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'得意先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.得意先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 支払番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.支払番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'支払番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.支払番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool チェック {
                get {
                    return ((bool)(this[this.tableT仕入明細ファイル.チェックColumn]));
                }
                set {
                    this[this.tableT仕入明細ファイル.チェックColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 完了フラグ {
                get {
                    return ((bool)(this[this.tableT仕入明細ファイル.完了フラグColumn]));
                }
                set {
                    this[this.tableT仕入明細ファイル.完了フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short WS_ID {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.WS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'WS_ID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.WS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 発注更新フラグ {
                get {
                    return ((bool)(this[this.tableT仕入明細ファイル.発注更新フラグColumn]));
                }
                set {
                    this[this.tableT仕入明細ファイル.発注更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 入荷更新フラグ {
                get {
                    return ((bool)(this[this.tableT仕入明細ファイル.入荷更新フラグColumn]));
                }
                set {
                    this[this.tableT仕入明細ファイル.入荷更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 仕入先更新フラグ {
                get {
                    return ((bool)(this[this.tableT仕入明細ファイル.仕入先更新フラグColumn]));
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入先更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 商品更新フラグ {
                get {
                    return ((bool)(this[this.tableT仕入明細ファイル.商品更新フラグColumn]));
                }
                set {
                    this[this.tableT仕入明細ファイル.商品更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 商品倉庫更新フラグ {
                get {
                    return ((bool)(this[this.tableT仕入明細ファイル.商品倉庫更新フラグColumn]));
                }
                set {
                    this[this.tableT仕入明細ファイル.商品倉庫更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string オペレーターコード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.オペレーターコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'オペレーターコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.オペレーターコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 修正オペレーターコード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.修正オペレーターコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'修正オペレーターコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.修正オペレーターコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注行 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.発注行Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'発注行\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.発注行Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 処理月日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入明細ファイル.処理月日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'処理月日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.処理月日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 管理年月 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.管理年月Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'管理年月\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.管理年月Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 一括消費税締日 {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.一括消費税締日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'一括消費税締日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.一括消費税締日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注行番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.発注行番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'発注行番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.発注行番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 仕入行番号 {
                get {
                    try {
                        return ((int)(this[this.tableT仕入明細ファイル.仕入行番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'仕入行番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.仕入行番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 定価 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.定価Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'定価\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.定価Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 原価掛率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.原価掛率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'原価掛率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.原価掛率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string メーカー品番 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.メーカー品番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'メーカー品番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.メーカー品番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 納入先コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.納入先コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'納入先コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.納入先コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 在庫数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.在庫数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'在庫数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.在庫数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 受注残数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.受注残数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'受注残数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.受注残数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 発注残数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.発注残数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'発注残数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.発注残数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short モニター発行フラグ {
                get {
                    try {
                        return ((short)(this[this.tableT仕入明細ファイル.モニター発行フラグColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'モニター発行フラグ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.モニター発行フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string オーダー区分 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.オーダー区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'オーダー区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.オーダー区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 回答コード {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.回答コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'回答コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.回答コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 回答名 {
                get {
                    try {
                        return ((string)(this[this.tableT仕入明細ファイル.回答名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'回答名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.回答名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 回答納期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT仕入明細ファイル.回答納期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'回答納期\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.回答納期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 発注番号発注残数 {
                get {
                    try {
                        return ((decimal)(this[this.tableT仕入明細ファイル.発注番号発注残数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T仕入明細ファイル\' にある列 \'発注番号発注残数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT仕入明細ファイル.発注番号発注残数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is本支店区分Null() {
                return this.IsNull(this.tableT仕入明細ファイル.本支店区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set本支店区分Null() {
                this[this.tableT仕入明細ファイル.本支店区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.処理コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理コードNull() {
                this[this.tableT仕入明細ファイル.処理コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入力区分Null() {
                return this.IsNull(this.tableT仕入明細ファイル.入力区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入力区分Null() {
                this[this.tableT仕入明細ファイル.入力区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理番号Null() {
                return this.IsNull(this.tableT仕入明細ファイル.処理番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理番号Null() {
                this[this.tableT仕入明細ファイル.処理番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受発注行数Null() {
                return this.IsNull(this.tableT仕入明細ファイル.受発注行数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受発注行数Null() {
                this[this.tableT仕入明細ファイル.受発注行数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注連番Null() {
                return this.IsNull(this.tableT仕入明細ファイル.発注連番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注連番Null() {
                this[this.tableT仕入明細ファイル.発注連番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入荷番号Null() {
                return this.IsNull(this.tableT仕入明細ファイル.入荷番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入荷番号Null() {
                this[this.tableT仕入明細ファイル.入荷番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入荷連番Null() {
                return this.IsNull(this.tableT仕入明細ファイル.入荷連番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入荷連番Null() {
                this[this.tableT仕入明細ファイル.入荷連番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入伝票番号Null() {
                return this.IsNull(this.tableT仕入明細ファイル.仕入伝票番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入伝票番号Null() {
                this[this.tableT仕入明細ファイル.仕入伝票番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理日Null() {
                return this.IsNull(this.tableT仕入明細ファイル.処理日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理日Null() {
                this[this.tableT仕入明細ファイル.処理日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入日Null() {
                return this.IsNull(this.tableT仕入明細ファイル.仕入日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入日Null() {
                this[this.tableT仕入明細ファイル.仕入日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入荷日Null() {
                return this.IsNull(this.tableT仕入明細ファイル.入荷日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入荷日Null() {
                this[this.tableT仕入明細ファイル.入荷日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注日Null() {
                return this.IsNull(this.tableT仕入明細ファイル.発注日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注日Null() {
                this[this.tableT仕入明細ファイル.発注日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納期Null() {
                return this.IsNull(this.tableT仕入明細ファイル.納期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納期Null() {
                this[this.tableT仕入明細ファイル.納期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理区Null() {
                return this.IsNull(this.tableT仕入明細ファイル.処理区Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理区Null() {
                this[this.tableT仕入明細ファイル.処理区Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入区分コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.仕入区分コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入区分コードNull() {
                this[this.tableT仕入明細ファイル.仕入区分コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is支払月区分コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.支払月区分コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set支払月区分コードNull() {
                this[this.tableT仕入明細ファイル.支払月区分コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入先コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.仕入先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入先コードNull() {
                this[this.tableT仕入明細ファイル.仕入先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕名Null() {
                return this.IsNull(this.tableT仕入明細ファイル.仕名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕名Null() {
                this[this.tableT仕入明細ファイル.仕名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入分類Null() {
                return this.IsNull(this.tableT仕入明細ファイル.仕入分類Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入分類Null() {
                this[this.tableT仕入明細ファイル.仕入分類Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is事業所コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.事業所コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set事業所コードNull() {
                this[this.tableT仕入明細ファイル.事業所コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入担当者コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.仕入担当者コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入担当者コードNull() {
                this[this.tableT仕入明細ファイル.仕入担当者コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入切捨区分Null() {
                return this.IsNull(this.tableT仕入明細ファイル.仕入切捨区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入切捨区分Null() {
                this[this.tableT仕入明細ファイル.仕入切捨区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入税区分Null() {
                return this.IsNull(this.tableT仕入明細ファイル.仕入税区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入税区分Null() {
                this[this.tableT仕入明細ファイル.仕入税区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is伝票摘要Null() {
                return this.IsNull(this.tableT仕入明細ファイル.伝票摘要Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set伝票摘要Null() {
                this[this.tableT仕入明細ファイル.伝票摘要Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is商品コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.商品コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set商品コードNull() {
                this[this.tableT仕入明細ファイル.商品コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is商名Null() {
                return this.IsNull(this.tableT仕入明細ファイル.商名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set商名Null() {
                this[this.tableT仕入明細ファイル.商名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is規格Null() {
                return this.IsNull(this.tableT仕入明細ファイル.規格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set規格Null() {
                this[this.tableT仕入明細ファイル.規格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is形式寸法Null() {
                return this.IsNull(this.tableT仕入明細ファイル.形式寸法Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set形式寸法Null() {
                this[this.tableT仕入明細ファイル.形式寸法Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is材質Null() {
                return this.IsNull(this.tableT仕入明細ファイル.材質Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set材質Null() {
                this[this.tableT仕入明細ファイル.材質Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is分類Null() {
                return this.IsNull(this.tableT仕入明細ファイル.分類Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set分類Null() {
                this[this.tableT仕入明細ファイル.分類Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is品種コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.品種コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set品種コードNull() {
                this[this.tableT仕入明細ファイル.品種コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsメーカーコードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.メーカーコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetメーカーコードNull() {
                this[this.tableT仕入明細ファイル.メーカーコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入数Null() {
                return this.IsNull(this.tableT仕入明細ファイル.入数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入数Null() {
                this[this.tableT仕入明細ファイル.入数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is単位コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.単位コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set単位コードNull() {
                this[this.tableT仕入明細ファイル.単位コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is倉庫コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.倉庫コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set倉庫コードNull() {
                this[this.tableT仕入明細ファイル.倉庫コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isケース数Null() {
                return this.IsNull(this.tableT仕入明細ファイル.ケース数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setケース数Null() {
                this[this.tableT仕入明細ファイル.ケース数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is数量Null() {
                return this.IsNull(this.tableT仕入明細ファイル.数量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set数量Null() {
                this[this.tableT仕入明細ファイル.数量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入単価Null() {
                return this.IsNull(this.tableT仕入明細ファイル.仕入単価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入単価Null() {
                this[this.tableT仕入明細ファイル.仕入単価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入金額Null() {
                return this.IsNull(this.tableT仕入明細ファイル.仕入金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入金額Null() {
                this[this.tableT仕入明細ファイル.仕入金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is税抜仕入金額Null() {
                return this.IsNull(this.tableT仕入明細ファイル.税抜仕入金額Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set税抜仕入金額Null() {
                this[this.tableT仕入明細ファイル.税抜仕入金額Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is消費税Null() {
                return this.IsNull(this.tableT仕入明細ファイル.消費税Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set消費税Null() {
                this[this.tableT仕入明細ファイル.消費税Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入返品値引理由区分Null() {
                return this.IsNull(this.tableT仕入明細ファイル.仕入返品値引理由区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入返品値引理由区分Null() {
                this[this.tableT仕入明細ファイル.仕入返品値引理由区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is外内税区分Null() {
                return this.IsNull(this.tableT仕入明細ファイル.外内税区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set外内税区分Null() {
                this[this.tableT仕入明細ファイル.外内税区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is消費税率Null() {
                return this.IsNull(this.tableT仕入明細ファイル.消費税率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set消費税率Null() {
                this[this.tableT仕入明細ファイル.消費税率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is新消費税率Null() {
                return this.IsNull(this.tableT仕入明細ファイル.新消費税率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set新消費税率Null() {
                this[this.tableT仕入明細ファイル.新消費税率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is新消費税適用Null() {
                return this.IsNull(this.tableT仕入明細ファイル.新消費税適用Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set新消費税適用Null() {
                this[this.tableT仕入明細ファイル.新消費税適用Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is明細摘要Null() {
                return this.IsNull(this.tableT仕入明細ファイル.明細摘要Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set明細摘要Null() {
                this[this.tableT仕入明細ファイル.明細摘要Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注番号Null() {
                return this.IsNull(this.tableT仕入明細ファイル.発注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注番号Null() {
                this[this.tableT仕入明細ファイル.発注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is相手先受付番号Null() {
                return this.IsNull(this.tableT仕入明細ファイル.相手先受付番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set相手先受付番号Null() {
                this[this.tableT仕入明細ファイル.相手先受付番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is自社発注番号Null() {
                return this.IsNull(this.tableT仕入明細ファイル.自社発注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set自社発注番号Null() {
                this[this.tableT仕入明細ファイル.自社発注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上伝票番号Null() {
                return this.IsNull(this.tableT仕入明細ファイル.売上伝票番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上伝票番号Null() {
                this[this.tableT仕入明細ファイル.売上伝票番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is得意先コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.得意先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set得意先コードNull() {
                this[this.tableT仕入明細ファイル.得意先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is支払番号Null() {
                return this.IsNull(this.tableT仕入明細ファイル.支払番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set支払番号Null() {
                this[this.tableT仕入明細ファイル.支払番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWS_IDNull() {
                return this.IsNull(this.tableT仕入明細ファイル.WS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWS_IDNull() {
                this[this.tableT仕入明細ファイル.WS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsオペレーターコードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.オペレーターコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetオペレーターコードNull() {
                this[this.tableT仕入明細ファイル.オペレーターコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is修正オペレーターコードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.修正オペレーターコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set修正オペレーターコードNull() {
                this[this.tableT仕入明細ファイル.修正オペレーターコードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注行Null() {
                return this.IsNull(this.tableT仕入明細ファイル.発注行Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注行Null() {
                this[this.tableT仕入明細ファイル.発注行Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理月日Null() {
                return this.IsNull(this.tableT仕入明細ファイル.処理月日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理月日Null() {
                this[this.tableT仕入明細ファイル.処理月日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is管理年月Null() {
                return this.IsNull(this.tableT仕入明細ファイル.管理年月Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set管理年月Null() {
                this[this.tableT仕入明細ファイル.管理年月Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is一括消費税締日Null() {
                return this.IsNull(this.tableT仕入明細ファイル.一括消費税締日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set一括消費税締日Null() {
                this[this.tableT仕入明細ファイル.一括消費税締日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注行番号Null() {
                return this.IsNull(this.tableT仕入明細ファイル.発注行番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注行番号Null() {
                this[this.tableT仕入明細ファイル.発注行番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入行番号Null() {
                return this.IsNull(this.tableT仕入明細ファイル.仕入行番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入行番号Null() {
                this[this.tableT仕入明細ファイル.仕入行番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is定価Null() {
                return this.IsNull(this.tableT仕入明細ファイル.定価Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set定価Null() {
                this[this.tableT仕入明細ファイル.定価Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is原価掛率Null() {
                return this.IsNull(this.tableT仕入明細ファイル.原価掛率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set原価掛率Null() {
                this[this.tableT仕入明細ファイル.原価掛率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isメーカー品番Null() {
                return this.IsNull(this.tableT仕入明細ファイル.メーカー品番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setメーカー品番Null() {
                this[this.tableT仕入明細ファイル.メーカー品番Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is納入先コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.納入先コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set納入先コードNull() {
                this[this.tableT仕入明細ファイル.納入先コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is在庫数Null() {
                return this.IsNull(this.tableT仕入明細ファイル.在庫数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set在庫数Null() {
                this[this.tableT仕入明細ファイル.在庫数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注残数Null() {
                return this.IsNull(this.tableT仕入明細ファイル.受注残数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注残数Null() {
                this[this.tableT仕入明細ファイル.受注残数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注残数Null() {
                return this.IsNull(this.tableT仕入明細ファイル.発注残数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注残数Null() {
                this[this.tableT仕入明細ファイル.発注残数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isモニター発行フラグNull() {
                return this.IsNull(this.tableT仕入明細ファイル.モニター発行フラグColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setモニター発行フラグNull() {
                this[this.tableT仕入明細ファイル.モニター発行フラグColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isオーダー区分Null() {
                return this.IsNull(this.tableT仕入明細ファイル.オーダー区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setオーダー区分Null() {
                this[this.tableT仕入明細ファイル.オーダー区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is回答コードNull() {
                return this.IsNull(this.tableT仕入明細ファイル.回答コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set回答コードNull() {
                this[this.tableT仕入明細ファイル.回答コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is回答名Null() {
                return this.IsNull(this.tableT仕入明細ファイル.回答名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set回答名Null() {
                this[this.tableT仕入明細ファイル.回答名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is回答納期Null() {
                return this.IsNull(this.tableT仕入明細ファイル.回答納期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set回答納期Null() {
                this[this.tableT仕入明細ファイル.回答納期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注番号発注残数Null() {
                return this.IsNull(this.tableT仕入明細ファイル.発注番号発注残数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注番号発注残数Null() {
                this[this.tableT仕入明細ファイル.発注番号発注残数Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T処理履歴テーブルRow : global::System.Data.DataRow {
            
            private T処理履歴テーブルDataTable tableT処理履歴テーブル;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T処理履歴テーブルRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT処理履歴テーブル = ((T処理履歴テーブルDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int カウント {
                get {
                    return ((int)(this[this.tableT処理履歴テーブル.カウントColumn]));
                }
                set {
                    this[this.tableT処理履歴テーブル.カウントColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 本支店区分 {
                get {
                    try {
                        return ((short)(this[this.tableT処理履歴テーブル.本支店区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'本支店区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.本支店区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理コード {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.処理コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'処理コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.処理コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 処理名 {
                get {
                    try {
                        return ((string)(this[this.tableT処理履歴テーブル.処理名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'処理名\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.処理名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 入力区分 {
                get {
                    try {
                        return ((short)(this[this.tableT処理履歴テーブル.入力区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'入力区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.入力区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 事業所コード {
                get {
                    try {
                        return ((string)(this[this.tableT処理履歴テーブル.事業所コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'事業所コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.事業所コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.処理番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'処理番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.処理番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上仕入区分コード {
                get {
                    try {
                        return ((short)(this[this.tableT処理履歴テーブル.売上仕入区分コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'売上仕入区分コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.売上仕入区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short システム区分 {
                get {
                    try {
                        return ((short)(this[this.tableT処理履歴テーブル.システム区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'システム区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.システム区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受注番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.受注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'受注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.受注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 売上伝票番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.売上伝票番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'売上伝票番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.売上伝票番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 出荷番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.出荷番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'出荷番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.出荷番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 発注番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.発注番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'発注番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.発注番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 仕入伝票番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.仕入伝票番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'仕入伝票番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.仕入伝票番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 入荷番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.入荷番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'入荷番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.入荷番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 入金番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.入金番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'入金番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.入金番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 支払番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.支払番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'支払番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.支払番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 移動番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.移動番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'移動番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.移動番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 棚卸番号 {
                get {
                    try {
                        return ((int)(this[this.tableT処理履歴テーブル.棚卸番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'棚卸番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.棚卸番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 処理日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT処理履歴テーブル.処理日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'処理日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.処理日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 更新フラグ {
                get {
                    return ((bool)(this[this.tableT処理履歴テーブル.更新フラグColumn]));
                }
                set {
                    this[this.tableT処理履歴テーブル.更新フラグColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 更新INDEX {
                get {
                    return ((int)(this[this.tableT処理履歴テーブル.更新INDEXColumn]));
                }
                set {
                    this[this.tableT処理履歴テーブル.更新INDEXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 更新処理日 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT処理履歴テーブル.更新処理日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'更新処理日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.更新処理日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string オペレーターコード {
                get {
                    try {
                        return ((string)(this[this.tableT処理履歴テーブル.オペレーターコードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T処理履歴テーブル\' にある列 \'オペレーターコード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT処理履歴テーブル.オペレーターコードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is本支店区分Null() {
                return this.IsNull(this.tableT処理履歴テーブル.本支店区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set本支店区分Null() {
                this[this.tableT処理履歴テーブル.本支店区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理コードNull() {
                return this.IsNull(this.tableT処理履歴テーブル.処理コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理コードNull() {
                this[this.tableT処理履歴テーブル.処理コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理名Null() {
                return this.IsNull(this.tableT処理履歴テーブル.処理名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理名Null() {
                this[this.tableT処理履歴テーブル.処理名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入力区分Null() {
                return this.IsNull(this.tableT処理履歴テーブル.入力区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入力区分Null() {
                this[this.tableT処理履歴テーブル.入力区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is事業所コードNull() {
                return this.IsNull(this.tableT処理履歴テーブル.事業所コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set事業所コードNull() {
                this[this.tableT処理履歴テーブル.事業所コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.処理番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理番号Null() {
                this[this.tableT処理履歴テーブル.処理番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上仕入区分コードNull() {
                return this.IsNull(this.tableT処理履歴テーブル.売上仕入区分コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上仕入区分コードNull() {
                this[this.tableT処理履歴テーブル.売上仕入区分コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isシステム区分Null() {
                return this.IsNull(this.tableT処理履歴テーブル.システム区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setシステム区分Null() {
                this[this.tableT処理履歴テーブル.システム区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受注番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.受注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受注番号Null() {
                this[this.tableT処理履歴テーブル.受注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上伝票番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.売上伝票番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上伝票番号Null() {
                this[this.tableT処理履歴テーブル.売上伝票番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出荷番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.出荷番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出荷番号Null() {
                this[this.tableT処理履歴テーブル.出荷番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is発注番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.発注番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set発注番号Null() {
                this[this.tableT処理履歴テーブル.発注番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is仕入伝票番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.仕入伝票番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set仕入伝票番号Null() {
                this[this.tableT処理履歴テーブル.仕入伝票番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入荷番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.入荷番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入荷番号Null() {
                this[this.tableT処理履歴テーブル.入荷番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入金番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.入金番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入金番号Null() {
                this[this.tableT処理履歴テーブル.入金番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is支払番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.支払番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set支払番号Null() {
                this[this.tableT処理履歴テーブル.支払番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is移動番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.移動番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set移動番号Null() {
                this[this.tableT処理履歴テーブル.移動番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is棚卸番号Null() {
                return this.IsNull(this.tableT処理履歴テーブル.棚卸番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set棚卸番号Null() {
                this[this.tableT処理履歴テーブル.棚卸番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理日Null() {
                return this.IsNull(this.tableT処理履歴テーブル.処理日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理日Null() {
                this[this.tableT処理履歴テーブル.処理日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is更新処理日Null() {
                return this.IsNull(this.tableT処理履歴テーブル.更新処理日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set更新処理日Null() {
                this[this.tableT処理履歴テーブル.更新処理日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsオペレーターコードNull() {
                return this.IsNull(this.tableT処理履歴テーブル.オペレーターコードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetオペレーターコードNull() {
                this[this.tableT処理履歴テーブル.オペレーターコードColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T仕入修正戻ファイルRowChangeEvent : global::System.EventArgs {
            
            private T仕入修正戻ファイルRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入修正戻ファイルRowChangeEvent(T仕入修正戻ファイルRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入修正戻ファイルRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T仕入明細ファイルRowChangeEvent : global::System.EventArgs {
            
            private T仕入明細ファイルRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入明細ファイルRowChangeEvent(T仕入明細ファイルRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T仕入明細ファイルRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T処理履歴テーブルRowChangeEvent : global::System.EventArgs {
            
            private T処理履歴テーブルRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルRowChangeEvent(T処理履歴テーブルRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T処理履歴テーブルRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace db_test.仕入計上DataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T仕入修正戻ファイルTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T仕入修正戻ファイルTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T仕入修正戻ファイル";
            tableMapping.ColumnMappings.Add("仕入修正連番", "仕入修正連番");
            tableMapping.ColumnMappings.Add("修正処理年月日", "修正処理年月日");
            tableMapping.ColumnMappings.Add("本支店区分", "本支店区分");
            tableMapping.ColumnMappings.Add("処理コード", "処理コード");
            tableMapping.ColumnMappings.Add("入力区分", "入力区分");
            tableMapping.ColumnMappings.Add("処理番号", "処理番号");
            tableMapping.ColumnMappings.Add("エラーフラグ", "エラーフラグ");
            tableMapping.ColumnMappings.Add("受発注行数", "受発注行数");
            tableMapping.ColumnMappings.Add("発注連番", "発注連番");
            tableMapping.ColumnMappings.Add("入荷番号", "入荷番号");
            tableMapping.ColumnMappings.Add("入荷連番", "入荷連番");
            tableMapping.ColumnMappings.Add("仕入伝票番号", "仕入伝票番号");
            tableMapping.ColumnMappings.Add("処理日", "処理日");
            tableMapping.ColumnMappings.Add("仕入日", "仕入日");
            tableMapping.ColumnMappings.Add("入荷日", "入荷日");
            tableMapping.ColumnMappings.Add("発注日", "発注日");
            tableMapping.ColumnMappings.Add("納期", "納期");
            tableMapping.ColumnMappings.Add("処理区", "処理区");
            tableMapping.ColumnMappings.Add("仕入区分コード", "仕入区分コード");
            tableMapping.ColumnMappings.Add("システム区分", "システム区分");
            tableMapping.ColumnMappings.Add("支払月区分コード", "支払月区分コード");
            tableMapping.ColumnMappings.Add("仕入先コード", "仕入先コード");
            tableMapping.ColumnMappings.Add("仕名", "仕名");
            tableMapping.ColumnMappings.Add("仕入分類", "仕入分類");
            tableMapping.ColumnMappings.Add("事業所コード", "事業所コード");
            tableMapping.ColumnMappings.Add("仕入担当者コード", "仕入担当者コード");
            tableMapping.ColumnMappings.Add("仕入切捨区分", "仕入切捨区分");
            tableMapping.ColumnMappings.Add("仕入税区分", "仕入税区分");
            tableMapping.ColumnMappings.Add("伝票摘要", "伝票摘要");
            tableMapping.ColumnMappings.Add("商品コード", "商品コード");
            tableMapping.ColumnMappings.Add("商名", "商名");
            tableMapping.ColumnMappings.Add("規格", "規格");
            tableMapping.ColumnMappings.Add("形式寸法", "形式寸法");
            tableMapping.ColumnMappings.Add("材質", "材質");
            tableMapping.ColumnMappings.Add("分類", "分類");
            tableMapping.ColumnMappings.Add("在庫管理区分", "在庫管理区分");
            tableMapping.ColumnMappings.Add("品種コード", "品種コード");
            tableMapping.ColumnMappings.Add("メーカーコード", "メーカーコード");
            tableMapping.ColumnMappings.Add("入数", "入数");
            tableMapping.ColumnMappings.Add("単位コード", "単位コード");
            tableMapping.ColumnMappings.Add("倉庫コード", "倉庫コード");
            tableMapping.ColumnMappings.Add("ケース数", "ケース数");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("仕入単価", "仕入単価");
            tableMapping.ColumnMappings.Add("仕入金額", "仕入金額");
            tableMapping.ColumnMappings.Add("税抜仕入金額", "税抜仕入金額");
            tableMapping.ColumnMappings.Add("消費税", "消費税");
            tableMapping.ColumnMappings.Add("仕入返品値引理由区分", "仕入返品値引理由区分");
            tableMapping.ColumnMappings.Add("外内税区分", "外内税区分");
            tableMapping.ColumnMappings.Add("消費税率", "消費税率");
            tableMapping.ColumnMappings.Add("新消費税率", "新消費税率");
            tableMapping.ColumnMappings.Add("新消費税適用", "新消費税適用");
            tableMapping.ColumnMappings.Add("明細摘要", "明細摘要");
            tableMapping.ColumnMappings.Add("発注番号", "発注番号");
            tableMapping.ColumnMappings.Add("相手先受付番号", "相手先受付番号");
            tableMapping.ColumnMappings.Add("自社発注番号", "自社発注番号");
            tableMapping.ColumnMappings.Add("売上伝票番号", "売上伝票番号");
            tableMapping.ColumnMappings.Add("得意先コード", "得意先コード");
            tableMapping.ColumnMappings.Add("支払番号", "支払番号");
            tableMapping.ColumnMappings.Add("チェック", "チェック");
            tableMapping.ColumnMappings.Add("完了フラグ", "完了フラグ");
            tableMapping.ColumnMappings.Add("WS_ID", "WS_ID");
            tableMapping.ColumnMappings.Add("発注更新フラグ", "発注更新フラグ");
            tableMapping.ColumnMappings.Add("入荷更新フラグ", "入荷更新フラグ");
            tableMapping.ColumnMappings.Add("仕入先更新フラグ", "仕入先更新フラグ");
            tableMapping.ColumnMappings.Add("商品更新フラグ", "商品更新フラグ");
            tableMapping.ColumnMappings.Add("商品倉庫更新フラグ", "商品倉庫更新フラグ");
            tableMapping.ColumnMappings.Add("オペレーターコード", "オペレーターコード");
            tableMapping.ColumnMappings.Add("修正オペレーターコード", "修正オペレーターコード");
            tableMapping.ColumnMappings.Add("発注行", "発注行");
            tableMapping.ColumnMappings.Add("処理月日", "処理月日");
            tableMapping.ColumnMappings.Add("管理年月", "管理年月");
            tableMapping.ColumnMappings.Add("発注行番号", "発注行番号");
            tableMapping.ColumnMappings.Add("仕入行番号", "仕入行番号");
            tableMapping.ColumnMappings.Add("定価", "定価");
            tableMapping.ColumnMappings.Add("原価掛率", "原価掛率");
            tableMapping.ColumnMappings.Add("メーカー品番", "メーカー品番");
            tableMapping.ColumnMappings.Add("納入先コード", "納入先コード");
            tableMapping.ColumnMappings.Add("在庫数", "在庫数");
            tableMapping.ColumnMappings.Add("受注残数", "受注残数");
            tableMapping.ColumnMappings.Add("発注残数", "発注残数");
            tableMapping.ColumnMappings.Add("モニター発行フラグ", "モニター発行フラグ");
            tableMapping.ColumnMappings.Add("オーダー区分", "オーダー区分");
            tableMapping.ColumnMappings.Add("回答コード", "回答コード");
            tableMapping.ColumnMappings.Add("回答名", "回答名");
            tableMapping.ColumnMappings.Add("回答納期", "回答納期");
            tableMapping.ColumnMappings.Add("発注番号発注残数", "発注番号発注残数");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T仕入修正戻ファイル] WHERE (([仕入修正連番] = @Original_仕入修正連番) AND ((@IsNull" +
                "_修正処理年月日 = 1 AND [修正処理年月日] IS NULL) OR ([修正処理年月日] = @Original_修正処理年月日)) AND ((@I" +
                "sNull_本支店区分 = 1 AND [本支店区分] IS NULL) OR ([本支店区分] = @Original_本支店区分)) AND ((@IsNu" +
                "ll_処理コード = 1 AND [処理コード] IS NULL) OR ([処理コード] = @Original_処理コード)) AND ((@IsNull_" +
                "入力区分 = 1 AND [入力区分] IS NULL) OR ([入力区分] = @Original_入力区分)) AND ((@IsNull_処理番号 = " +
                "1 AND [処理番号] IS NULL) OR ([処理番号] = @Original_処理番号)) AND ([エラーフラグ] = @Original_エラ" +
                "ーフラグ) AND ((@IsNull_受発注行数 = 1 AND [受発注行数] IS NULL) OR ([受発注行数] = @Original_受発注行数" +
                ")) AND ((@IsNull_発注連番 = 1 AND [発注連番] IS NULL) OR ([発注連番] = @Original_発注連番)) AND " +
                "((@IsNull_入荷番号 = 1 AND [入荷番号] IS NULL) OR ([入荷番号] = @Original_入荷番号)) AND ((@IsNu" +
                "ll_入荷連番 = 1 AND [入荷連番] IS NULL) OR ([入荷連番] = @Original_入荷連番)) AND ((@IsNull_仕入伝票" +
                "番号 = 1 AND [仕入伝票番号] IS NULL) OR ([仕入伝票番号] = @Original_仕入伝票番号)) AND ((@IsNull_処理日" +
                " = 1 AND [処理日] IS NULL) OR ([処理日] = @Original_処理日)) AND ((@IsNull_仕入日 = 1 AND [仕" +
                "入日] IS NULL) OR ([仕入日] = @Original_仕入日)) AND ((@IsNull_入荷日 = 1 AND [入荷日] IS NULL" +
                ") OR ([入荷日] = @Original_入荷日)) AND ((@IsNull_発注日 = 1 AND [発注日] IS NULL) OR ([発注日]" +
                " = @Original_発注日)) AND ((@IsNull_納期 = 1 AND [納期] IS NULL) OR ([納期] = @Original_納" +
                "期)) AND ((@IsNull_処理区 = 1 AND [処理区] IS NULL) OR ([処理区] = @Original_処理区)) AND ((@" +
                "IsNull_仕入区分コード = 1 AND [仕入区分コード] IS NULL) OR ([仕入区分コード] = @Original_仕入区分コード)) AN" +
                "D ([システム区分] = @Original_システム区分) AND ((@IsNull_支払月区分コード = 1 AND [支払月区分コード] IS NUL" +
                "L) OR ([支払月区分コード] = @Original_支払月区分コード)) AND ((@IsNull_仕入先コード = 1 AND [仕入先コード] I" +
                "S NULL) OR ([仕入先コード] = @Original_仕入先コード)) AND ((@IsNull_仕名 = 1 AND [仕名] IS NULL)" +
                " OR ([仕名] = @Original_仕名)) AND ((@IsNull_仕入分類 = 1 AND [仕入分類] IS NULL) OR ([仕入分類]" +
                " = @Original_仕入分類)) AND ((@IsNull_事業所コード = 1 AND [事業所コード] IS NULL) OR ([事業所コード] " +
                "= @Original_事業所コード)) AND ((@IsNull_仕入担当者コード = 1 AND [仕入担当者コード] IS NULL) OR ([仕入担" +
                "当者コード] = @Original_仕入担当者コード)) AND ((@IsNull_仕入切捨区分 = 1 AND [仕入切捨区分] IS NULL) OR " +
                "([仕入切捨区分] = @Original_仕入切捨区分)) AND ((@IsNull_仕入税区分 = 1 AND [仕入税区分] IS NULL) OR (" +
                "[仕入税区分] = @Original_仕入税区分)) AND ((@IsNull_伝票摘要 = 1 AND [伝票摘要] IS NULL) OR ([伝票摘要" +
                "] = @Original_伝票摘要)) AND ((@IsNull_商品コード = 1 AND [商品コード] IS NULL) OR ([商品コード] = " +
                "@Original_商品コード)) AND ((@IsNull_商名 = 1 AND [商名] IS NULL) OR ([商名] = @Original_商名" +
                ")) AND ((@IsNull_規格 = 1 AND [規格] IS NULL) OR ([規格] = @Original_規格)) AND ((@IsNul" +
                "l_形式寸法 = 1 AND [形式寸法] IS NULL) OR ([形式寸法] = @Original_形式寸法)) AND ((@IsNull_材質 = " +
                "1 AND [材質] IS NULL) OR ([材質] = @Original_材質)) AND ((@IsNull_分類 = 1 AND [分類] IS N" +
                "ULL) OR ([分類] = @Original_分類)) AND ([在庫管理区分] = @Original_在庫管理区分) AND ((@IsNull_品" +
                "種コード = 1 AND [品種コード] IS NULL) OR ([品種コード] = @Original_品種コード)) AND ((@IsNull_メーカー" +
                "コード = 1 AND [メーカーコード] IS NULL) OR ([メーカーコード] = @Original_メーカーコード)) AND ((@IsNull" +
                "_入数 = 1 AND [入数] IS NULL) OR ([入数] = @Original_入数)) AND ((@IsNull_単位コード = 1 AND " +
                "[単位コード] IS NULL) OR ([単位コード] = @Original_単位コード)) AND ((@IsNull_倉庫コード = 1 AND [倉庫" +
                "コード] IS NULL) OR ([倉庫コード] = @Original_倉庫コード)) AND ((@IsNull_ケース数 = 1 AND [ケース数] " +
                "IS NULL) OR ([ケース数] = @Original_ケース数)) AND ((@IsNull_数量 = 1 AND [数量] IS NULL) OR" +
                " ([数量] = @Original_数量)) AND ((@IsNull_仕入単価 = 1 AND [仕入単価] IS NULL) OR ([仕入単価] = " +
                "@Original_仕入単価)) AND ((@IsNull_仕入金額 = 1 AND [仕入金額] IS NULL) OR ([仕入金額] = @Origin" +
                "al_仕入金額)) AND ((@IsNull_税抜仕入金額 = 1 AND [税抜仕入金額] IS NULL) OR ([税抜仕入金額] = @Origina" +
                "l_税抜仕入金額)) AND ((@IsNull_消費税 = 1 AND [消費税] IS NULL) OR ([消費税] = @Original_消費税)) " +
                "AND ((@IsNull_仕入返品値引理由区分 = 1 AND [仕入返品値引理由区分] IS NULL) OR ([仕入返品値引理由区分] = @Origi" +
                "nal_仕入返品値引理由区分)) AND ((@IsNull_外内税区分 = 1 AND [外内税区分] IS NULL) OR ([外内税区分] = @Ori" +
                "ginal_外内税区分)) AND ((@IsNull_消費税率 = 1 AND [消費税率] IS NULL) OR ([消費税率] = @Original_" +
                "消費税率)) AND ((@IsNull_新消費税率 = 1 AND [新消費税率] IS NULL) OR ([新消費税率] = @Original_新消費税" +
                "率)) AND ((@IsNull_新消費税適用 = 1 AND [新消費税適用] IS NULL) OR ([新消費税適用] = @Original_新消費税" +
                "適用)) AND ((@IsNull_明細摘要 = 1 AND [明細摘要] IS NULL) OR ([明細摘要] = @Original_明細摘要)) AN" +
                "D ((@IsNull_発注番号 = 1 AND [発注番号] IS NULL) OR ([発注番号] = @Original_発注番号)) AND ((@Is" +
                "Null_相手先受付番号 = 1 AND [相手先受付番号] IS NULL) OR ([相手先受付番号] = @Original_相手先受付番号)) AND " +
                "((@IsNull_自社発注番号 = 1 AND [自社発注番号] IS NULL) OR ([自社発注番号] = @Original_自社発注番号)) AND" +
                " ((@IsNull_売上伝票番号 = 1 AND [売上伝票番号] IS NULL) OR ([売上伝票番号] = @Original_売上伝票番号)) AN" +
                "D ((@IsNull_得意先コード = 1 AND [得意先コード] IS NULL) OR ([得意先コード] = @Original_得意先コード)) A" +
                "ND ((@IsNull_支払番号 = 1 AND [支払番号] IS NULL) OR ([支払番号] = @Original_支払番号)) AND ([チェ" +
                "ック] = @Original_チェック) AND ([完了フラグ] = @Original_完了フラグ) AND ((@IsNull_WS_ID = 1 AN" +
                "D [WS_ID] IS NULL) OR ([WS_ID] = @Original_WS_ID)) AND ([発注更新フラグ] = @Original_発注" +
                "更新フラグ) AND ([入荷更新フラグ] = @Original_入荷更新フラグ) AND ([仕入先更新フラグ] = @Original_仕入先更新フラグ)" +
                " AND ([商品更新フラグ] = @Original_商品更新フラグ) AND ([商品倉庫更新フラグ] = @Original_商品倉庫更新フラグ) AND" +
                " ((@IsNull_オペレーターコード = 1 AND [オペレーターコード] IS NULL) OR ([オペレーターコード] = @Original_オペ" +
                "レーターコード)) AND ((@IsNull_修正オペレーターコード = 1 AND [修正オペレーターコード] IS NULL) OR ([修正オペレーター" +
                "コード] = @Original_修正オペレーターコード)) AND ((@IsNull_発注行 = 1 AND [発注行] IS NULL) OR ([発注行" +
                "] = @Original_発注行)) AND ((@IsNull_処理月日 = 1 AND [処理月日] IS NULL) OR ([処理月日] = @Ori" +
                "ginal_処理月日)) AND ((@IsNull_管理年月 = 1 AND [管理年月] IS NULL) OR ([管理年月] = @Original_管" +
                "理年月)) AND ((@IsNull_発注行番号 = 1 AND [発注行番号] IS NULL) OR ([発注行番号] = @Original_発注行番号" +
                ")) AND ((@IsNull_仕入行番号 = 1 AND [仕入行番号] IS NULL) OR ([仕入行番号] = @Original_仕入行番号)) " +
                "AND ((@IsNull_定価 = 1 AND [定価] IS NULL) OR ([定価] = @Original_定価)) AND ((@IsNull_原" +
                "価掛率 = 1 AND [原価掛率] IS NULL) OR ([原価掛率] = @Original_原価掛率)) AND ((@IsNull_メーカー品番 =" +
                " 1 AND [メーカー品番] IS NULL) OR ([メーカー品番] = @Original_メーカー品番)) AND ((@IsNull_納入先コード " +
                "= 1 AND [納入先コード] IS NULL) OR ([納入先コード] = @Original_納入先コード)) AND ((@IsNull_在庫数 = " +
                "1 AND [在庫数] IS NULL) OR ([在庫数] = @Original_在庫数)) AND ((@IsNull_受注残数 = 1 AND [受注残" +
                "数] IS NULL) OR ([受注残数] = @Original_受注残数)) AND ((@IsNull_発注残数 = 1 AND [発注残数] IS N" +
                "ULL) OR ([発注残数] = @Original_発注残数)) AND ((@IsNull_モニター発行フラグ = 1 AND [モニター発行フラグ] I" +
                "S NULL) OR ([モニター発行フラグ] = @Original_モニター発行フラグ)) AND ((@IsNull_オーダー区分 = 1 AND [オー" +
                "ダー区分] IS NULL) OR ([オーダー区分] = @Original_オーダー区分)) AND ((@IsNull_回答コード = 1 AND [回答" +
                "コード] IS NULL) OR ([回答コード] = @Original_回答コード)) AND ((@IsNull_回答名 = 1 AND [回答名] IS" +
                " NULL) OR ([回答名] = @Original_回答名)) AND ((@IsNull_回答納期 = 1 AND [回答納期] IS NULL) OR" +
                " ([回答納期] = @Original_回答納期)) AND ((@IsNull_発注番号発注残数 = 1 AND [発注番号発注残数] IS NULL) O" +
                "R ([発注番号発注残数] = @Original_発注番号発注残数)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入修正連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入修正連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_修正処理年月日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正処理年月日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_修正処理年月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正処理年月日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入力区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理区", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_支払月区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入担当者コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入切捨区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_伝票摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商品コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_規格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_形式寸法", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_材質", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_品種コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカーコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_単位コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_倉庫コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ケース数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_数量", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_税抜仕入金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入返品値引理由区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入返品値引理由区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入返品値引理由区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_外内税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税適用", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_明細摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_相手先受付番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先受付番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_相手先受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先受付番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_自社発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_自社発注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_得意先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_修正オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理月日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_定価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価掛率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価掛率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカー品番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_在庫数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_モニター発行フラグ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "モニター発行フラグ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_モニター発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "モニター発行フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オーダー区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オーダー区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オーダー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オーダー区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号発注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号発注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号発注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T仕入修正戻ファイル] ([修正処理年月日], [本支店区分], [処理コード], [入力区分], [処理番号], [エラー" +
                "フラグ], [受発注行数], [発注連番], [入荷番号], [入荷連番], [仕入伝票番号], [処理日], [仕入日], [入荷日], [発注日], [納期" +
                "], [処理区], [仕入区分コード], [システム区分], [支払月区分コード], [仕入先コード], [仕名], [仕入分類], [事業所コード], [仕入" +
                "担当者コード], [仕入切捨区分], [仕入税区分], [伝票摘要], [商品コード], [商名], [規格], [形式寸法], [材質], [分類], [在庫" +
                "管理区分], [品種コード], [メーカーコード], [入数], [単位コード], [倉庫コード], [ケース数], [数量], [仕入単価], [仕入金額]," +
                " [税抜仕入金額], [消費税], [仕入返品値引理由区分], [外内税区分], [消費税率], [新消費税率], [新消費税適用], [明細摘要], [発注番" +
                "号], [相手先受付番号], [自社発注番号], [売上伝票番号], [得意先コード], [支払番号], [チェック], [完了フラグ], [WS_ID], [" +
                "発注更新フラグ], [入荷更新フラグ], [仕入先更新フラグ], [商品更新フラグ], [商品倉庫更新フラグ], [オペレーターコード], [修正オペレーターコ" +
                "ード], [発注行], [処理月日], [管理年月], [発注行番号], [仕入行番号], [定価], [原価掛率], [メーカー品番], [納入先コード], " +
                "[在庫数], [受注残数], [発注残数], [モニター発行フラグ], [オーダー区分], [回答コード], [回答名], [回答納期], [発注番号発注残数]" +
                ") VALUES (@修正処理年月日, @本支店区分, @処理コード, @入力区分, @処理番号, @エラーフラグ, @受発注行数, @発注連番, @入荷番号," +
                " @入荷連番, @仕入伝票番号, @処理日, @仕入日, @入荷日, @発注日, @納期, @処理区, @仕入区分コード, @システム区分, @支払月区分コード" +
                ", @仕入先コード, @仕名, @仕入分類, @事業所コード, @仕入担当者コード, @仕入切捨区分, @仕入税区分, @伝票摘要, @商品コード, @商名, " +
                "@規格, @形式寸法, @材質, @分類, @在庫管理区分, @品種コード, @メーカーコード, @入数, @単位コード, @倉庫コード, @ケース数, @数量" +
                ", @仕入単価, @仕入金額, @税抜仕入金額, @消費税, @仕入返品値引理由区分, @外内税区分, @消費税率, @新消費税率, @新消費税適用, @明細摘" +
                "要, @発注番号, @相手先受付番号, @自社発注番号, @売上伝票番号, @得意先コード, @支払番号, @チェック, @完了フラグ, @WS_ID, @発注" +
                "更新フラグ, @入荷更新フラグ, @仕入先更新フラグ, @商品更新フラグ, @商品倉庫更新フラグ, @オペレーターコード, @修正オペレーターコード, @発注行" +
                ", @処理月日, @管理年月, @発注行番号, @仕入行番号, @定価, @原価掛率, @メーカー品番, @納入先コード, @在庫数, @受注残数, @発注残数" +
                ", @モニター発行フラグ, @オーダー区分, @回答コード, @回答名, @回答納期, @発注番号発注残数);\r\nSELECT 仕入修正連番, 修正処理年月日," +
                " 本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 発注連番, 入荷番号, 入荷連番, 仕入伝票番号, 処理日, 仕入日, 入荷" +
                "日, 発注日, 納期, 処理区, 仕入区分コード, システム区分, 支払月区分コード, 仕入先コード, 仕名, 仕入分類, 事業所コード, 仕入担当者コード, " +
                "仕入切捨区分, 仕入税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位" +
                "コード, 倉庫コード, ケース数, 数量, 仕入単価, 仕入金額, 税抜仕入金額, 消費税, 仕入返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新" +
                "消費税適用, 明細摘要, 発注番号, 相手先受付番号, 自社発注番号, 売上伝票番号, 得意先コード, 支払番号, チェック, 完了フラグ, WS_ID, 発注" +
                "更新フラグ, 入荷更新フラグ, 仕入先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, オペレーターコード, 修正オペレーターコード, 発注行, 処理月日," +
                " 管理年月, 発注行番号, 仕入行番号, 定価, 原価掛率, メーカー品番, 納入先コード, 在庫数, 受注残数, 発注残数, モニター発行フラグ, オーダー区" +
                "分, 回答コード, 回答名, 回答納期, 発注番号発注残数 FROM T仕入修正戻ファイル WHERE (仕入修正連番 = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@修正処理年月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正処理年月日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入返品値引理由区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@相手先受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先受付番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@自社発注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@モニター発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "モニター発行フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オーダー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オーダー区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号発注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T仕入修正戻ファイル] SET [修正処理年月日] = @修正処理年月日, [本支店区分] = @本支店区分, [処理コード] = @" +
                "処理コード, [入力区分] = @入力区分, [処理番号] = @処理番号, [エラーフラグ] = @エラーフラグ, [受発注行数] = @受発注行数, [発注" +
                "連番] = @発注連番, [入荷番号] = @入荷番号, [入荷連番] = @入荷連番, [仕入伝票番号] = @仕入伝票番号, [処理日] = @処理日, [" +
                "仕入日] = @仕入日, [入荷日] = @入荷日, [発注日] = @発注日, [納期] = @納期, [処理区] = @処理区, [仕入区分コード] = @" +
                "仕入区分コード, [システム区分] = @システム区分, [支払月区分コード] = @支払月区分コード, [仕入先コード] = @仕入先コード, [仕名] = " +
                "@仕名, [仕入分類] = @仕入分類, [事業所コード] = @事業所コード, [仕入担当者コード] = @仕入担当者コード, [仕入切捨区分] = @仕入切" +
                "捨区分, [仕入税区分] = @仕入税区分, [伝票摘要] = @伝票摘要, [商品コード] = @商品コード, [商名] = @商名, [規格] = @規格," +
                " [形式寸法] = @形式寸法, [材質] = @材質, [分類] = @分類, [在庫管理区分] = @在庫管理区分, [品種コード] = @品種コード, [" +
                "メーカーコード] = @メーカーコード, [入数] = @入数, [単位コード] = @単位コード, [倉庫コード] = @倉庫コード, [ケース数] = @ケ" +
                "ース数, [数量] = @数量, [仕入単価] = @仕入単価, [仕入金額] = @仕入金額, [税抜仕入金額] = @税抜仕入金額, [消費税] = @消費" +
                "税, [仕入返品値引理由区分] = @仕入返品値引理由区分, [外内税区分] = @外内税区分, [消費税率] = @消費税率, [新消費税率] = @新消費税" +
                "率, [新消費税適用] = @新消費税適用, [明細摘要] = @明細摘要, [発注番号] = @発注番号, [相手先受付番号] = @相手先受付番号, [自社" +
                "発注番号] = @自社発注番号, [売上伝票番号] = @売上伝票番号, [得意先コード] = @得意先コード, [支払番号] = @支払番号, [チェック] " +
                "= @チェック, [完了フラグ] = @完了フラグ, [WS_ID] = @WS_ID, [発注更新フラグ] = @発注更新フラグ, [入荷更新フラグ] = @" +
                "入荷更新フラグ, [仕入先更新フラグ] = @仕入先更新フラグ, [商品更新フラグ] = @商品更新フラグ, [商品倉庫更新フラグ] = @商品倉庫更新フラグ," +
                " [オペレーターコード] = @オペレーターコード, [修正オペレーターコード] = @修正オペレーターコード, [発注行] = @発注行, [処理月日] = " +
                "@処理月日, [管理年月] = @管理年月, [発注行番号] = @発注行番号, [仕入行番号] = @仕入行番号, [定価] = @定価, [原価掛率] = " +
                "@原価掛率, [メーカー品番] = @メーカー品番, [納入先コード] = @納入先コード, [在庫数] = @在庫数, [受注残数] = @受注残数, [発注" +
                "残数] = @発注残数, [モニター発行フラグ] = @モニター発行フラグ, [オーダー区分] = @オーダー区分, [回答コード] = @回答コード, [回答" +
                "名] = @回答名, [回答納期] = @回答納期, [発注番号発注残数] = @発注番号発注残数 WHERE (([仕入修正連番] = @Original_仕" +
                "入修正連番) AND ((@IsNull_修正処理年月日 = 1 AND [修正処理年月日] IS NULL) OR ([修正処理年月日] = @Origina" +
                "l_修正処理年月日)) AND ((@IsNull_本支店区分 = 1 AND [本支店区分] IS NULL) OR ([本支店区分] = @Original" +
                "_本支店区分)) AND ((@IsNull_処理コード = 1 AND [処理コード] IS NULL) OR ([処理コード] = @Original_処理" +
                "コード)) AND ((@IsNull_入力区分 = 1 AND [入力区分] IS NULL) OR ([入力区分] = @Original_入力区分)) A" +
                "ND ((@IsNull_処理番号 = 1 AND [処理番号] IS NULL) OR ([処理番号] = @Original_処理番号)) AND ([エラ" +
                "ーフラグ] = @Original_エラーフラグ) AND ((@IsNull_受発注行数 = 1 AND [受発注行数] IS NULL) OR ([受発注行" +
                "数] = @Original_受発注行数)) AND ((@IsNull_発注連番 = 1 AND [発注連番] IS NULL) OR ([発注連番] = @" +
                "Original_発注連番)) AND ((@IsNull_入荷番号 = 1 AND [入荷番号] IS NULL) OR ([入荷番号] = @Origina" +
                "l_入荷番号)) AND ((@IsNull_入荷連番 = 1 AND [入荷連番] IS NULL) OR ([入荷連番] = @Original_入荷連番)" +
                ") AND ((@IsNull_仕入伝票番号 = 1 AND [仕入伝票番号] IS NULL) OR ([仕入伝票番号] = @Original_仕入伝票番号" +
                ")) AND ((@IsNull_処理日 = 1 AND [処理日] IS NULL) OR ([処理日] = @Original_処理日)) AND ((@I" +
                "sNull_仕入日 = 1 AND [仕入日] IS NULL) OR ([仕入日] = @Original_仕入日)) AND ((@IsNull_入荷日 =" +
                " 1 AND [入荷日] IS NULL) OR ([入荷日] = @Original_入荷日)) AND ((@IsNull_発注日 = 1 AND [発注日" +
                "] IS NULL) OR ([発注日] = @Original_発注日)) AND ((@IsNull_納期 = 1 AND [納期] IS NULL) OR" +
                " ([納期] = @Original_納期)) AND ((@IsNull_処理区 = 1 AND [処理区] IS NULL) OR ([処理区] = @Or" +
                "iginal_処理区)) AND ((@IsNull_仕入区分コード = 1 AND [仕入区分コード] IS NULL) OR ([仕入区分コード] = @O" +
                "riginal_仕入区分コード)) AND ([システム区分] = @Original_システム区分) AND ((@IsNull_支払月区分コード = 1 A" +
                "ND [支払月区分コード] IS NULL) OR ([支払月区分コード] = @Original_支払月区分コード)) AND ((@IsNull_仕入先コー" +
                "ド = 1 AND [仕入先コード] IS NULL) OR ([仕入先コード] = @Original_仕入先コード)) AND ((@IsNull_仕名 =" +
                " 1 AND [仕名] IS NULL) OR ([仕名] = @Original_仕名)) AND ((@IsNull_仕入分類 = 1 AND [仕入分類]" +
                " IS NULL) OR ([仕入分類] = @Original_仕入分類)) AND ((@IsNull_事業所コード = 1 AND [事業所コード] IS" +
                " NULL) OR ([事業所コード] = @Original_事業所コード)) AND ((@IsNull_仕入担当者コード = 1 AND [仕入担当者コー" +
                "ド] IS NULL) OR ([仕入担当者コード] = @Original_仕入担当者コード)) AND ((@IsNull_仕入切捨区分 = 1 AND [" +
                "仕入切捨区分] IS NULL) OR ([仕入切捨区分] = @Original_仕入切捨区分)) AND ((@IsNull_仕入税区分 = 1 AND [" +
                "仕入税区分] IS NULL) OR ([仕入税区分] = @Original_仕入税区分)) AND ((@IsNull_伝票摘要 = 1 AND [伝票摘要" +
                "] IS NULL) OR ([伝票摘要] = @Original_伝票摘要)) AND ((@IsNull_商品コード = 1 AND [商品コード] IS " +
                "NULL) OR ([商品コード] = @Original_商品コード)) AND ((@IsNull_商名 = 1 AND [商名] IS NULL) OR " +
                "([商名] = @Original_商名)) AND ((@IsNull_規格 = 1 AND [規格] IS NULL) OR ([規格] = @Origin" +
                "al_規格)) AND ((@IsNull_形式寸法 = 1 AND [形式寸法] IS NULL) OR ([形式寸法] = @Original_形式寸法))" +
                " AND ((@IsNull_材質 = 1 AND [材質] IS NULL) OR ([材質] = @Original_材質)) AND ((@IsNull_" +
                "分類 = 1 AND [分類] IS NULL) OR ([分類] = @Original_分類)) AND ([在庫管理区分] = @Original_在庫管" +
                "理区分) AND ((@IsNull_品種コード = 1 AND [品種コード] IS NULL) OR ([品種コード] = @Original_品種コード)" +
                ") AND ((@IsNull_メーカーコード = 1 AND [メーカーコード] IS NULL) OR ([メーカーコード] = @Original_メーカ" +
                "ーコード)) AND ((@IsNull_入数 = 1 AND [入数] IS NULL) OR ([入数] = @Original_入数)) AND ((@I" +
                "sNull_単位コード = 1 AND [単位コード] IS NULL) OR ([単位コード] = @Original_単位コード)) AND ((@IsNu" +
                "ll_倉庫コード = 1 AND [倉庫コード] IS NULL) OR ([倉庫コード] = @Original_倉庫コード)) AND ((@IsNull_" +
                "ケース数 = 1 AND [ケース数] IS NULL) OR ([ケース数] = @Original_ケース数)) AND ((@IsNull_数量 = 1 " +
                "AND [数量] IS NULL) OR ([数量] = @Original_数量)) AND ((@IsNull_仕入単価 = 1 AND [仕入単価] IS" +
                " NULL) OR ([仕入単価] = @Original_仕入単価)) AND ((@IsNull_仕入金額 = 1 AND [仕入金額] IS NULL) " +
                "OR ([仕入金額] = @Original_仕入金額)) AND ((@IsNull_税抜仕入金額 = 1 AND [税抜仕入金額] IS NULL) OR " +
                "([税抜仕入金額] = @Original_税抜仕入金額)) AND ((@IsNull_消費税 = 1 AND [消費税] IS NULL) OR ([消費税" +
                "] = @Original_消費税)) AND ((@IsNull_仕入返品値引理由区分 = 1 AND [仕入返品値引理由区分] IS NULL) OR ([" +
                "仕入返品値引理由区分] = @Original_仕入返品値引理由区分)) AND ((@IsNull_外内税区分 = 1 AND [外内税区分] IS NULL" +
                ") OR ([外内税区分] = @Original_外内税区分)) AND ((@IsNull_消費税率 = 1 AND [消費税率] IS NULL) OR " +
                "([消費税率] = @Original_消費税率)) AND ((@IsNull_新消費税率 = 1 AND [新消費税率] IS NULL) OR ([新消費" +
                "税率] = @Original_新消費税率)) AND ((@IsNull_新消費税適用 = 1 AND [新消費税適用] IS NULL) OR ([新消費税" +
                "適用] = @Original_新消費税適用)) AND ((@IsNull_明細摘要 = 1 AND [明細摘要] IS NULL) OR ([明細摘要] =" +
                " @Original_明細摘要)) AND ((@IsNull_発注番号 = 1 AND [発注番号] IS NULL) OR ([発注番号] = @Origi" +
                "nal_発注番号)) AND ((@IsNull_相手先受付番号 = 1 AND [相手先受付番号] IS NULL) OR ([相手先受付番号] = @Ori" +
                "ginal_相手先受付番号)) AND ((@IsNull_自社発注番号 = 1 AND [自社発注番号] IS NULL) OR ([自社発注番号] = @O" +
                "riginal_自社発注番号)) AND ((@IsNull_売上伝票番号 = 1 AND [売上伝票番号] IS NULL) OR ([売上伝票番号] = @" +
                "Original_売上伝票番号)) AND ((@IsNull_得意先コード = 1 AND [得意先コード] IS NULL) OR ([得意先コード] = " +
                "@Original_得意先コード)) AND ((@IsNull_支払番号 = 1 AND [支払番号] IS NULL) OR ([支払番号] = @Orig" +
                "inal_支払番号)) AND ([チェック] = @Original_チェック) AND ([完了フラグ] = @Original_完了フラグ) AND ((" +
                "@IsNull_WS_ID = 1 AND [WS_ID] IS NULL) OR ([WS_ID] = @Original_WS_ID)) AND ([発注更" +
                "新フラグ] = @Original_発注更新フラグ) AND ([入荷更新フラグ] = @Original_入荷更新フラグ) AND ([仕入先更新フラグ] =" +
                " @Original_仕入先更新フラグ) AND ([商品更新フラグ] = @Original_商品更新フラグ) AND ([商品倉庫更新フラグ] = @Ori" +
                "ginal_商品倉庫更新フラグ) AND ((@IsNull_オペレーターコード = 1 AND [オペレーターコード] IS NULL) OR ([オペレータ" +
                "ーコード] = @Original_オペレーターコード)) AND ((@IsNull_修正オペレーターコード = 1 AND [修正オペレーターコード] IS" +
                " NULL) OR ([修正オペレーターコード] = @Original_修正オペレーターコード)) AND ((@IsNull_発注行 = 1 AND [発注" +
                "行] IS NULL) OR ([発注行] = @Original_発注行)) AND ((@IsNull_処理月日 = 1 AND [処理月日] IS NUL" +
                "L) OR ([処理月日] = @Original_処理月日)) AND ((@IsNull_管理年月 = 1 AND [管理年月] IS NULL) OR (" +
                "[管理年月] = @Original_管理年月)) AND ((@IsNull_発注行番号 = 1 AND [発注行番号] IS NULL) OR ([発注行番" +
                "号] = @Original_発注行番号)) AND ((@IsNull_仕入行番号 = 1 AND [仕入行番号] IS NULL) OR ([仕入行番号] " +
                "= @Original_仕入行番号)) AND ((@IsNull_定価 = 1 AND [定価] IS NULL) OR ([定価] = @Original_" +
                "定価)) AND ((@IsNull_原価掛率 = 1 AND [原価掛率] IS NULL) OR ([原価掛率] = @Original_原価掛率)) AN" +
                "D ((@IsNull_メーカー品番 = 1 AND [メーカー品番] IS NULL) OR ([メーカー品番] = @Original_メーカー品番)) A" +
                "ND ((@IsNull_納入先コード = 1 AND [納入先コード] IS NULL) OR ([納入先コード] = @Original_納入先コード)) " +
                "AND ((@IsNull_在庫数 = 1 AND [在庫数] IS NULL) OR ([在庫数] = @Original_在庫数)) AND ((@IsNu" +
                "ll_受注残数 = 1 AND [受注残数] IS NULL) OR ([受注残数] = @Original_受注残数)) AND ((@IsNull_発注残数" +
                " = 1 AND [発注残数] IS NULL) OR ([発注残数] = @Original_発注残数)) AND ((@IsNull_モニター発行フラグ =" +
                " 1 AND [モニター発行フラグ] IS NULL) OR ([モニター発行フラグ] = @Original_モニター発行フラグ)) AND ((@IsNul" +
                "l_オーダー区分 = 1 AND [オーダー区分] IS NULL) OR ([オーダー区分] = @Original_オーダー区分)) AND ((@IsNu" +
                "ll_回答コード = 1 AND [回答コード] IS NULL) OR ([回答コード] = @Original_回答コード)) AND ((@IsNull_" +
                "回答名 = 1 AND [回答名] IS NULL) OR ([回答名] = @Original_回答名)) AND ((@IsNull_回答納期 = 1 AN" +
                "D [回答納期] IS NULL) OR ([回答納期] = @Original_回答納期)) AND ((@IsNull_発注番号発注残数 = 1 AND [" +
                "発注番号発注残数] IS NULL) OR ([発注番号発注残数] = @Original_発注番号発注残数)));\r\nSELECT 仕入修正連番, 修正処理年" +
                "月日, 本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 発注連番, 入荷番号, 入荷連番, 仕入伝票番号, 処理日, 仕入日," +
                " 入荷日, 発注日, 納期, 処理区, 仕入区分コード, システム区分, 支払月区分コード, 仕入先コード, 仕名, 仕入分類, 事業所コード, 仕入担当者コー" +
                "ド, 仕入切捨区分, 仕入税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数," +
                " 単位コード, 倉庫コード, ケース数, 数量, 仕入単価, 仕入金額, 税抜仕入金額, 消費税, 仕入返品値引理由区分, 外内税区分, 消費税率, 新消費税率" +
                ", 新消費税適用, 明細摘要, 発注番号, 相手先受付番号, 自社発注番号, 売上伝票番号, 得意先コード, 支払番号, チェック, 完了フラグ, WS_ID," +
                " 発注更新フラグ, 入荷更新フラグ, 仕入先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, オペレーターコード, 修正オペレーターコード, 発注行, 処理" +
                "月日, 管理年月, 発注行番号, 仕入行番号, 定価, 原価掛率, メーカー品番, 納入先コード, 在庫数, 受注残数, 発注残数, モニター発行フラグ, オー" +
                "ダー区分, 回答コード, 回答名, 回答納期, 発注番号発注残数 FROM T仕入修正戻ファイル WHERE (仕入修正連番 = @仕入修正連番)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@修正処理年月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正処理年月日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入返品値引理由区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@相手先受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先受付番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@自社発注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@モニター発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "モニター発行フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オーダー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オーダー区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号発注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入修正連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入修正連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_修正処理年月日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正処理年月日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_修正処理年月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正処理年月日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入力区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理区", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_支払月区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入担当者コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入切捨区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_伝票摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商品コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_規格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_形式寸法", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_材質", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_品種コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカーコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_単位コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_倉庫コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ケース数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_数量", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_税抜仕入金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入返品値引理由区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入返品値引理由区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入返品値引理由区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_外内税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税適用", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_明細摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_相手先受付番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先受付番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_相手先受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先受付番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_自社発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_自社発注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_得意先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_修正オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理月日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_定価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価掛率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価掛率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカー品番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_在庫数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_モニター発行フラグ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "モニター発行フラグ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_モニター発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "モニター発行フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オーダー区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オーダー区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オーダー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オーダー区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号発注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号発注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号発注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入修正連番", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "仕入修正連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::db_test.Properties.Settings.Default.SPEEDDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 仕入修正連番, 修正処理年月日, 本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 発注連番, 入荷番号, 入荷連番, 仕入伝票番号, 処理日, 仕入日, 入荷日, 発注日, 納期, 処理区, 仕入区分コード, システム区分, 支払月区分コード, 仕入先コード, 仕名, 仕入分類, 事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 仕入単価, 仕入金額, 税抜仕入金額, 消費税, 仕入返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 発注番号, 相手先受付番号, 自社発注番号, 売上伝票番号, 得意先コード, 支払番号, チェック, 完了フラグ, WS_ID, 発注更新フラグ, 入荷更新フラグ, 仕入先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, オペレーターコード, 修正オペレーターコード, 発注行, 処理月日, 管理年月, 発注行番号, 仕入行番号, 定価, 原価掛率, メーカー品番, 納入先コード, 在庫数, 受注残数, 発注残数, モニター発行フラグ, オーダー区分, 回答コード, 回答名, 回答納期, 発注番号発注残数 FROM dbo.T仕入修正戻ファイル";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT 仕入修正連番, 修正処理年月日, 本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 発注連番, 入荷番号, 入荷連番, 仕入伝票番号, 処理日, 仕入日, 入荷日, 発注日, 納期, 処理区, 仕入区分コード, システム区分, 支払月区分コード, 仕入先コード, 仕名, 仕入分類, 事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 仕入単価, 仕入金額, 税抜仕入金額, 消費税, 仕入返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 発注番号, 相手先受付番号, 自社発注番号, 売上伝票番号, 得意先コード, 支払番号, チェック, 完了フラグ, WS_ID, 発注更新フラグ, 入荷更新フラグ, 仕入先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, オペレーターコード, 修正オペレーターコード, 発注行, 処理月日, 管理年月, 発注行番号, 仕入行番号, 定価, 原価掛率, メーカー品番, 納入先コード, 在庫数, 受注残数, 発注残数, モニター発行フラグ, オーダー区分, 回答コード, 回答名, 回答納期, 発注番号発注残数 FROM dbo.T仕入修正戻ファイル WHERE 仕入修正連番=0";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.仕入修正戻ファイル選択from仕入明細ファイル";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.仕入修正戻ファイル選択from発注ファイル";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.仕入修正戻ファイル選択from発注ファイル明細";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注行番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(仕入計上DataSet.T仕入修正戻ファイルDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 仕入計上DataSet.T仕入修正戻ファイルDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            仕入計上DataSet.T仕入修正戻ファイルDataTable dataTable = new 仕入計上DataSet.T仕入修正戻ファイルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(仕入計上DataSet.T仕入修正戻ファイルDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 仕入計上DataSet.T仕入修正戻ファイルDataTable GetDataBy() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            仕入計上DataSet.T仕入修正戻ファイルDataTable dataTable = new 仕入計上DataSet.T仕入修正戻ファイルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy仕入修正戻ファイルfrom仕入明細ファイル(仕入計上DataSet.T仕入修正戻ファイルDataTable dataTable, global::System.Nullable<int> 仕入伝票番号) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 仕入計上DataSet.T仕入修正戻ファイルDataTable GetDataBy仕入修正戻ファイルfrom仕入明細ファイル(global::System.Nullable<int> 仕入伝票番号) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            仕入計上DataSet.T仕入修正戻ファイルDataTable dataTable = new 仕入計上DataSet.T仕入修正戻ファイルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy仕入修正戻ファイルfrom発注ファイル(仕入計上DataSet.T仕入修正戻ファイルDataTable dataTable, global::System.Nullable<int> 発注番号) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((発注番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 仕入計上DataSet.T仕入修正戻ファイルDataTable GetDataBy仕入修正戻ファイルfrom発注ファイル(global::System.Nullable<int> 発注番号) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((発注番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            仕入計上DataSet.T仕入修正戻ファイルDataTable dataTable = new 仕入計上DataSet.T仕入修正戻ファイルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy仕入修正戻ファイルfrom発注ファイル明細(仕入計上DataSet.T仕入修正戻ファイルDataTable dataTable, global::System.Nullable<int> 発注番号, global::System.Nullable<int> 発注行番号) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((発注番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((発注行番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(発注行番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 仕入計上DataSet.T仕入修正戻ファイルDataTable GetDataBy仕入修正戻ファイルfrom発注ファイル明細(global::System.Nullable<int> 発注番号, global::System.Nullable<int> 発注行番号) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((発注番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((発注行番号.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(発注行番号.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            仕入計上DataSet.T仕入修正戻ファイルDataTable dataTable = new 仕入計上DataSet.T仕入修正戻ファイルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(仕入計上DataSet.T仕入修正戻ファイルDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(仕入計上DataSet dataSet) {
            return this.Adapter.Update(dataSet, "T仕入修正戻ファイル");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_仕入修正連番, 
                    global::System.Nullable<global::System.DateTime> Original_修正処理年月日, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    global::System.Nullable<short> Original_入力区分, 
                    global::System.Nullable<int> Original_処理番号, 
                    bool Original_エラーフラグ, 
                    global::System.Nullable<int> Original_受発注行数, 
                    global::System.Nullable<int> Original_発注連番, 
                    global::System.Nullable<int> Original_入荷番号, 
                    global::System.Nullable<int> Original_入荷連番, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    global::System.Nullable<global::System.DateTime> Original_仕入日, 
                    global::System.Nullable<global::System.DateTime> Original_入荷日, 
                    global::System.Nullable<global::System.DateTime> Original_発注日, 
                    global::System.Nullable<global::System.DateTime> Original_納期, 
                    global::System.Nullable<short> Original_処理区, 
                    global::System.Nullable<short> Original_仕入区分コード, 
                    short Original_システム区分, 
                    global::System.Nullable<short> Original_支払月区分コード, 
                    string Original_仕入先コード, 
                    string Original_仕名, 
                    global::System.Nullable<short> Original_仕入分類, 
                    string Original_事業所コード, 
                    string Original_仕入担当者コード, 
                    global::System.Nullable<short> Original_仕入切捨区分, 
                    global::System.Nullable<short> Original_仕入税区分, 
                    string Original_伝票摘要, 
                    string Original_商品コード, 
                    string Original_商名, 
                    string Original_規格, 
                    string Original_形式寸法, 
                    string Original_材質, 
                    global::System.Nullable<short> Original_分類, 
                    bool Original_在庫管理区分, 
                    string Original_品種コード, 
                    string Original_メーカーコード, 
                    global::System.Nullable<decimal> Original_入数, 
                    global::System.Nullable<short> Original_単位コード, 
                    string Original_倉庫コード, 
                    global::System.Nullable<decimal> Original_ケース数, 
                    global::System.Nullable<decimal> Original_数量, 
                    global::System.Nullable<decimal> Original_仕入単価, 
                    global::System.Nullable<decimal> Original_仕入金額, 
                    global::System.Nullable<decimal> Original_税抜仕入金額, 
                    global::System.Nullable<decimal> Original_消費税, 
                    global::System.Nullable<short> Original_仕入返品値引理由区分, 
                    global::System.Nullable<short> Original_外内税区分, 
                    global::System.Nullable<decimal> Original_消費税率, 
                    global::System.Nullable<decimal> Original_新消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    string Original_明細摘要, 
                    global::System.Nullable<int> Original_発注番号, 
                    string Original_相手先受付番号, 
                    string Original_自社発注番号, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    string Original_得意先コード, 
                    global::System.Nullable<int> Original_支払番号, 
                    bool Original_チェック, 
                    bool Original_完了フラグ, 
                    global::System.Nullable<short> Original_WS_ID, 
                    bool Original_発注更新フラグ, 
                    bool Original_入荷更新フラグ, 
                    bool Original_仕入先更新フラグ, 
                    bool Original_商品更新フラグ, 
                    bool Original_商品倉庫更新フラグ, 
                    string Original_オペレーターコード, 
                    string Original_修正オペレーターコード, 
                    global::System.Nullable<int> Original_発注行, 
                    global::System.Nullable<global::System.DateTime> Original_処理月日, 
                    global::System.Nullable<int> Original_管理年月, 
                    global::System.Nullable<int> Original_発注行番号, 
                    global::System.Nullable<int> Original_仕入行番号, 
                    global::System.Nullable<decimal> Original_定価, 
                    global::System.Nullable<decimal> Original_原価掛率, 
                    string Original_メーカー品番, 
                    string Original_納入先コード, 
                    global::System.Nullable<decimal> Original_在庫数, 
                    global::System.Nullable<decimal> Original_受注残数, 
                    global::System.Nullable<decimal> Original_発注残数, 
                    global::System.Nullable<short> Original_モニター発行フラグ, 
                    string Original_オーダー区分, 
                    string Original_回答コード, 
                    string Original_回答名, 
                    global::System.Nullable<global::System.DateTime> Original_回答納期, 
                    global::System.Nullable<decimal> Original_発注番号発注残数) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_仕入修正連番));
            if ((Original_修正処理年月日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_修正処理年月日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_処理コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_処理コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_入力区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((short)(Original_入力区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_処理番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_処理番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_エラーフラグ));
            if ((Original_受発注行数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_受発注行数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_発注連番.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_発注連番.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_入荷番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷連番.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_入荷連番.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入伝票番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_仕入伝票番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_処理日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((System.DateTime)(Original_処理日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((System.DateTime)(Original_仕入日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_入荷日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_発注日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_発注日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_納期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((System.DateTime)(Original_納期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_処理区.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((short)(Original_処理区.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入区分コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((short)(Original_仕入区分コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[36].Value = ((short)(Original_システム区分));
            if ((Original_支払月区分コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((short)(Original_支払月区分コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_仕入先コード));
            }
            if ((Original_仕名 == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_仕名));
            }
            if ((Original_仕入分類.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((short)(Original_仕入分類.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_事業所コード == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_事業所コード));
            }
            if ((Original_仕入担当者コード == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_仕入担当者コード));
            }
            if ((Original_仕入切捨区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((short)(Original_仕入切捨区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入税区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((short)(Original_仕入税区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_伝票摘要 == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_伝票摘要));
            }
            if ((Original_商品コード == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_商品コード));
            }
            if ((Original_商名 == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_商名));
            }
            if ((Original_規格 == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_規格));
            }
            if ((Original_形式寸法 == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_形式寸法));
            }
            if ((Original_材質 == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_材質));
            }
            if ((Original_分類.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((short)(Original_分類.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[67].Value = ((bool)(Original_在庫管理区分));
            if ((Original_品種コード == null)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_品種コード));
            }
            if ((Original_メーカーコード == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_メーカーコード));
            }
            if ((Original_入数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((decimal)(Original_入数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_単位コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((short)(Original_単位コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_倉庫コード == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_倉庫コード));
            }
            if ((Original_ケース数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((decimal)(Original_ケース数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_数量.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((decimal)(Original_数量.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入単価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((decimal)(Original_仕入単価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((decimal)(Original_仕入金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_税抜仕入金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((decimal)(Original_税抜仕入金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((decimal)(Original_消費税.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入返品値引理由区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((short)(Original_仕入返品値引理由区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_外内税区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((short)(Original_外内税区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((decimal)(Original_消費税率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[97].Value = ((decimal)(Original_新消費税率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税適用.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((System.DateTime)(Original_新消費税適用.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_明細摘要 == null)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((string)(Original_明細摘要));
            }
            if ((Original_発注番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[103].Value = ((int)(Original_発注番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_相手先受付番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[105].Value = ((string)(Original_相手先受付番号));
            }
            if ((Original_自社発注番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[107].Value = ((string)(Original_自社発注番号));
            }
            if ((Original_売上伝票番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[109].Value = ((int)(Original_売上伝票番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_得意先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[111].Value = ((string)(Original_得意先コード));
            }
            if ((Original_支払番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[113].Value = ((int)(Original_支払番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[114].Value = ((bool)(Original_チェック));
            this.Adapter.DeleteCommand.Parameters[115].Value = ((bool)(Original_完了フラグ));
            if ((Original_WS_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[117].Value = ((short)(Original_WS_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[118].Value = ((bool)(Original_発注更新フラグ));
            this.Adapter.DeleteCommand.Parameters[119].Value = ((bool)(Original_入荷更新フラグ));
            this.Adapter.DeleteCommand.Parameters[120].Value = ((bool)(Original_仕入先更新フラグ));
            this.Adapter.DeleteCommand.Parameters[121].Value = ((bool)(Original_商品更新フラグ));
            this.Adapter.DeleteCommand.Parameters[122].Value = ((bool)(Original_商品倉庫更新フラグ));
            if ((Original_オペレーターコード == null)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((string)(Original_オペレーターコード));
            }
            if ((Original_修正オペレーターコード == null)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((string)(Original_修正オペレーターコード));
            }
            if ((Original_発注行.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((int)(Original_発注行.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_処理月日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((System.DateTime)(Original_処理月日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_管理年月.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((int)(Original_管理年月.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_発注行番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((int)(Original_発注行番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入行番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((int)(Original_仕入行番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_定価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((decimal)(Original_定価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((Original_原価掛率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((decimal)(Original_原価掛率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((Original_メーカー品番 == null)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((string)(Original_メーカー品番));
            }
            if ((Original_納入先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((string)(Original_納入先コード));
            }
            if ((Original_在庫数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((decimal)(Original_在庫数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_受注残数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((decimal)(Original_受注残数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_発注残数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((decimal)(Original_発注残数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_モニター発行フラグ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((short)(Original_モニター発行フラグ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((Original_オーダー区分 == null)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((string)(Original_オーダー区分));
            }
            if ((Original_回答コード == null)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((string)(Original_回答コード));
            }
            if ((Original_回答名 == null)) {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[158].Value = ((string)(Original_回答名));
            }
            if ((Original_回答納期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[160].Value = ((System.DateTime)(Original_回答納期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            if ((Original_発注番号発注残数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[162].Value = ((decimal)(Original_発注番号発注残数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<global::System.DateTime> 修正処理年月日, 
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    global::System.Nullable<short> 入力区分, 
                    global::System.Nullable<int> 処理番号, 
                    bool エラーフラグ, 
                    global::System.Nullable<int> 受発注行数, 
                    global::System.Nullable<int> 発注連番, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入荷連番, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    global::System.Nullable<global::System.DateTime> 仕入日, 
                    global::System.Nullable<global::System.DateTime> 入荷日, 
                    global::System.Nullable<global::System.DateTime> 発注日, 
                    global::System.Nullable<global::System.DateTime> 納期, 
                    global::System.Nullable<short> 処理区, 
                    global::System.Nullable<short> 仕入区分コード, 
                    short システム区分, 
                    global::System.Nullable<short> 支払月区分コード, 
                    string 仕入先コード, 
                    string 仕名, 
                    global::System.Nullable<short> 仕入分類, 
                    string 事業所コード, 
                    string 仕入担当者コード, 
                    global::System.Nullable<short> 仕入切捨区分, 
                    global::System.Nullable<short> 仕入税区分, 
                    string 伝票摘要, 
                    string 商品コード, 
                    string 商名, 
                    string 規格, 
                    string 形式寸法, 
                    string 材質, 
                    global::System.Nullable<short> 分類, 
                    bool 在庫管理区分, 
                    string 品種コード, 
                    string メーカーコード, 
                    global::System.Nullable<decimal> 入数, 
                    global::System.Nullable<short> 単位コード, 
                    string 倉庫コード, 
                    global::System.Nullable<decimal> ケース数, 
                    global::System.Nullable<decimal> 数量, 
                    global::System.Nullable<decimal> 仕入単価, 
                    global::System.Nullable<decimal> 仕入金額, 
                    global::System.Nullable<decimal> 税抜仕入金額, 
                    global::System.Nullable<decimal> 消費税, 
                    global::System.Nullable<short> 仕入返品値引理由区分, 
                    global::System.Nullable<short> 外内税区分, 
                    global::System.Nullable<decimal> 消費税率, 
                    global::System.Nullable<decimal> 新消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    string 明細摘要, 
                    global::System.Nullable<int> 発注番号, 
                    string 相手先受付番号, 
                    string 自社発注番号, 
                    global::System.Nullable<int> 売上伝票番号, 
                    string 得意先コード, 
                    global::System.Nullable<int> 支払番号, 
                    bool チェック, 
                    bool 完了フラグ, 
                    global::System.Nullable<short> WS_ID, 
                    bool 発注更新フラグ, 
                    bool 入荷更新フラグ, 
                    bool 仕入先更新フラグ, 
                    bool 商品更新フラグ, 
                    bool 商品倉庫更新フラグ, 
                    string オペレーターコード, 
                    string 修正オペレーターコード, 
                    global::System.Nullable<int> 発注行, 
                    global::System.Nullable<global::System.DateTime> 処理月日, 
                    global::System.Nullable<int> 管理年月, 
                    global::System.Nullable<int> 発注行番号, 
                    global::System.Nullable<int> 仕入行番号, 
                    global::System.Nullable<decimal> 定価, 
                    global::System.Nullable<decimal> 原価掛率, 
                    string メーカー品番, 
                    string 納入先コード, 
                    global::System.Nullable<decimal> 在庫数, 
                    global::System.Nullable<decimal> 受注残数, 
                    global::System.Nullable<decimal> 発注残数, 
                    global::System.Nullable<short> モニター発行フラグ, 
                    string オーダー区分, 
                    string 回答コード, 
                    string 回答名, 
                    global::System.Nullable<global::System.DateTime> 回答納期, 
                    global::System.Nullable<decimal> 発注番号発注残数) {
            if ((修正処理年月日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(修正処理年月日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((本支店区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(処理コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((入力区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(入力区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(エラーフラグ));
            if ((受発注行数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(受発注行数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((発注連番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(発注連番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((入荷番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(入荷番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((入荷連番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(入荷連番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((仕入日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(仕入日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((入荷日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(入荷日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((発注日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(発注日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((納期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(納期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((処理区.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((short)(処理区.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((仕入区分コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((short)(仕入区分コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((short)(システム区分));
            if ((支払月区分コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((short)(支払月区分コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((仕入先コード == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(仕入先コード));
            }
            if ((仕名 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(仕名));
            }
            if ((仕入分類.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((short)(仕入分類.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((事業所コード == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(事業所コード));
            }
            if ((仕入担当者コード == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(仕入担当者コード));
            }
            if ((仕入切捨区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((short)(仕入切捨区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((仕入税区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((short)(仕入税区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((伝票摘要 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(伝票摘要));
            }
            if ((商品コード == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(商品コード));
            }
            if ((商名 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(商名));
            }
            if ((規格 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(規格));
            }
            if ((形式寸法 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(形式寸法));
            }
            if ((材質 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(材質));
            }
            if ((分類.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((short)(分類.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[34].Value = ((bool)(在庫管理区分));
            if ((品種コード == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(品種コード));
            }
            if ((メーカーコード == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(メーカーコード));
            }
            if ((入数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(入数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((単位コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((short)(単位コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((倉庫コード == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(倉庫コード));
            }
            if ((ケース数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(ケース数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((数量.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(数量.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((仕入単価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(仕入単価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((仕入金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(仕入金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((税抜仕入金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(税抜仕入金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((消費税.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(消費税.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((仕入返品値引理由区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((short)(仕入返品値引理由区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((外内税区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((short)(外内税区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((消費税率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(消費税率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((新消費税率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(新消費税率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((新消費税適用.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((System.DateTime)(新消費税適用.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((明細摘要 == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(明細摘要));
            }
            if ((発注番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((相手先受付番号 == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(相手先受付番号));
            }
            if ((自社発注番号 == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(自社発注番号));
            }
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((得意先コード == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(得意先コード));
            }
            if ((支払番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((int)(支払番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[58].Value = ((bool)(チェック));
            this.Adapter.InsertCommand.Parameters[59].Value = ((bool)(完了フラグ));
            if ((WS_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((short)(WS_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(発注更新フラグ));
            this.Adapter.InsertCommand.Parameters[62].Value = ((bool)(入荷更新フラグ));
            this.Adapter.InsertCommand.Parameters[63].Value = ((bool)(仕入先更新フラグ));
            this.Adapter.InsertCommand.Parameters[64].Value = ((bool)(商品更新フラグ));
            this.Adapter.InsertCommand.Parameters[65].Value = ((bool)(商品倉庫更新フラグ));
            if ((オペレーターコード == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(オペレーターコード));
            }
            if ((修正オペレーターコード == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(修正オペレーターコード));
            }
            if ((発注行.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((int)(発注行.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((処理月日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((System.DateTime)(処理月日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((管理年月.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((int)(管理年月.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((発注行番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((int)(発注行番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((仕入行番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((int)(仕入行番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((定価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((decimal)(定価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((原価掛率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((decimal)(原価掛率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((メーカー品番 == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(メーカー品番));
            }
            if ((納入先コード == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(納入先コード));
            }
            if ((在庫数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((decimal)(在庫数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((受注残数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((decimal)(受注残数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((発注残数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((decimal)(発注残数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((モニター発行フラグ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((short)(モニター発行フラグ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((オーダー区分 == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(オーダー区分));
            }
            if ((回答コード == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(回答コード));
            }
            if ((回答名 == null)) {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(回答名));
            }
            if ((回答納期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[84].Value = ((System.DateTime)(回答納期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((発注番号発注残数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((decimal)(発注番号発注残数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> 修正処理年月日, 
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    global::System.Nullable<short> 入力区分, 
                    global::System.Nullable<int> 処理番号, 
                    bool エラーフラグ, 
                    global::System.Nullable<int> 受発注行数, 
                    global::System.Nullable<int> 発注連番, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入荷連番, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    global::System.Nullable<global::System.DateTime> 仕入日, 
                    global::System.Nullable<global::System.DateTime> 入荷日, 
                    global::System.Nullable<global::System.DateTime> 発注日, 
                    global::System.Nullable<global::System.DateTime> 納期, 
                    global::System.Nullable<short> 処理区, 
                    global::System.Nullable<short> 仕入区分コード, 
                    short システム区分, 
                    global::System.Nullable<short> 支払月区分コード, 
                    string 仕入先コード, 
                    string 仕名, 
                    global::System.Nullable<short> 仕入分類, 
                    string 事業所コード, 
                    string 仕入担当者コード, 
                    global::System.Nullable<short> 仕入切捨区分, 
                    global::System.Nullable<short> 仕入税区分, 
                    string 伝票摘要, 
                    string 商品コード, 
                    string 商名, 
                    string 規格, 
                    string 形式寸法, 
                    string 材質, 
                    global::System.Nullable<short> 分類, 
                    bool 在庫管理区分, 
                    string 品種コード, 
                    string メーカーコード, 
                    global::System.Nullable<decimal> 入数, 
                    global::System.Nullable<short> 単位コード, 
                    string 倉庫コード, 
                    global::System.Nullable<decimal> ケース数, 
                    global::System.Nullable<decimal> 数量, 
                    global::System.Nullable<decimal> 仕入単価, 
                    global::System.Nullable<decimal> 仕入金額, 
                    global::System.Nullable<decimal> 税抜仕入金額, 
                    global::System.Nullable<decimal> 消費税, 
                    global::System.Nullable<short> 仕入返品値引理由区分, 
                    global::System.Nullable<short> 外内税区分, 
                    global::System.Nullable<decimal> 消費税率, 
                    global::System.Nullable<decimal> 新消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    string 明細摘要, 
                    global::System.Nullable<int> 発注番号, 
                    string 相手先受付番号, 
                    string 自社発注番号, 
                    global::System.Nullable<int> 売上伝票番号, 
                    string 得意先コード, 
                    global::System.Nullable<int> 支払番号, 
                    bool チェック, 
                    bool 完了フラグ, 
                    global::System.Nullable<short> WS_ID, 
                    bool 発注更新フラグ, 
                    bool 入荷更新フラグ, 
                    bool 仕入先更新フラグ, 
                    bool 商品更新フラグ, 
                    bool 商品倉庫更新フラグ, 
                    string オペレーターコード, 
                    string 修正オペレーターコード, 
                    global::System.Nullable<int> 発注行, 
                    global::System.Nullable<global::System.DateTime> 処理月日, 
                    global::System.Nullable<int> 管理年月, 
                    global::System.Nullable<int> 発注行番号, 
                    global::System.Nullable<int> 仕入行番号, 
                    global::System.Nullable<decimal> 定価, 
                    global::System.Nullable<decimal> 原価掛率, 
                    string メーカー品番, 
                    string 納入先コード, 
                    global::System.Nullable<decimal> 在庫数, 
                    global::System.Nullable<decimal> 受注残数, 
                    global::System.Nullable<decimal> 発注残数, 
                    global::System.Nullable<short> モニター発行フラグ, 
                    string オーダー区分, 
                    string 回答コード, 
                    string 回答名, 
                    global::System.Nullable<global::System.DateTime> 回答納期, 
                    global::System.Nullable<decimal> 発注番号発注残数, 
                    int Original_仕入修正連番, 
                    global::System.Nullable<global::System.DateTime> Original_修正処理年月日, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    global::System.Nullable<short> Original_入力区分, 
                    global::System.Nullable<int> Original_処理番号, 
                    bool Original_エラーフラグ, 
                    global::System.Nullable<int> Original_受発注行数, 
                    global::System.Nullable<int> Original_発注連番, 
                    global::System.Nullable<int> Original_入荷番号, 
                    global::System.Nullable<int> Original_入荷連番, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    global::System.Nullable<global::System.DateTime> Original_仕入日, 
                    global::System.Nullable<global::System.DateTime> Original_入荷日, 
                    global::System.Nullable<global::System.DateTime> Original_発注日, 
                    global::System.Nullable<global::System.DateTime> Original_納期, 
                    global::System.Nullable<short> Original_処理区, 
                    global::System.Nullable<short> Original_仕入区分コード, 
                    short Original_システム区分, 
                    global::System.Nullable<short> Original_支払月区分コード, 
                    string Original_仕入先コード, 
                    string Original_仕名, 
                    global::System.Nullable<short> Original_仕入分類, 
                    string Original_事業所コード, 
                    string Original_仕入担当者コード, 
                    global::System.Nullable<short> Original_仕入切捨区分, 
                    global::System.Nullable<short> Original_仕入税区分, 
                    string Original_伝票摘要, 
                    string Original_商品コード, 
                    string Original_商名, 
                    string Original_規格, 
                    string Original_形式寸法, 
                    string Original_材質, 
                    global::System.Nullable<short> Original_分類, 
                    bool Original_在庫管理区分, 
                    string Original_品種コード, 
                    string Original_メーカーコード, 
                    global::System.Nullable<decimal> Original_入数, 
                    global::System.Nullable<short> Original_単位コード, 
                    string Original_倉庫コード, 
                    global::System.Nullable<decimal> Original_ケース数, 
                    global::System.Nullable<decimal> Original_数量, 
                    global::System.Nullable<decimal> Original_仕入単価, 
                    global::System.Nullable<decimal> Original_仕入金額, 
                    global::System.Nullable<decimal> Original_税抜仕入金額, 
                    global::System.Nullable<decimal> Original_消費税, 
                    global::System.Nullable<short> Original_仕入返品値引理由区分, 
                    global::System.Nullable<short> Original_外内税区分, 
                    global::System.Nullable<decimal> Original_消費税率, 
                    global::System.Nullable<decimal> Original_新消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    string Original_明細摘要, 
                    global::System.Nullable<int> Original_発注番号, 
                    string Original_相手先受付番号, 
                    string Original_自社発注番号, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    string Original_得意先コード, 
                    global::System.Nullable<int> Original_支払番号, 
                    bool Original_チェック, 
                    bool Original_完了フラグ, 
                    global::System.Nullable<short> Original_WS_ID, 
                    bool Original_発注更新フラグ, 
                    bool Original_入荷更新フラグ, 
                    bool Original_仕入先更新フラグ, 
                    bool Original_商品更新フラグ, 
                    bool Original_商品倉庫更新フラグ, 
                    string Original_オペレーターコード, 
                    string Original_修正オペレーターコード, 
                    global::System.Nullable<int> Original_発注行, 
                    global::System.Nullable<global::System.DateTime> Original_処理月日, 
                    global::System.Nullable<int> Original_管理年月, 
                    global::System.Nullable<int> Original_発注行番号, 
                    global::System.Nullable<int> Original_仕入行番号, 
                    global::System.Nullable<decimal> Original_定価, 
                    global::System.Nullable<decimal> Original_原価掛率, 
                    string Original_メーカー品番, 
                    string Original_納入先コード, 
                    global::System.Nullable<decimal> Original_在庫数, 
                    global::System.Nullable<decimal> Original_受注残数, 
                    global::System.Nullable<decimal> Original_発注残数, 
                    global::System.Nullable<short> Original_モニター発行フラグ, 
                    string Original_オーダー区分, 
                    string Original_回答コード, 
                    string Original_回答名, 
                    global::System.Nullable<global::System.DateTime> Original_回答納期, 
                    global::System.Nullable<decimal> Original_発注番号発注残数, 
                    int 仕入修正連番) {
            if ((修正処理年月日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(修正処理年月日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(処理コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((入力区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(入力区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(エラーフラグ));
            if ((受発注行数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(受発注行数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((発注連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(発注連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((入荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(入荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((入荷連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(入荷連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((仕入日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(仕入日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((入荷日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(入荷日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((発注日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(発注日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((処理区.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((short)(処理区.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((仕入区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((short)(仕入区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((short)(システム区分));
            if ((支払月区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((short)(支払月区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((仕入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(仕入先コード));
            }
            if ((仕名 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(仕名));
            }
            if ((仕入分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((short)(仕入分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(事業所コード));
            }
            if ((仕入担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(仕入担当者コード));
            }
            if ((仕入切捨区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((short)(仕入切捨区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((仕入税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((short)(仕入税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((伝票摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(伝票摘要));
            }
            if ((商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(商品コード));
            }
            if ((商名 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(商名));
            }
            if ((規格 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(規格));
            }
            if ((形式寸法 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(形式寸法));
            }
            if ((材質 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(材質));
            }
            if ((分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((short)(分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(在庫管理区分));
            if ((品種コード == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(品種コード));
            }
            if ((メーカーコード == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(メーカーコード));
            }
            if ((入数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(入数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((単位コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((short)(単位コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((倉庫コード == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(倉庫コード));
            }
            if ((ケース数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(ケース数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((数量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(数量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((仕入単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(仕入単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((仕入金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(仕入金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((税抜仕入金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(税抜仕入金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((消費税.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(消費税.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((仕入返品値引理由区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((short)(仕入返品値引理由区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((外内税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((short)(外内税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((新消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(新消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((新消費税適用.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTime)(新消費税適用.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((明細摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(明細摘要));
            }
            if ((発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((相手先受付番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(相手先受付番号));
            }
            if ((自社発注番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(自社発注番号));
            }
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((得意先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(得意先コード));
            }
            if ((支払番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(支払番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(チェック));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(完了フラグ));
            if ((WS_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((short)(WS_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(発注更新フラグ));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(入荷更新フラグ));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(仕入先更新フラグ));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(商品更新フラグ));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(商品倉庫更新フラグ));
            if ((オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(オペレーターコード));
            }
            if ((修正オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(修正オペレーターコード));
            }
            if ((発注行.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(発注行.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((処理月日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((System.DateTime)(処理月日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((管理年月.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(管理年月.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((発注行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(発注行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((仕入行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(仕入行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((定価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((decimal)(定価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((原価掛率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(原価掛率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((メーカー品番 == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(メーカー品番));
            }
            if ((納入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(納入先コード));
            }
            if ((在庫数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(在庫数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((受注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(受注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((発注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(発注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((モニター発行フラグ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((short)(モニター発行フラグ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((オーダー区分 == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(オーダー区分));
            }
            if ((回答コード == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(回答コード));
            }
            if ((回答名 == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(回答名));
            }
            if ((回答納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((System.DateTime)(回答納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((発注番号発注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(発注番号発注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(Original_仕入修正連番));
            if ((Original_修正処理年月日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((System.DateTime)(Original_修正処理年月日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_処理コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(Original_処理コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_入力区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((short)(Original_入力区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_処理番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(Original_処理番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[97].Value = ((bool)(Original_エラーフラグ));
            if ((Original_受発注行数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(Original_受発注行数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_発注連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(Original_発注連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(Original_入荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((int)(Original_入荷連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((int)(Original_仕入伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((System.DateTime)(Original_処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((System.DateTime)(Original_仕入日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((System.DateTime)(Original_入荷日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_発注日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((System.DateTime)(Original_発注日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((System.DateTime)(Original_納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_処理区.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((short)(Original_処理区.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((short)(Original_仕入区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[122].Value = ((short)(Original_システム区分));
            if ((Original_支払月区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((short)(Original_支払月区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(Original_仕入先コード));
            }
            if ((Original_仕名 == null)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((string)(Original_仕名));
            }
            if ((Original_仕入分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((short)(Original_仕入分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((string)(Original_事業所コード));
            }
            if ((Original_仕入担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((string)(Original_仕入担当者コード));
            }
            if ((Original_仕入切捨区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((short)(Original_仕入切捨区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((short)(Original_仕入税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((Original_伝票摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((string)(Original_伝票摘要));
            }
            if ((Original_商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((string)(Original_商品コード));
            }
            if ((Original_商名 == null)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((string)(Original_商名));
            }
            if ((Original_規格 == null)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((string)(Original_規格));
            }
            if ((Original_形式寸法 == null)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((string)(Original_形式寸法));
            }
            if ((Original_材質 == null)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(Original_材質));
            }
            if ((Original_分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((short)(Original_分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[153].Value = ((bool)(Original_在庫管理区分));
            if ((Original_品種コード == null)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((string)(Original_品種コード));
            }
            if ((Original_メーカーコード == null)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_メーカーコード));
            }
            if ((Original_入数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((decimal)(Original_入数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            if ((Original_単位コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((short)(Original_単位コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            if ((Original_倉庫コード == null)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((string)(Original_倉庫コード));
            }
            if ((Original_ケース数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((decimal)(Original_ケース数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            if ((Original_数量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((decimal)(Original_数量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((decimal)(Original_仕入単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((decimal)(Original_仕入金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_税抜仕入金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((decimal)(Original_税抜仕入金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((decimal)(Original_消費税.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入返品値引理由区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((short)(Original_仕入返品値引理由区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_外内税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((short)(Original_外内税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((decimal)(Original_消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((decimal)(Original_新消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税適用.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((System.DateTime)(Original_新消費税適用.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            if ((Original_明細摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((string)(Original_明細摘要));
            }
            if ((Original_発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((int)(Original_発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            if ((Original_相手先受付番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((string)(Original_相手先受付番号));
            }
            if ((Original_自社発注番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((string)(Original_自社発注番号));
            }
            if ((Original_売上伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((int)(Original_売上伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            if ((Original_得意先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((string)(Original_得意先コード));
            }
            if ((Original_支払番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((int)(Original_支払番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[200].Value = ((bool)(Original_チェック));
            this.Adapter.UpdateCommand.Parameters[201].Value = ((bool)(Original_完了フラグ));
            if ((Original_WS_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((short)(Original_WS_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[204].Value = ((bool)(Original_発注更新フラグ));
            this.Adapter.UpdateCommand.Parameters[205].Value = ((bool)(Original_入荷更新フラグ));
            this.Adapter.UpdateCommand.Parameters[206].Value = ((bool)(Original_仕入先更新フラグ));
            this.Adapter.UpdateCommand.Parameters[207].Value = ((bool)(Original_商品更新フラグ));
            this.Adapter.UpdateCommand.Parameters[208].Value = ((bool)(Original_商品倉庫更新フラグ));
            if ((Original_オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[210].Value = ((string)(Original_オペレーターコード));
            }
            if ((Original_修正オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[212].Value = ((string)(Original_修正オペレーターコード));
            }
            if ((Original_発注行.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[214].Value = ((int)(Original_発注行.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            if ((Original_処理月日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((System.DateTime)(Original_処理月日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            if ((Original_管理年月.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((int)(Original_管理年月.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            if ((Original_発注行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[220].Value = ((int)(Original_発注行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[222].Value = ((int)(Original_仕入行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            if ((Original_定価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[224].Value = ((decimal)(Original_定価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            if ((Original_原価掛率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[226].Value = ((decimal)(Original_原価掛率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[226].Value = global::System.DBNull.Value;
            }
            if ((Original_メーカー品番 == null)) {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[228].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[228].Value = ((string)(Original_メーカー品番));
            }
            if ((Original_納入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[230].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[230].Value = ((string)(Original_納入先コード));
            }
            if ((Original_在庫数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[232].Value = ((decimal)(Original_在庫数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            if ((Original_受注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[234].Value = ((decimal)(Original_受注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[234].Value = global::System.DBNull.Value;
            }
            if ((Original_発注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[236].Value = ((decimal)(Original_発注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[236].Value = global::System.DBNull.Value;
            }
            if ((Original_モニター発行フラグ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[238].Value = ((short)(Original_モニター発行フラグ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[238].Value = global::System.DBNull.Value;
            }
            if ((Original_オーダー区分 == null)) {
                this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[240].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[240].Value = ((string)(Original_オーダー区分));
            }
            if ((Original_回答コード == null)) {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[242].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[242].Value = ((string)(Original_回答コード));
            }
            if ((Original_回答名 == null)) {
                this.Adapter.UpdateCommand.Parameters[243].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[244].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[243].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[244].Value = ((string)(Original_回答名));
            }
            if ((Original_回答納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[245].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[246].Value = ((System.DateTime)(Original_回答納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[245].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[246].Value = global::System.DBNull.Value;
            }
            if ((Original_発注番号発注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[247].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[248].Value = ((decimal)(Original_発注番号発注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[247].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[248].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[249].Value = ((int)(仕入修正連番));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> 修正処理年月日, 
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    global::System.Nullable<short> 入力区分, 
                    global::System.Nullable<int> 処理番号, 
                    bool エラーフラグ, 
                    global::System.Nullable<int> 受発注行数, 
                    global::System.Nullable<int> 発注連番, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入荷連番, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    global::System.Nullable<global::System.DateTime> 仕入日, 
                    global::System.Nullable<global::System.DateTime> 入荷日, 
                    global::System.Nullable<global::System.DateTime> 発注日, 
                    global::System.Nullable<global::System.DateTime> 納期, 
                    global::System.Nullable<short> 処理区, 
                    global::System.Nullable<short> 仕入区分コード, 
                    short システム区分, 
                    global::System.Nullable<short> 支払月区分コード, 
                    string 仕入先コード, 
                    string 仕名, 
                    global::System.Nullable<short> 仕入分類, 
                    string 事業所コード, 
                    string 仕入担当者コード, 
                    global::System.Nullable<short> 仕入切捨区分, 
                    global::System.Nullable<short> 仕入税区分, 
                    string 伝票摘要, 
                    string 商品コード, 
                    string 商名, 
                    string 規格, 
                    string 形式寸法, 
                    string 材質, 
                    global::System.Nullable<short> 分類, 
                    bool 在庫管理区分, 
                    string 品種コード, 
                    string メーカーコード, 
                    global::System.Nullable<decimal> 入数, 
                    global::System.Nullable<short> 単位コード, 
                    string 倉庫コード, 
                    global::System.Nullable<decimal> ケース数, 
                    global::System.Nullable<decimal> 数量, 
                    global::System.Nullable<decimal> 仕入単価, 
                    global::System.Nullable<decimal> 仕入金額, 
                    global::System.Nullable<decimal> 税抜仕入金額, 
                    global::System.Nullable<decimal> 消費税, 
                    global::System.Nullable<short> 仕入返品値引理由区分, 
                    global::System.Nullable<short> 外内税区分, 
                    global::System.Nullable<decimal> 消費税率, 
                    global::System.Nullable<decimal> 新消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    string 明細摘要, 
                    global::System.Nullable<int> 発注番号, 
                    string 相手先受付番号, 
                    string 自社発注番号, 
                    global::System.Nullable<int> 売上伝票番号, 
                    string 得意先コード, 
                    global::System.Nullable<int> 支払番号, 
                    bool チェック, 
                    bool 完了フラグ, 
                    global::System.Nullable<short> WS_ID, 
                    bool 発注更新フラグ, 
                    bool 入荷更新フラグ, 
                    bool 仕入先更新フラグ, 
                    bool 商品更新フラグ, 
                    bool 商品倉庫更新フラグ, 
                    string オペレーターコード, 
                    string 修正オペレーターコード, 
                    global::System.Nullable<int> 発注行, 
                    global::System.Nullable<global::System.DateTime> 処理月日, 
                    global::System.Nullable<int> 管理年月, 
                    global::System.Nullable<int> 発注行番号, 
                    global::System.Nullable<int> 仕入行番号, 
                    global::System.Nullable<decimal> 定価, 
                    global::System.Nullable<decimal> 原価掛率, 
                    string メーカー品番, 
                    string 納入先コード, 
                    global::System.Nullable<decimal> 在庫数, 
                    global::System.Nullable<decimal> 受注残数, 
                    global::System.Nullable<decimal> 発注残数, 
                    global::System.Nullable<short> モニター発行フラグ, 
                    string オーダー区分, 
                    string 回答コード, 
                    string 回答名, 
                    global::System.Nullable<global::System.DateTime> 回答納期, 
                    global::System.Nullable<decimal> 発注番号発注残数, 
                    int Original_仕入修正連番, 
                    global::System.Nullable<global::System.DateTime> Original_修正処理年月日, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    global::System.Nullable<short> Original_入力区分, 
                    global::System.Nullable<int> Original_処理番号, 
                    bool Original_エラーフラグ, 
                    global::System.Nullable<int> Original_受発注行数, 
                    global::System.Nullable<int> Original_発注連番, 
                    global::System.Nullable<int> Original_入荷番号, 
                    global::System.Nullable<int> Original_入荷連番, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    global::System.Nullable<global::System.DateTime> Original_仕入日, 
                    global::System.Nullable<global::System.DateTime> Original_入荷日, 
                    global::System.Nullable<global::System.DateTime> Original_発注日, 
                    global::System.Nullable<global::System.DateTime> Original_納期, 
                    global::System.Nullable<short> Original_処理区, 
                    global::System.Nullable<short> Original_仕入区分コード, 
                    short Original_システム区分, 
                    global::System.Nullable<short> Original_支払月区分コード, 
                    string Original_仕入先コード, 
                    string Original_仕名, 
                    global::System.Nullable<short> Original_仕入分類, 
                    string Original_事業所コード, 
                    string Original_仕入担当者コード, 
                    global::System.Nullable<short> Original_仕入切捨区分, 
                    global::System.Nullable<short> Original_仕入税区分, 
                    string Original_伝票摘要, 
                    string Original_商品コード, 
                    string Original_商名, 
                    string Original_規格, 
                    string Original_形式寸法, 
                    string Original_材質, 
                    global::System.Nullable<short> Original_分類, 
                    bool Original_在庫管理区分, 
                    string Original_品種コード, 
                    string Original_メーカーコード, 
                    global::System.Nullable<decimal> Original_入数, 
                    global::System.Nullable<short> Original_単位コード, 
                    string Original_倉庫コード, 
                    global::System.Nullable<decimal> Original_ケース数, 
                    global::System.Nullable<decimal> Original_数量, 
                    global::System.Nullable<decimal> Original_仕入単価, 
                    global::System.Nullable<decimal> Original_仕入金額, 
                    global::System.Nullable<decimal> Original_税抜仕入金額, 
                    global::System.Nullable<decimal> Original_消費税, 
                    global::System.Nullable<short> Original_仕入返品値引理由区分, 
                    global::System.Nullable<short> Original_外内税区分, 
                    global::System.Nullable<decimal> Original_消費税率, 
                    global::System.Nullable<decimal> Original_新消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    string Original_明細摘要, 
                    global::System.Nullable<int> Original_発注番号, 
                    string Original_相手先受付番号, 
                    string Original_自社発注番号, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    string Original_得意先コード, 
                    global::System.Nullable<int> Original_支払番号, 
                    bool Original_チェック, 
                    bool Original_完了フラグ, 
                    global::System.Nullable<short> Original_WS_ID, 
                    bool Original_発注更新フラグ, 
                    bool Original_入荷更新フラグ, 
                    bool Original_仕入先更新フラグ, 
                    bool Original_商品更新フラグ, 
                    bool Original_商品倉庫更新フラグ, 
                    string Original_オペレーターコード, 
                    string Original_修正オペレーターコード, 
                    global::System.Nullable<int> Original_発注行, 
                    global::System.Nullable<global::System.DateTime> Original_処理月日, 
                    global::System.Nullable<int> Original_管理年月, 
                    global::System.Nullable<int> Original_発注行番号, 
                    global::System.Nullable<int> Original_仕入行番号, 
                    global::System.Nullable<decimal> Original_定価, 
                    global::System.Nullable<decimal> Original_原価掛率, 
                    string Original_メーカー品番, 
                    string Original_納入先コード, 
                    global::System.Nullable<decimal> Original_在庫数, 
                    global::System.Nullable<decimal> Original_受注残数, 
                    global::System.Nullable<decimal> Original_発注残数, 
                    global::System.Nullable<short> Original_モニター発行フラグ, 
                    string Original_オーダー区分, 
                    string Original_回答コード, 
                    string Original_回答名, 
                    global::System.Nullable<global::System.DateTime> Original_回答納期, 
                    global::System.Nullable<decimal> Original_発注番号発注残数) {
            return this.Update(修正処理年月日, 本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 発注連番, 入荷番号, 入荷連番, 仕入伝票番号, 処理日, 仕入日, 入荷日, 発注日, 納期, 処理区, 仕入区分コード, システム区分, 支払月区分コード, 仕入先コード, 仕名, 仕入分類, 事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 仕入単価, 仕入金額, 税抜仕入金額, 消費税, 仕入返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 発注番号, 相手先受付番号, 自社発注番号, 売上伝票番号, 得意先コード, 支払番号, チェック, 完了フラグ, WS_ID, 発注更新フラグ, 入荷更新フラグ, 仕入先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, オペレーターコード, 修正オペレーターコード, 発注行, 処理月日, 管理年月, 発注行番号, 仕入行番号, 定価, 原価掛率, メーカー品番, 納入先コード, 在庫数, 受注残数, 発注残数, モニター発行フラグ, オーダー区分, 回答コード, 回答名, 回答納期, 発注番号発注残数, Original_仕入修正連番, Original_修正処理年月日, Original_本支店区分, Original_処理コード, Original_入力区分, Original_処理番号, Original_エラーフラグ, Original_受発注行数, Original_発注連番, Original_入荷番号, Original_入荷連番, Original_仕入伝票番号, Original_処理日, Original_仕入日, Original_入荷日, Original_発注日, Original_納期, Original_処理区, Original_仕入区分コード, Original_システム区分, Original_支払月区分コード, Original_仕入先コード, Original_仕名, Original_仕入分類, Original_事業所コード, Original_仕入担当者コード, Original_仕入切捨区分, Original_仕入税区分, Original_伝票摘要, Original_商品コード, Original_商名, Original_規格, Original_形式寸法, Original_材質, Original_分類, Original_在庫管理区分, Original_品種コード, Original_メーカーコード, Original_入数, Original_単位コード, Original_倉庫コード, Original_ケース数, Original_数量, Original_仕入単価, Original_仕入金額, Original_税抜仕入金額, Original_消費税, Original_仕入返品値引理由区分, Original_外内税区分, Original_消費税率, Original_新消費税率, Original_新消費税適用, Original_明細摘要, Original_発注番号, Original_相手先受付番号, Original_自社発注番号, Original_売上伝票番号, Original_得意先コード, Original_支払番号, Original_チェック, Original_完了フラグ, Original_WS_ID, Original_発注更新フラグ, Original_入荷更新フラグ, Original_仕入先更新フラグ, Original_商品更新フラグ, Original_商品倉庫更新フラグ, Original_オペレーターコード, Original_修正オペレーターコード, Original_発注行, Original_処理月日, Original_管理年月, Original_発注行番号, Original_仕入行番号, Original_定価, Original_原価掛率, Original_メーカー品番, Original_納入先コード, Original_在庫数, Original_受注残数, Original_発注残数, Original_モニター発行フラグ, Original_オーダー区分, Original_回答コード, Original_回答名, Original_回答納期, Original_発注番号発注残数, Original_仕入修正連番);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T仕入明細ファイルTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T仕入明細ファイルTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T仕入明細ファイル";
            tableMapping.ColumnMappings.Add("仕入連番", "仕入連番");
            tableMapping.ColumnMappings.Add("本支店区分", "本支店区分");
            tableMapping.ColumnMappings.Add("処理コード", "処理コード");
            tableMapping.ColumnMappings.Add("入力区分", "入力区分");
            tableMapping.ColumnMappings.Add("処理番号", "処理番号");
            tableMapping.ColumnMappings.Add("エラーフラグ", "エラーフラグ");
            tableMapping.ColumnMappings.Add("受発注行数", "受発注行数");
            tableMapping.ColumnMappings.Add("発注連番", "発注連番");
            tableMapping.ColumnMappings.Add("入荷番号", "入荷番号");
            tableMapping.ColumnMappings.Add("入荷連番", "入荷連番");
            tableMapping.ColumnMappings.Add("仕入伝票番号", "仕入伝票番号");
            tableMapping.ColumnMappings.Add("処理日", "処理日");
            tableMapping.ColumnMappings.Add("仕入日", "仕入日");
            tableMapping.ColumnMappings.Add("入荷日", "入荷日");
            tableMapping.ColumnMappings.Add("発注日", "発注日");
            tableMapping.ColumnMappings.Add("納期", "納期");
            tableMapping.ColumnMappings.Add("処理区", "処理区");
            tableMapping.ColumnMappings.Add("仕入区分コード", "仕入区分コード");
            tableMapping.ColumnMappings.Add("システム区分", "システム区分");
            tableMapping.ColumnMappings.Add("支払月区分コード", "支払月区分コード");
            tableMapping.ColumnMappings.Add("仕入先コード", "仕入先コード");
            tableMapping.ColumnMappings.Add("仕名", "仕名");
            tableMapping.ColumnMappings.Add("仕入分類", "仕入分類");
            tableMapping.ColumnMappings.Add("事業所コード", "事業所コード");
            tableMapping.ColumnMappings.Add("仕入担当者コード", "仕入担当者コード");
            tableMapping.ColumnMappings.Add("仕入切捨区分", "仕入切捨区分");
            tableMapping.ColumnMappings.Add("仕入税区分", "仕入税区分");
            tableMapping.ColumnMappings.Add("伝票摘要", "伝票摘要");
            tableMapping.ColumnMappings.Add("商品コード", "商品コード");
            tableMapping.ColumnMappings.Add("商名", "商名");
            tableMapping.ColumnMappings.Add("規格", "規格");
            tableMapping.ColumnMappings.Add("形式寸法", "形式寸法");
            tableMapping.ColumnMappings.Add("材質", "材質");
            tableMapping.ColumnMappings.Add("分類", "分類");
            tableMapping.ColumnMappings.Add("在庫管理区分", "在庫管理区分");
            tableMapping.ColumnMappings.Add("品種コード", "品種コード");
            tableMapping.ColumnMappings.Add("メーカーコード", "メーカーコード");
            tableMapping.ColumnMappings.Add("入数", "入数");
            tableMapping.ColumnMappings.Add("単位コード", "単位コード");
            tableMapping.ColumnMappings.Add("倉庫コード", "倉庫コード");
            tableMapping.ColumnMappings.Add("ケース数", "ケース数");
            tableMapping.ColumnMappings.Add("数量", "数量");
            tableMapping.ColumnMappings.Add("仕入単価", "仕入単価");
            tableMapping.ColumnMappings.Add("仕入金額", "仕入金額");
            tableMapping.ColumnMappings.Add("税抜仕入金額", "税抜仕入金額");
            tableMapping.ColumnMappings.Add("消費税", "消費税");
            tableMapping.ColumnMappings.Add("仕入返品値引理由区分", "仕入返品値引理由区分");
            tableMapping.ColumnMappings.Add("外内税区分", "外内税区分");
            tableMapping.ColumnMappings.Add("消費税率", "消費税率");
            tableMapping.ColumnMappings.Add("新消費税率", "新消費税率");
            tableMapping.ColumnMappings.Add("新消費税適用", "新消費税適用");
            tableMapping.ColumnMappings.Add("明細摘要", "明細摘要");
            tableMapping.ColumnMappings.Add("発注番号", "発注番号");
            tableMapping.ColumnMappings.Add("相手先受付番号", "相手先受付番号");
            tableMapping.ColumnMappings.Add("自社発注番号", "自社発注番号");
            tableMapping.ColumnMappings.Add("売上伝票番号", "売上伝票番号");
            tableMapping.ColumnMappings.Add("得意先コード", "得意先コード");
            tableMapping.ColumnMappings.Add("支払番号", "支払番号");
            tableMapping.ColumnMappings.Add("チェック", "チェック");
            tableMapping.ColumnMappings.Add("完了フラグ", "完了フラグ");
            tableMapping.ColumnMappings.Add("WS_ID", "WS_ID");
            tableMapping.ColumnMappings.Add("発注更新フラグ", "発注更新フラグ");
            tableMapping.ColumnMappings.Add("入荷更新フラグ", "入荷更新フラグ");
            tableMapping.ColumnMappings.Add("仕入先更新フラグ", "仕入先更新フラグ");
            tableMapping.ColumnMappings.Add("商品更新フラグ", "商品更新フラグ");
            tableMapping.ColumnMappings.Add("商品倉庫更新フラグ", "商品倉庫更新フラグ");
            tableMapping.ColumnMappings.Add("オペレーターコード", "オペレーターコード");
            tableMapping.ColumnMappings.Add("修正オペレーターコード", "修正オペレーターコード");
            tableMapping.ColumnMappings.Add("発注行", "発注行");
            tableMapping.ColumnMappings.Add("処理月日", "処理月日");
            tableMapping.ColumnMappings.Add("管理年月", "管理年月");
            tableMapping.ColumnMappings.Add("一括消費税締日", "一括消費税締日");
            tableMapping.ColumnMappings.Add("発注行番号", "発注行番号");
            tableMapping.ColumnMappings.Add("仕入行番号", "仕入行番号");
            tableMapping.ColumnMappings.Add("定価", "定価");
            tableMapping.ColumnMappings.Add("原価掛率", "原価掛率");
            tableMapping.ColumnMappings.Add("メーカー品番", "メーカー品番");
            tableMapping.ColumnMappings.Add("納入先コード", "納入先コード");
            tableMapping.ColumnMappings.Add("在庫数", "在庫数");
            tableMapping.ColumnMappings.Add("受注残数", "受注残数");
            tableMapping.ColumnMappings.Add("発注残数", "発注残数");
            tableMapping.ColumnMappings.Add("モニター発行フラグ", "モニター発行フラグ");
            tableMapping.ColumnMappings.Add("オーダー区分", "オーダー区分");
            tableMapping.ColumnMappings.Add("回答コード", "回答コード");
            tableMapping.ColumnMappings.Add("回答名", "回答名");
            tableMapping.ColumnMappings.Add("回答納期", "回答納期");
            tableMapping.ColumnMappings.Add("発注番号発注残数", "発注番号発注残数");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T仕入明細ファイル] WHERE (([仕入連番] = @Original_仕入連番) AND ((@IsNull_本支店区" +
                "分 = 1 AND [本支店区分] IS NULL) OR ([本支店区分] = @Original_本支店区分)) AND ((@IsNull_処理コード =" +
                " 1 AND [処理コード] IS NULL) OR ([処理コード] = @Original_処理コード)) AND ((@IsNull_入力区分 = 1 A" +
                "ND [入力区分] IS NULL) OR ([入力区分] = @Original_入力区分)) AND ((@IsNull_処理番号 = 1 AND [処理番" +
                "号] IS NULL) OR ([処理番号] = @Original_処理番号)) AND ([エラーフラグ] = @Original_エラーフラグ) AND " +
                "((@IsNull_受発注行数 = 1 AND [受発注行数] IS NULL) OR ([受発注行数] = @Original_受発注行数)) AND ((@" +
                "IsNull_発注連番 = 1 AND [発注連番] IS NULL) OR ([発注連番] = @Original_発注連番)) AND ((@IsNull_" +
                "入荷番号 = 1 AND [入荷番号] IS NULL) OR ([入荷番号] = @Original_入荷番号)) AND ((@IsNull_入荷連番 = " +
                "1 AND [入荷連番] IS NULL) OR ([入荷連番] = @Original_入荷連番)) AND ((@IsNull_仕入伝票番号 = 1 AND" +
                " [仕入伝票番号] IS NULL) OR ([仕入伝票番号] = @Original_仕入伝票番号)) AND ((@IsNull_処理日 = 1 AND [" +
                "処理日] IS NULL) OR ([処理日] = @Original_処理日)) AND ((@IsNull_仕入日 = 1 AND [仕入日] IS NUL" +
                "L) OR ([仕入日] = @Original_仕入日)) AND ((@IsNull_入荷日 = 1 AND [入荷日] IS NULL) OR ([入荷日" +
                "] = @Original_入荷日)) AND ((@IsNull_発注日 = 1 AND [発注日] IS NULL) OR ([発注日] = @Origin" +
                "al_発注日)) AND ((@IsNull_納期 = 1 AND [納期] IS NULL) OR ([納期] = @Original_納期)) AND ((" +
                "@IsNull_処理区 = 1 AND [処理区] IS NULL) OR ([処理区] = @Original_処理区)) AND ((@IsNull_仕入区" +
                "分コード = 1 AND [仕入区分コード] IS NULL) OR ([仕入区分コード] = @Original_仕入区分コード)) AND ([システム区分" +
                "] = @Original_システム区分) AND ((@IsNull_支払月区分コード = 1 AND [支払月区分コード] IS NULL) OR ([支払" +
                "月区分コード] = @Original_支払月区分コード)) AND ((@IsNull_仕入先コード = 1 AND [仕入先コード] IS NULL) OR" +
                " ([仕入先コード] = @Original_仕入先コード)) AND ((@IsNull_仕名 = 1 AND [仕名] IS NULL) OR ([仕名] " +
                "= @Original_仕名)) AND ((@IsNull_仕入分類 = 1 AND [仕入分類] IS NULL) OR ([仕入分類] = @Origin" +
                "al_仕入分類)) AND ((@IsNull_事業所コード = 1 AND [事業所コード] IS NULL) OR ([事業所コード] = @Origina" +
                "l_事業所コード)) AND ((@IsNull_仕入担当者コード = 1 AND [仕入担当者コード] IS NULL) OR ([仕入担当者コード] = @" +
                "Original_仕入担当者コード)) AND ((@IsNull_仕入切捨区分 = 1 AND [仕入切捨区分] IS NULL) OR ([仕入切捨区分] " +
                "= @Original_仕入切捨区分)) AND ((@IsNull_仕入税区分 = 1 AND [仕入税区分] IS NULL) OR ([仕入税区分] = " +
                "@Original_仕入税区分)) AND ((@IsNull_伝票摘要 = 1 AND [伝票摘要] IS NULL) OR ([伝票摘要] = @Origi" +
                "nal_伝票摘要)) AND ((@IsNull_商品コード = 1 AND [商品コード] IS NULL) OR ([商品コード] = @Original_" +
                "商品コード)) AND ((@IsNull_商名 = 1 AND [商名] IS NULL) OR ([商名] = @Original_商名)) AND ((@" +
                "IsNull_規格 = 1 AND [規格] IS NULL) OR ([規格] = @Original_規格)) AND ((@IsNull_形式寸法 = 1" +
                " AND [形式寸法] IS NULL) OR ([形式寸法] = @Original_形式寸法)) AND ((@IsNull_材質 = 1 AND [材質]" +
                " IS NULL) OR ([材質] = @Original_材質)) AND ((@IsNull_分類 = 1 AND [分類] IS NULL) OR ([" +
                "分類] = @Original_分類)) AND ([在庫管理区分] = @Original_在庫管理区分) AND ((@IsNull_品種コード = 1 A" +
                "ND [品種コード] IS NULL) OR ([品種コード] = @Original_品種コード)) AND ((@IsNull_メーカーコード = 1 AN" +
                "D [メーカーコード] IS NULL) OR ([メーカーコード] = @Original_メーカーコード)) AND ((@IsNull_入数 = 1 AN" +
                "D [入数] IS NULL) OR ([入数] = @Original_入数)) AND ((@IsNull_単位コード = 1 AND [単位コード] IS" +
                " NULL) OR ([単位コード] = @Original_単位コード)) AND ((@IsNull_倉庫コード = 1 AND [倉庫コード] IS NU" +
                "LL) OR ([倉庫コード] = @Original_倉庫コード)) AND ((@IsNull_ケース数 = 1 AND [ケース数] IS NULL) O" +
                "R ([ケース数] = @Original_ケース数)) AND ((@IsNull_数量 = 1 AND [数量] IS NULL) OR ([数量] = @" +
                "Original_数量)) AND ((@IsNull_仕入単価 = 1 AND [仕入単価] IS NULL) OR ([仕入単価] = @Original_" +
                "仕入単価)) AND ((@IsNull_仕入金額 = 1 AND [仕入金額] IS NULL) OR ([仕入金額] = @Original_仕入金額)) " +
                "AND ((@IsNull_税抜仕入金額 = 1 AND [税抜仕入金額] IS NULL) OR ([税抜仕入金額] = @Original_税抜仕入金額))" +
                " AND ((@IsNull_消費税 = 1 AND [消費税] IS NULL) OR ([消費税] = @Original_消費税)) AND ((@IsN" +
                "ull_仕入返品値引理由区分 = 1 AND [仕入返品値引理由区分] IS NULL) OR ([仕入返品値引理由区分] = @Original_仕入返品値引" +
                "理由区分)) AND ((@IsNull_外内税区分 = 1 AND [外内税区分] IS NULL) OR ([外内税区分] = @Original_外内税区" +
                "分)) AND ((@IsNull_消費税率 = 1 AND [消費税率] IS NULL) OR ([消費税率] = @Original_消費税率)) AND" +
                " ((@IsNull_新消費税率 = 1 AND [新消費税率] IS NULL) OR ([新消費税率] = @Original_新消費税率)) AND ((" +
                "@IsNull_新消費税適用 = 1 AND [新消費税適用] IS NULL) OR ([新消費税適用] = @Original_新消費税適用)) AND (" +
                "(@IsNull_明細摘要 = 1 AND [明細摘要] IS NULL) OR ([明細摘要] = @Original_明細摘要)) AND ((@IsNul" +
                "l_発注番号 = 1 AND [発注番号] IS NULL) OR ([発注番号] = @Original_発注番号)) AND ((@IsNull_相手先受付" +
                "番号 = 1 AND [相手先受付番号] IS NULL) OR ([相手先受付番号] = @Original_相手先受付番号)) AND ((@IsNull_" +
                "自社発注番号 = 1 AND [自社発注番号] IS NULL) OR ([自社発注番号] = @Original_自社発注番号)) AND ((@IsNull" +
                "_売上伝票番号 = 1 AND [売上伝票番号] IS NULL) OR ([売上伝票番号] = @Original_売上伝票番号)) AND ((@IsNul" +
                "l_得意先コード = 1 AND [得意先コード] IS NULL) OR ([得意先コード] = @Original_得意先コード)) AND ((@IsNu" +
                "ll_支払番号 = 1 AND [支払番号] IS NULL) OR ([支払番号] = @Original_支払番号)) AND ([チェック] = @Ori" +
                "ginal_チェック) AND ([完了フラグ] = @Original_完了フラグ) AND ((@IsNull_WS_ID = 1 AND [WS_ID] " +
                "IS NULL) OR ([WS_ID] = @Original_WS_ID)) AND ([発注更新フラグ] = @Original_発注更新フラグ) AND" +
                " ([入荷更新フラグ] = @Original_入荷更新フラグ) AND ([仕入先更新フラグ] = @Original_仕入先更新フラグ) AND ([商品更" +
                "新フラグ] = @Original_商品更新フラグ) AND ([商品倉庫更新フラグ] = @Original_商品倉庫更新フラグ) AND ((@IsNull" +
                "_オペレーターコード = 1 AND [オペレーターコード] IS NULL) OR ([オペレーターコード] = @Original_オペレーターコード)) " +
                "AND ((@IsNull_修正オペレーターコード = 1 AND [修正オペレーターコード] IS NULL) OR ([修正オペレーターコード] = @Or" +
                "iginal_修正オペレーターコード)) AND ((@IsNull_発注行 = 1 AND [発注行] IS NULL) OR ([発注行] = @Origi" +
                "nal_発注行)) AND ((@IsNull_処理月日 = 1 AND [処理月日] IS NULL) OR ([処理月日] = @Original_処理月日" +
                ")) AND ((@IsNull_管理年月 = 1 AND [管理年月] IS NULL) OR ([管理年月] = @Original_管理年月)) AND " +
                "((@IsNull_一括消費税締日 = 1 AND [一括消費税締日] IS NULL) OR ([一括消費税締日] = @Original_一括消費税締日))" +
                " AND ((@IsNull_発注行番号 = 1 AND [発注行番号] IS NULL) OR ([発注行番号] = @Original_発注行番号)) AN" +
                "D ((@IsNull_仕入行番号 = 1 AND [仕入行番号] IS NULL) OR ([仕入行番号] = @Original_仕入行番号)) AND (" +
                "(@IsNull_定価 = 1 AND [定価] IS NULL) OR ([定価] = @Original_定価)) AND ((@IsNull_原価掛率 =" +
                " 1 AND [原価掛率] IS NULL) OR ([原価掛率] = @Original_原価掛率)) AND ((@IsNull_メーカー品番 = 1 AN" +
                "D [メーカー品番] IS NULL) OR ([メーカー品番] = @Original_メーカー品番)) AND ((@IsNull_納入先コード = 1 A" +
                "ND [納入先コード] IS NULL) OR ([納入先コード] = @Original_納入先コード)) AND ((@IsNull_在庫数 = 1 AND" +
                " [在庫数] IS NULL) OR ([在庫数] = @Original_在庫数)) AND ((@IsNull_受注残数 = 1 AND [受注残数] IS" +
                " NULL) OR ([受注残数] = @Original_受注残数)) AND ((@IsNull_発注残数 = 1 AND [発注残数] IS NULL) " +
                "OR ([発注残数] = @Original_発注残数)) AND ((@IsNull_モニター発行フラグ = 1 AND [モニター発行フラグ] IS NUL" +
                "L) OR ([モニター発行フラグ] = @Original_モニター発行フラグ)) AND ((@IsNull_オーダー区分 = 1 AND [オーダー区分]" +
                " IS NULL) OR ([オーダー区分] = @Original_オーダー区分)) AND ((@IsNull_回答コード = 1 AND [回答コード] " +
                "IS NULL) OR ([回答コード] = @Original_回答コード)) AND ((@IsNull_回答名 = 1 AND [回答名] IS NULL" +
                ") OR ([回答名] = @Original_回答名)) AND ((@IsNull_回答納期 = 1 AND [回答納期] IS NULL) OR ([回答" +
                "納期] = @Original_回答納期)) AND ((@IsNull_発注番号発注残数 = 1 AND [発注番号発注残数] IS NULL) OR ([発" +
                "注番号発注残数] = @Original_発注番号発注残数)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入力区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理区", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_支払月区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入担当者コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入切捨区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_伝票摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商品コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_規格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_形式寸法", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_材質", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_品種コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカーコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_単位コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_倉庫コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ケース数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_数量", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_税抜仕入金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入返品値引理由区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入返品値引理由区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入返品値引理由区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_外内税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税適用", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_明細摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_相手先受付番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先受付番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_相手先受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先受付番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_自社発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_自社発注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_得意先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_修正オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理月日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_一括消費税締日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税締日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_一括消費税締日", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税締日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_定価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価掛率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価掛率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカー品番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_在庫数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_モニター発行フラグ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "モニター発行フラグ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_モニター発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "モニター発行フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オーダー区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オーダー区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オーダー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オーダー区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号発注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号発注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号発注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T仕入明細ファイル] ([本支店区分], [処理コード], [入力区分], [処理番号], [エラーフラグ], [受発注行数" +
                "], [発注連番], [入荷番号], [入荷連番], [仕入伝票番号], [処理日], [仕入日], [入荷日], [発注日], [納期], [処理区], [仕" +
                "入区分コード], [システム区分], [支払月区分コード], [仕入先コード], [仕名], [仕入分類], [事業所コード], [仕入担当者コード], [仕入" +
                "切捨区分], [仕入税区分], [伝票摘要], [商品コード], [商名], [規格], [形式寸法], [材質], [分類], [在庫管理区分], [品種コー" +
                "ド], [メーカーコード], [入数], [単位コード], [倉庫コード], [ケース数], [数量], [仕入単価], [仕入金額], [税抜仕入金額], [" +
                "消費税], [仕入返品値引理由区分], [外内税区分], [消費税率], [新消費税率], [新消費税適用], [明細摘要], [発注番号], [相手先受付番号" +
                "], [自社発注番号], [売上伝票番号], [得意先コード], [支払番号], [チェック], [完了フラグ], [WS_ID], [発注更新フラグ], [入" +
                "荷更新フラグ], [仕入先更新フラグ], [商品更新フラグ], [商品倉庫更新フラグ], [オペレーターコード], [修正オペレーターコード], [発注行], " +
                "[処理月日], [管理年月], [一括消費税締日], [発注行番号], [仕入行番号], [定価], [原価掛率], [メーカー品番], [納入先コード], [" +
                "在庫数], [受注残数], [発注残数], [モニター発行フラグ], [オーダー区分], [回答コード], [回答名], [回答納期], [発注番号発注残数])" +
                " VALUES (@本支店区分, @処理コード, @入力区分, @処理番号, @エラーフラグ, @受発注行数, @発注連番, @入荷番号, @入荷連番, @仕入" +
                "伝票番号, @処理日, @仕入日, @入荷日, @発注日, @納期, @処理区, @仕入区分コード, @システム区分, @支払月区分コード, @仕入先コード, " +
                "@仕名, @仕入分類, @事業所コード, @仕入担当者コード, @仕入切捨区分, @仕入税区分, @伝票摘要, @商品コード, @商名, @規格, @形式寸法," +
                " @材質, @分類, @在庫管理区分, @品種コード, @メーカーコード, @入数, @単位コード, @倉庫コード, @ケース数, @数量, @仕入単価, @仕" +
                "入金額, @税抜仕入金額, @消費税, @仕入返品値引理由区分, @外内税区分, @消費税率, @新消費税率, @新消費税適用, @明細摘要, @発注番号, @" +
                "相手先受付番号, @自社発注番号, @売上伝票番号, @得意先コード, @支払番号, @チェック, @完了フラグ, @WS_ID, @発注更新フラグ, @入荷更" +
                "新フラグ, @仕入先更新フラグ, @商品更新フラグ, @商品倉庫更新フラグ, @オペレーターコード, @修正オペレーターコード, @発注行, @処理月日, @管" +
                "理年月, @一括消費税締日, @発注行番号, @仕入行番号, @定価, @原価掛率, @メーカー品番, @納入先コード, @在庫数, @受注残数, @発注残数," +
                " @モニター発行フラグ, @オーダー区分, @回答コード, @回答名, @回答納期, @発注番号発注残数);\r\nSELECT 仕入連番, 本支店区分, 処理コー" +
                "ド, 入力区分, 処理番号, エラーフラグ, 受発注行数, 発注連番, 入荷番号, 入荷連番, 仕入伝票番号, 処理日, 仕入日, 入荷日, 発注日, 納期, " +
                "処理区, 仕入区分コード, システム区分, 支払月区分コード, 仕入先コード, 仕名, 仕入分類, 事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区" +
                "分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, " +
                "ケース数, 数量, 仕入単価, 仕入金額, 税抜仕入金額, 消費税, 仕入返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要," +
                " 発注番号, 相手先受付番号, 自社発注番号, 売上伝票番号, 得意先コード, 支払番号, チェック, 完了フラグ, WS_ID, 発注更新フラグ, 入荷更新フ" +
                "ラグ, 仕入先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, オペレーターコード, 修正オペレーターコード, 発注行, 処理月日, 管理年月, 一括消費税" +
                "締日, 発注行番号, 仕入行番号, 定価, 原価掛率, メーカー品番, 納入先コード, 在庫数, 受注残数, 発注残数, モニター発行フラグ, オーダー区分, " +
                "回答コード, 回答名, 回答納期, 発注番号発注残数 FROM T仕入明細ファイル WHERE (仕入連番 = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入返品値引理由区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@相手先受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先受付番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@自社発注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@一括消費税締日", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税締日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@モニター発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "モニター発行フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オーダー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オーダー区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号発注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T仕入明細ファイル] SET [本支店区分] = @本支店区分, [処理コード] = @処理コード, [入力区分] = @入力区分, " +
                "[処理番号] = @処理番号, [エラーフラグ] = @エラーフラグ, [受発注行数] = @受発注行数, [発注連番] = @発注連番, [入荷番号] = @" +
                "入荷番号, [入荷連番] = @入荷連番, [仕入伝票番号] = @仕入伝票番号, [処理日] = @処理日, [仕入日] = @仕入日, [入荷日] = @入" +
                "荷日, [発注日] = @発注日, [納期] = @納期, [処理区] = @処理区, [仕入区分コード] = @仕入区分コード, [システム区分] = @シス" +
                "テム区分, [支払月区分コード] = @支払月区分コード, [仕入先コード] = @仕入先コード, [仕名] = @仕名, [仕入分類] = @仕入分類, [事" +
                "業所コード] = @事業所コード, [仕入担当者コード] = @仕入担当者コード, [仕入切捨区分] = @仕入切捨区分, [仕入税区分] = @仕入税区分, " +
                "[伝票摘要] = @伝票摘要, [商品コード] = @商品コード, [商名] = @商名, [規格] = @規格, [形式寸法] = @形式寸法, [材質] =" +
                " @材質, [分類] = @分類, [在庫管理区分] = @在庫管理区分, [品種コード] = @品種コード, [メーカーコード] = @メーカーコード, [入" +
                "数] = @入数, [単位コード] = @単位コード, [倉庫コード] = @倉庫コード, [ケース数] = @ケース数, [数量] = @数量, [仕入単価]" +
                " = @仕入単価, [仕入金額] = @仕入金額, [税抜仕入金額] = @税抜仕入金額, [消費税] = @消費税, [仕入返品値引理由区分] = @仕入返品" +
                "値引理由区分, [外内税区分] = @外内税区分, [消費税率] = @消費税率, [新消費税率] = @新消費税率, [新消費税適用] = @新消費税適用, " +
                "[明細摘要] = @明細摘要, [発注番号] = @発注番号, [相手先受付番号] = @相手先受付番号, [自社発注番号] = @自社発注番号, [売上伝票番" +
                "号] = @売上伝票番号, [得意先コード] = @得意先コード, [支払番号] = @支払番号, [チェック] = @チェック, [完了フラグ] = @完了フ" +
                "ラグ, [WS_ID] = @WS_ID, [発注更新フラグ] = @発注更新フラグ, [入荷更新フラグ] = @入荷更新フラグ, [仕入先更新フラグ] = @" +
                "仕入先更新フラグ, [商品更新フラグ] = @商品更新フラグ, [商品倉庫更新フラグ] = @商品倉庫更新フラグ, [オペレーターコード] = @オペレーターコ" +
                "ード, [修正オペレーターコード] = @修正オペレーターコード, [発注行] = @発注行, [処理月日] = @処理月日, [管理年月] = @管理年月, " +
                "[一括消費税締日] = @一括消費税締日, [発注行番号] = @発注行番号, [仕入行番号] = @仕入行番号, [定価] = @定価, [原価掛率] = @" +
                "原価掛率, [メーカー品番] = @メーカー品番, [納入先コード] = @納入先コード, [在庫数] = @在庫数, [受注残数] = @受注残数, [発注残" +
                "数] = @発注残数, [モニター発行フラグ] = @モニター発行フラグ, [オーダー区分] = @オーダー区分, [回答コード] = @回答コード, [回答名" +
                "] = @回答名, [回答納期] = @回答納期, [発注番号発注残数] = @発注番号発注残数 WHERE (([仕入連番] = @Original_仕入連番" +
                ") AND ((@IsNull_本支店区分 = 1 AND [本支店区分] IS NULL) OR ([本支店区分] = @Original_本支店区分)) A" +
                "ND ((@IsNull_処理コード = 1 AND [処理コード] IS NULL) OR ([処理コード] = @Original_処理コード)) AND " +
                "((@IsNull_入力区分 = 1 AND [入力区分] IS NULL) OR ([入力区分] = @Original_入力区分)) AND ((@IsNu" +
                "ll_処理番号 = 1 AND [処理番号] IS NULL) OR ([処理番号] = @Original_処理番号)) AND ([エラーフラグ] = @O" +
                "riginal_エラーフラグ) AND ((@IsNull_受発注行数 = 1 AND [受発注行数] IS NULL) OR ([受発注行数] = @Orig" +
                "inal_受発注行数)) AND ((@IsNull_発注連番 = 1 AND [発注連番] IS NULL) OR ([発注連番] = @Original_発" +
                "注連番)) AND ((@IsNull_入荷番号 = 1 AND [入荷番号] IS NULL) OR ([入荷番号] = @Original_入荷番号)) A" +
                "ND ((@IsNull_入荷連番 = 1 AND [入荷連番] IS NULL) OR ([入荷連番] = @Original_入荷連番)) AND ((@I" +
                "sNull_仕入伝票番号 = 1 AND [仕入伝票番号] IS NULL) OR ([仕入伝票番号] = @Original_仕入伝票番号)) AND ((@" +
                "IsNull_処理日 = 1 AND [処理日] IS NULL) OR ([処理日] = @Original_処理日)) AND ((@IsNull_仕入日 " +
                "= 1 AND [仕入日] IS NULL) OR ([仕入日] = @Original_仕入日)) AND ((@IsNull_入荷日 = 1 AND [入荷" +
                "日] IS NULL) OR ([入荷日] = @Original_入荷日)) AND ((@IsNull_発注日 = 1 AND [発注日] IS NULL)" +
                " OR ([発注日] = @Original_発注日)) AND ((@IsNull_納期 = 1 AND [納期] IS NULL) OR ([納期] = @" +
                "Original_納期)) AND ((@IsNull_処理区 = 1 AND [処理区] IS NULL) OR ([処理区] = @Original_処理区" +
                ")) AND ((@IsNull_仕入区分コード = 1 AND [仕入区分コード] IS NULL) OR ([仕入区分コード] = @Original_仕入" +
                "区分コード)) AND ([システム区分] = @Original_システム区分) AND ((@IsNull_支払月区分コード = 1 AND [支払月区分コ" +
                "ード] IS NULL) OR ([支払月区分コード] = @Original_支払月区分コード)) AND ((@IsNull_仕入先コード = 1 AND " +
                "[仕入先コード] IS NULL) OR ([仕入先コード] = @Original_仕入先コード)) AND ((@IsNull_仕名 = 1 AND [仕名" +
                "] IS NULL) OR ([仕名] = @Original_仕名)) AND ((@IsNull_仕入分類 = 1 AND [仕入分類] IS NULL) " +
                "OR ([仕入分類] = @Original_仕入分類)) AND ((@IsNull_事業所コード = 1 AND [事業所コード] IS NULL) OR " +
                "([事業所コード] = @Original_事業所コード)) AND ((@IsNull_仕入担当者コード = 1 AND [仕入担当者コード] IS NULL" +
                ") OR ([仕入担当者コード] = @Original_仕入担当者コード)) AND ((@IsNull_仕入切捨区分 = 1 AND [仕入切捨区分] IS" +
                " NULL) OR ([仕入切捨区分] = @Original_仕入切捨区分)) AND ((@IsNull_仕入税区分 = 1 AND [仕入税区分] IS " +
                "NULL) OR ([仕入税区分] = @Original_仕入税区分)) AND ((@IsNull_伝票摘要 = 1 AND [伝票摘要] IS NULL)" +
                " OR ([伝票摘要] = @Original_伝票摘要)) AND ((@IsNull_商品コード = 1 AND [商品コード] IS NULL) OR (" +
                "[商品コード] = @Original_商品コード)) AND ((@IsNull_商名 = 1 AND [商名] IS NULL) OR ([商名] = @O" +
                "riginal_商名)) AND ((@IsNull_規格 = 1 AND [規格] IS NULL) OR ([規格] = @Original_規格)) AN" +
                "D ((@IsNull_形式寸法 = 1 AND [形式寸法] IS NULL) OR ([形式寸法] = @Original_形式寸法)) AND ((@Is" +
                "Null_材質 = 1 AND [材質] IS NULL) OR ([材質] = @Original_材質)) AND ((@IsNull_分類 = 1 AND" +
                " [分類] IS NULL) OR ([分類] = @Original_分類)) AND ([在庫管理区分] = @Original_在庫管理区分) AND (" +
                "(@IsNull_品種コード = 1 AND [品種コード] IS NULL) OR ([品種コード] = @Original_品種コード)) AND ((@I" +
                "sNull_メーカーコード = 1 AND [メーカーコード] IS NULL) OR ([メーカーコード] = @Original_メーカーコード)) AND" +
                " ((@IsNull_入数 = 1 AND [入数] IS NULL) OR ([入数] = @Original_入数)) AND ((@IsNull_単位コー" +
                "ド = 1 AND [単位コード] IS NULL) OR ([単位コード] = @Original_単位コード)) AND ((@IsNull_倉庫コード =" +
                " 1 AND [倉庫コード] IS NULL) OR ([倉庫コード] = @Original_倉庫コード)) AND ((@IsNull_ケース数 = 1 A" +
                "ND [ケース数] IS NULL) OR ([ケース数] = @Original_ケース数)) AND ((@IsNull_数量 = 1 AND [数量] I" +
                "S NULL) OR ([数量] = @Original_数量)) AND ((@IsNull_仕入単価 = 1 AND [仕入単価] IS NULL) OR " +
                "([仕入単価] = @Original_仕入単価)) AND ((@IsNull_仕入金額 = 1 AND [仕入金額] IS NULL) OR ([仕入金額]" +
                " = @Original_仕入金額)) AND ((@IsNull_税抜仕入金額 = 1 AND [税抜仕入金額] IS NULL) OR ([税抜仕入金額] " +
                "= @Original_税抜仕入金額)) AND ((@IsNull_消費税 = 1 AND [消費税] IS NULL) OR ([消費税] = @Origi" +
                "nal_消費税)) AND ((@IsNull_仕入返品値引理由区分 = 1 AND [仕入返品値引理由区分] IS NULL) OR ([仕入返品値引理由区分" +
                "] = @Original_仕入返品値引理由区分)) AND ((@IsNull_外内税区分 = 1 AND [外内税区分] IS NULL) OR ([外内税" +
                "区分] = @Original_外内税区分)) AND ((@IsNull_消費税率 = 1 AND [消費税率] IS NULL) OR ([消費税率] = " +
                "@Original_消費税率)) AND ((@IsNull_新消費税率 = 1 AND [新消費税率] IS NULL) OR ([新消費税率] = @Ori" +
                "ginal_新消費税率)) AND ((@IsNull_新消費税適用 = 1 AND [新消費税適用] IS NULL) OR ([新消費税適用] = @Ori" +
                "ginal_新消費税適用)) AND ((@IsNull_明細摘要 = 1 AND [明細摘要] IS NULL) OR ([明細摘要] = @Original" +
                "_明細摘要)) AND ((@IsNull_発注番号 = 1 AND [発注番号] IS NULL) OR ([発注番号] = @Original_発注番号))" +
                " AND ((@IsNull_相手先受付番号 = 1 AND [相手先受付番号] IS NULL) OR ([相手先受付番号] = @Original_相手先受" +
                "付番号)) AND ((@IsNull_自社発注番号 = 1 AND [自社発注番号] IS NULL) OR ([自社発注番号] = @Original_自社" +
                "発注番号)) AND ((@IsNull_売上伝票番号 = 1 AND [売上伝票番号] IS NULL) OR ([売上伝票番号] = @Original_売" +
                "上伝票番号)) AND ((@IsNull_得意先コード = 1 AND [得意先コード] IS NULL) OR ([得意先コード] = @Original_" +
                "得意先コード)) AND ((@IsNull_支払番号 = 1 AND [支払番号] IS NULL) OR ([支払番号] = @Original_支払番号)" +
                ") AND ([チェック] = @Original_チェック) AND ([完了フラグ] = @Original_完了フラグ) AND ((@IsNull_WS" +
                "_ID = 1 AND [WS_ID] IS NULL) OR ([WS_ID] = @Original_WS_ID)) AND ([発注更新フラグ] = @O" +
                "riginal_発注更新フラグ) AND ([入荷更新フラグ] = @Original_入荷更新フラグ) AND ([仕入先更新フラグ] = @Original" +
                "_仕入先更新フラグ) AND ([商品更新フラグ] = @Original_商品更新フラグ) AND ([商品倉庫更新フラグ] = @Original_商品倉庫" +
                "更新フラグ) AND ((@IsNull_オペレーターコード = 1 AND [オペレーターコード] IS NULL) OR ([オペレーターコード] = @O" +
                "riginal_オペレーターコード)) AND ((@IsNull_修正オペレーターコード = 1 AND [修正オペレーターコード] IS NULL) OR " +
                "([修正オペレーターコード] = @Original_修正オペレーターコード)) AND ((@IsNull_発注行 = 1 AND [発注行] IS NULL" +
                ") OR ([発注行] = @Original_発注行)) AND ((@IsNull_処理月日 = 1 AND [処理月日] IS NULL) OR ([処理" +
                "月日] = @Original_処理月日)) AND ((@IsNull_管理年月 = 1 AND [管理年月] IS NULL) OR ([管理年月] = @" +
                "Original_管理年月)) AND ((@IsNull_一括消費税締日 = 1 AND [一括消費税締日] IS NULL) OR ([一括消費税締日] =" +
                " @Original_一括消費税締日)) AND ((@IsNull_発注行番号 = 1 AND [発注行番号] IS NULL) OR ([発注行番号] = " +
                "@Original_発注行番号)) AND ((@IsNull_仕入行番号 = 1 AND [仕入行番号] IS NULL) OR ([仕入行番号] = @Or" +
                "iginal_仕入行番号)) AND ((@IsNull_定価 = 1 AND [定価] IS NULL) OR ([定価] = @Original_定価)) " +
                "AND ((@IsNull_原価掛率 = 1 AND [原価掛率] IS NULL) OR ([原価掛率] = @Original_原価掛率)) AND ((@" +
                "IsNull_メーカー品番 = 1 AND [メーカー品番] IS NULL) OR ([メーカー品番] = @Original_メーカー品番)) AND ((" +
                "@IsNull_納入先コード = 1 AND [納入先コード] IS NULL) OR ([納入先コード] = @Original_納入先コード)) AND (" +
                "(@IsNull_在庫数 = 1 AND [在庫数] IS NULL) OR ([在庫数] = @Original_在庫数)) AND ((@IsNull_受注" +
                "残数 = 1 AND [受注残数] IS NULL) OR ([受注残数] = @Original_受注残数)) AND ((@IsNull_発注残数 = 1 " +
                "AND [発注残数] IS NULL) OR ([発注残数] = @Original_発注残数)) AND ((@IsNull_モニター発行フラグ = 1 AN" +
                "D [モニター発行フラグ] IS NULL) OR ([モニター発行フラグ] = @Original_モニター発行フラグ)) AND ((@IsNull_オーダ" +
                "ー区分 = 1 AND [オーダー区分] IS NULL) OR ([オーダー区分] = @Original_オーダー区分)) AND ((@IsNull_回答" +
                "コード = 1 AND [回答コード] IS NULL) OR ([回答コード] = @Original_回答コード)) AND ((@IsNull_回答名 =" +
                " 1 AND [回答名] IS NULL) OR ([回答名] = @Original_回答名)) AND ((@IsNull_回答納期 = 1 AND [回答" +
                "納期] IS NULL) OR ([回答納期] = @Original_回答納期)) AND ((@IsNull_発注番号発注残数 = 1 AND [発注番号発" +
                "注残数] IS NULL) OR ([発注番号発注残数] = @Original_発注番号発注残数)));\r\nSELECT 仕入連番, 本支店区分, 処理コード" +
                ", 入力区分, 処理番号, エラーフラグ, 受発注行数, 発注連番, 入荷番号, 入荷連番, 仕入伝票番号, 処理日, 仕入日, 入荷日, 発注日, 納期, 処" +
                "理区, 仕入区分コード, システム区分, 支払月区分コード, 仕入先コード, 仕名, 仕入分類, 事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分" +
                ", 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケ" +
                "ース数, 数量, 仕入単価, 仕入金額, 税抜仕入金額, 消費税, 仕入返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, " +
                "発注番号, 相手先受付番号, 自社発注番号, 売上伝票番号, 得意先コード, 支払番号, チェック, 完了フラグ, WS_ID, 発注更新フラグ, 入荷更新フラ" +
                "グ, 仕入先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, オペレーターコード, 修正オペレーターコード, 発注行, 処理月日, 管理年月, 一括消費税締" +
                "日, 発注行番号, 仕入行番号, 定価, 原価掛率, メーカー品番, 納入先コード, 在庫数, 受注残数, 発注残数, モニター発行フラグ, オーダー区分, 回" +
                "答コード, 回答名, 回答納期, 発注番号発注残数 FROM T仕入明細ファイル WHERE (仕入連番 = @仕入連番)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入単価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入返品値引理由区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@相手先受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先受付番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@自社発注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@一括消費税締日", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税締日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入行番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@モニター発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "モニター発行フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オーダー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オーダー区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号発注残数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入力区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_エラーフラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "エラーフラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷連番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷連番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理区", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理区", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理区", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_支払月区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入担当者コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入担当者コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入担当者コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入切捨区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入切捨区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入切捨区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_伝票摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_伝票摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "伝票摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商品コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_商名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_規格", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_規格", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "規格", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_形式寸法", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_形式寸法", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "形式寸法", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_材質", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_材質", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "材質", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_分類", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_分類", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "分類", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫管理区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫管理区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_品種コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_品種コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "品種コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカーコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカーコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカーコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_単位コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_単位コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単位コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_倉庫コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_倉庫コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ケース数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ケース数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ケース数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_数量", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_数量", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入単価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入単価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入単価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入単価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_税抜仕入金額", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_税抜仕入金額", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "税抜仕入金額", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入返品値引理由区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入返品値引理由区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入返品値引理由区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入返品値引理由区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_外内税区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_外内税区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "外内税区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税適用", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_明細摘要", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_明細摘要", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "明細摘要", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_相手先受付番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先受付番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_相手先受付番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "相手先受付番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_自社発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_自社発注番号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "自社発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_得意先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得意先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得意先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_チェック", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "チェック", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_完了フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "完了フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WS_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入先更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入先更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_商品倉庫更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商品倉庫更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_修正オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_修正オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "修正オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注行", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理月日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理月日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理月日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_管理年月", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "管理年月", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_一括消費税締日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税締日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_一括消費税締日", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税締日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入行番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入行番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入行番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_定価", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_定価", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "定価", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_原価掛率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "原価掛率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_原価掛率", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 5, "原価掛率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_メーカー品番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_メーカー品番", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "メーカー品番", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_納入先コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入先コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_在庫数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_モニター発行フラグ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "モニター発行フラグ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_モニター発行フラグ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "モニター発行フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オーダー区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オーダー区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オーダー区分", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オーダー区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_回答納期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_回答納期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "回答納期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号発注残数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号発注残数", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号発注残数", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号発注残数", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入連番", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "仕入連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::db_test.Properties.Settings.Default.SPEEDDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 仕入連番, 本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 発注連番, 入荷番号, 入荷連番, 仕入伝票番号, 処理日, 仕入日, 入荷日, 発注日, 納期, 処理区, 仕入区分コード, システム区分, 支払月区分コード, 仕入先コード, 仕名, 仕入分類, 事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 仕入単価, 仕入金額, 税抜仕入金額, 消費税, 仕入返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 発注番号, 相手先受付番号, 自社発注番号, 売上伝票番号, 得意先コード, 支払番号, チェック, 完了フラグ, WS_ID, 発注更新フラグ, 入荷更新フラグ, 仕入先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, オペレーターコード, 修正オペレーターコード, 発注行, 処理月日, 管理年月, 一括消費税締日, 発注行番号, 仕入行番号, 定価, 原価掛率, メーカー品番, 納入先コード, 在庫数, 受注残数, 発注残数, モニター発行フラグ, オーダー区分, 回答コード, 回答名, 回答納期, 発注番号発注残数 FROM dbo.T仕入明細ファイル";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(仕入計上DataSet.T仕入明細ファイルDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 仕入計上DataSet.T仕入明細ファイルDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            仕入計上DataSet.T仕入明細ファイルDataTable dataTable = new 仕入計上DataSet.T仕入明細ファイルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(仕入計上DataSet.T仕入明細ファイルDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(仕入計上DataSet dataSet) {
            return this.Adapter.Update(dataSet, "T仕入明細ファイル");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_仕入連番, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    global::System.Nullable<short> Original_入力区分, 
                    global::System.Nullable<int> Original_処理番号, 
                    bool Original_エラーフラグ, 
                    global::System.Nullable<int> Original_受発注行数, 
                    global::System.Nullable<int> Original_発注連番, 
                    global::System.Nullable<int> Original_入荷番号, 
                    global::System.Nullable<int> Original_入荷連番, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    global::System.Nullable<global::System.DateTime> Original_仕入日, 
                    global::System.Nullable<global::System.DateTime> Original_入荷日, 
                    global::System.Nullable<global::System.DateTime> Original_発注日, 
                    global::System.Nullable<global::System.DateTime> Original_納期, 
                    global::System.Nullable<short> Original_処理区, 
                    global::System.Nullable<short> Original_仕入区分コード, 
                    short Original_システム区分, 
                    global::System.Nullable<short> Original_支払月区分コード, 
                    string Original_仕入先コード, 
                    string Original_仕名, 
                    global::System.Nullable<short> Original_仕入分類, 
                    string Original_事業所コード, 
                    string Original_仕入担当者コード, 
                    global::System.Nullable<short> Original_仕入切捨区分, 
                    global::System.Nullable<short> Original_仕入税区分, 
                    string Original_伝票摘要, 
                    string Original_商品コード, 
                    string Original_商名, 
                    string Original_規格, 
                    string Original_形式寸法, 
                    string Original_材質, 
                    global::System.Nullable<short> Original_分類, 
                    bool Original_在庫管理区分, 
                    string Original_品種コード, 
                    string Original_メーカーコード, 
                    global::System.Nullable<decimal> Original_入数, 
                    global::System.Nullable<short> Original_単位コード, 
                    string Original_倉庫コード, 
                    global::System.Nullable<decimal> Original_ケース数, 
                    global::System.Nullable<decimal> Original_数量, 
                    global::System.Nullable<decimal> Original_仕入単価, 
                    global::System.Nullable<decimal> Original_仕入金額, 
                    global::System.Nullable<decimal> Original_税抜仕入金額, 
                    global::System.Nullable<decimal> Original_消費税, 
                    global::System.Nullable<short> Original_仕入返品値引理由区分, 
                    global::System.Nullable<short> Original_外内税区分, 
                    global::System.Nullable<decimal> Original_消費税率, 
                    global::System.Nullable<decimal> Original_新消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    string Original_明細摘要, 
                    global::System.Nullable<int> Original_発注番号, 
                    string Original_相手先受付番号, 
                    string Original_自社発注番号, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    string Original_得意先コード, 
                    global::System.Nullable<int> Original_支払番号, 
                    bool Original_チェック, 
                    bool Original_完了フラグ, 
                    global::System.Nullable<short> Original_WS_ID, 
                    bool Original_発注更新フラグ, 
                    bool Original_入荷更新フラグ, 
                    bool Original_仕入先更新フラグ, 
                    bool Original_商品更新フラグ, 
                    bool Original_商品倉庫更新フラグ, 
                    string Original_オペレーターコード, 
                    string Original_修正オペレーターコード, 
                    global::System.Nullable<int> Original_発注行, 
                    global::System.Nullable<global::System.DateTime> Original_処理月日, 
                    global::System.Nullable<int> Original_管理年月, 
                    global::System.Nullable<short> Original_一括消費税締日, 
                    global::System.Nullable<int> Original_発注行番号, 
                    global::System.Nullable<int> Original_仕入行番号, 
                    global::System.Nullable<decimal> Original_定価, 
                    global::System.Nullable<decimal> Original_原価掛率, 
                    string Original_メーカー品番, 
                    string Original_納入先コード, 
                    global::System.Nullable<decimal> Original_在庫数, 
                    global::System.Nullable<decimal> Original_受注残数, 
                    global::System.Nullable<decimal> Original_発注残数, 
                    global::System.Nullable<short> Original_モニター発行フラグ, 
                    string Original_オーダー区分, 
                    string Original_回答コード, 
                    string Original_回答名, 
                    global::System.Nullable<global::System.DateTime> Original_回答納期, 
                    global::System.Nullable<decimal> Original_発注番号発注残数) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_仕入連番));
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_処理コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_処理コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_入力区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(Original_入力区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_処理番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_処理番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_エラーフラグ));
            if ((Original_受発注行数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_受発注行数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_発注連番.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_発注連番.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_入荷番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷連番.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_入荷連番.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入伝票番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_仕入伝票番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_処理日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_処理日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((System.DateTime)(Original_仕入日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((System.DateTime)(Original_入荷日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_発注日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_発注日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_納期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_納期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_処理区.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((short)(Original_処理区.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入区分コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((short)(Original_仕入区分コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[34].Value = ((short)(Original_システム区分));
            if ((Original_支払月区分コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((short)(Original_支払月区分コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_仕入先コード));
            }
            if ((Original_仕名 == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_仕名));
            }
            if ((Original_仕入分類.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((short)(Original_仕入分類.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_事業所コード == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_事業所コード));
            }
            if ((Original_仕入担当者コード == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_仕入担当者コード));
            }
            if ((Original_仕入切捨区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((short)(Original_仕入切捨区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入税区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((short)(Original_仕入税区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_伝票摘要 == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_伝票摘要));
            }
            if ((Original_商品コード == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_商品コード));
            }
            if ((Original_商名 == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_商名));
            }
            if ((Original_規格 == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_規格));
            }
            if ((Original_形式寸法 == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_形式寸法));
            }
            if ((Original_材質 == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_材質));
            }
            if ((Original_分類.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((short)(Original_分類.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[65].Value = ((bool)(Original_在庫管理区分));
            if ((Original_品種コード == null)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_品種コード));
            }
            if ((Original_メーカーコード == null)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_メーカーコード));
            }
            if ((Original_入数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((decimal)(Original_入数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_単位コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((short)(Original_単位コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_倉庫コード == null)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((string)(Original_倉庫コード));
            }
            if ((Original_ケース数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((decimal)(Original_ケース数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_数量.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((decimal)(Original_数量.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入単価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((decimal)(Original_仕入単価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((decimal)(Original_仕入金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_税抜仕入金額.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((decimal)(Original_税抜仕入金額.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((decimal)(Original_消費税.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入返品値引理由区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((short)(Original_仕入返品値引理由区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_外内税区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((short)(Original_外内税区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((decimal)(Original_消費税率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((decimal)(Original_新消費税率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税適用.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[97].Value = ((System.DateTime)(Original_新消費税適用.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_明細摘要 == null)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((string)(Original_明細摘要));
            }
            if ((Original_発注番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((int)(Original_発注番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_相手先受付番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[103].Value = ((string)(Original_相手先受付番号));
            }
            if ((Original_自社発注番号 == null)) {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[105].Value = ((string)(Original_自社発注番号));
            }
            if ((Original_売上伝票番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[107].Value = ((int)(Original_売上伝票番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_得意先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[109].Value = ((string)(Original_得意先コード));
            }
            if ((Original_支払番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[111].Value = ((int)(Original_支払番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[112].Value = ((bool)(Original_チェック));
            this.Adapter.DeleteCommand.Parameters[113].Value = ((bool)(Original_完了フラグ));
            if ((Original_WS_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[115].Value = ((short)(Original_WS_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[116].Value = ((bool)(Original_発注更新フラグ));
            this.Adapter.DeleteCommand.Parameters[117].Value = ((bool)(Original_入荷更新フラグ));
            this.Adapter.DeleteCommand.Parameters[118].Value = ((bool)(Original_仕入先更新フラグ));
            this.Adapter.DeleteCommand.Parameters[119].Value = ((bool)(Original_商品更新フラグ));
            this.Adapter.DeleteCommand.Parameters[120].Value = ((bool)(Original_商品倉庫更新フラグ));
            if ((Original_オペレーターコード == null)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((string)(Original_オペレーターコード));
            }
            if ((Original_修正オペレーターコード == null)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((string)(Original_修正オペレーターコード));
            }
            if ((Original_発注行.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((int)(Original_発注行.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_処理月日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((System.DateTime)(Original_処理月日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_管理年月.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((int)(Original_管理年月.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_一括消費税締日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((short)(Original_一括消費税締日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_発注行番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((int)(Original_発注行番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入行番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((int)(Original_仕入行番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_定価.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((decimal)(Original_定価.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((Original_原価掛率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((decimal)(Original_原価掛率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((Original_メーカー品番 == null)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((string)(Original_メーカー品番));
            }
            if ((Original_納入先コード == null)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((string)(Original_納入先コード));
            }
            if ((Original_在庫数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((decimal)(Original_在庫数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_受注残数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((decimal)(Original_受注残数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_発注残数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((decimal)(Original_発注残数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_モニター発行フラグ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((short)(Original_モニター発行フラグ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((Original_オーダー区分 == null)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((string)(Original_オーダー区分));
            }
            if ((Original_回答コード == null)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((string)(Original_回答コード));
            }
            if ((Original_回答名 == null)) {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[158].Value = ((string)(Original_回答名));
            }
            if ((Original_回答納期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[160].Value = ((System.DateTime)(Original_回答納期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            if ((Original_発注番号発注残数.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[162].Value = ((decimal)(Original_発注番号発注残数.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    global::System.Nullable<short> 入力区分, 
                    global::System.Nullable<int> 処理番号, 
                    bool エラーフラグ, 
                    global::System.Nullable<int> 受発注行数, 
                    global::System.Nullable<int> 発注連番, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入荷連番, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    global::System.Nullable<global::System.DateTime> 仕入日, 
                    global::System.Nullable<global::System.DateTime> 入荷日, 
                    global::System.Nullable<global::System.DateTime> 発注日, 
                    global::System.Nullable<global::System.DateTime> 納期, 
                    global::System.Nullable<short> 処理区, 
                    global::System.Nullable<short> 仕入区分コード, 
                    short システム区分, 
                    global::System.Nullable<short> 支払月区分コード, 
                    string 仕入先コード, 
                    string 仕名, 
                    global::System.Nullable<short> 仕入分類, 
                    string 事業所コード, 
                    string 仕入担当者コード, 
                    global::System.Nullable<short> 仕入切捨区分, 
                    global::System.Nullable<short> 仕入税区分, 
                    string 伝票摘要, 
                    string 商品コード, 
                    string 商名, 
                    string 規格, 
                    string 形式寸法, 
                    string 材質, 
                    global::System.Nullable<short> 分類, 
                    bool 在庫管理区分, 
                    string 品種コード, 
                    string メーカーコード, 
                    global::System.Nullable<decimal> 入数, 
                    global::System.Nullable<short> 単位コード, 
                    string 倉庫コード, 
                    global::System.Nullable<decimal> ケース数, 
                    global::System.Nullable<decimal> 数量, 
                    global::System.Nullable<decimal> 仕入単価, 
                    global::System.Nullable<decimal> 仕入金額, 
                    global::System.Nullable<decimal> 税抜仕入金額, 
                    global::System.Nullable<decimal> 消費税, 
                    global::System.Nullable<short> 仕入返品値引理由区分, 
                    global::System.Nullable<short> 外内税区分, 
                    global::System.Nullable<decimal> 消費税率, 
                    global::System.Nullable<decimal> 新消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    string 明細摘要, 
                    global::System.Nullable<int> 発注番号, 
                    string 相手先受付番号, 
                    string 自社発注番号, 
                    global::System.Nullable<int> 売上伝票番号, 
                    string 得意先コード, 
                    global::System.Nullable<int> 支払番号, 
                    bool チェック, 
                    bool 完了フラグ, 
                    global::System.Nullable<short> WS_ID, 
                    bool 発注更新フラグ, 
                    bool 入荷更新フラグ, 
                    bool 仕入先更新フラグ, 
                    bool 商品更新フラグ, 
                    bool 商品倉庫更新フラグ, 
                    string オペレーターコード, 
                    string 修正オペレーターコード, 
                    global::System.Nullable<int> 発注行, 
                    global::System.Nullable<global::System.DateTime> 処理月日, 
                    global::System.Nullable<int> 管理年月, 
                    global::System.Nullable<short> 一括消費税締日, 
                    global::System.Nullable<int> 発注行番号, 
                    global::System.Nullable<int> 仕入行番号, 
                    global::System.Nullable<decimal> 定価, 
                    global::System.Nullable<decimal> 原価掛率, 
                    string メーカー品番, 
                    string 納入先コード, 
                    global::System.Nullable<decimal> 在庫数, 
                    global::System.Nullable<decimal> 受注残数, 
                    global::System.Nullable<decimal> 発注残数, 
                    global::System.Nullable<short> モニター発行フラグ, 
                    string オーダー区分, 
                    string 回答コード, 
                    string 回答名, 
                    global::System.Nullable<global::System.DateTime> 回答納期, 
                    global::System.Nullable<decimal> 発注番号発注残数) {
            if ((本支店区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(処理コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((入力区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((short)(入力区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(エラーフラグ));
            if ((受発注行数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(受発注行数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((発注連番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(発注連番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((入荷番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(入荷番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((入荷連番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(入荷連番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((仕入日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(仕入日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((入荷日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(入荷日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((発注日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(発注日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((納期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(納期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((処理区.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((short)(処理区.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((仕入区分コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((short)(仕入区分コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((short)(システム区分));
            if ((支払月区分コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((short)(支払月区分コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((仕入先コード == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(仕入先コード));
            }
            if ((仕名 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(仕名));
            }
            if ((仕入分類.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((short)(仕入分類.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((事業所コード == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(事業所コード));
            }
            if ((仕入担当者コード == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(仕入担当者コード));
            }
            if ((仕入切捨区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((short)(仕入切捨区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((仕入税区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((short)(仕入税区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((伝票摘要 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(伝票摘要));
            }
            if ((商品コード == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(商品コード));
            }
            if ((商名 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(商名));
            }
            if ((規格 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(規格));
            }
            if ((形式寸法 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(形式寸法));
            }
            if ((材質 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(材質));
            }
            if ((分類.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((short)(分類.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(在庫管理区分));
            if ((品種コード == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(品種コード));
            }
            if ((メーカーコード == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(メーカーコード));
            }
            if ((入数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(入数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((単位コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((short)(単位コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((倉庫コード == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(倉庫コード));
            }
            if ((ケース数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(ケース数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((数量.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(数量.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((仕入単価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(仕入単価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((仕入金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(仕入金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((税抜仕入金額.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(税抜仕入金額.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((消費税.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(消費税.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((仕入返品値引理由区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((short)(仕入返品値引理由区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((外内税区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((short)(外内税区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((消費税率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(消費税率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((新消費税率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(新消費税率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((新消費税適用.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((System.DateTime)(新消費税適用.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((明細摘要 == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(明細摘要));
            }
            if ((発注番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((相手先受付番号 == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(相手先受付番号));
            }
            if ((自社発注番号 == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(自社発注番号));
            }
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((得意先コード == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(得意先コード));
            }
            if ((支払番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((int)(支払番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[57].Value = ((bool)(チェック));
            this.Adapter.InsertCommand.Parameters[58].Value = ((bool)(完了フラグ));
            if ((WS_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((short)(WS_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[60].Value = ((bool)(発注更新フラグ));
            this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(入荷更新フラグ));
            this.Adapter.InsertCommand.Parameters[62].Value = ((bool)(仕入先更新フラグ));
            this.Adapter.InsertCommand.Parameters[63].Value = ((bool)(商品更新フラグ));
            this.Adapter.InsertCommand.Parameters[64].Value = ((bool)(商品倉庫更新フラグ));
            if ((オペレーターコード == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(オペレーターコード));
            }
            if ((修正オペレーターコード == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(修正オペレーターコード));
            }
            if ((発注行.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((int)(発注行.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((処理月日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((System.DateTime)(処理月日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((管理年月.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((int)(管理年月.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((一括消費税締日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((short)(一括消費税締日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((発注行番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((int)(発注行番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((仕入行番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((int)(仕入行番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((定価.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((decimal)(定価.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((原価掛率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((decimal)(原価掛率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((メーカー品番 == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(メーカー品番));
            }
            if ((納入先コード == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(納入先コード));
            }
            if ((在庫数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((decimal)(在庫数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((受注残数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((decimal)(受注残数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((発注残数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((decimal)(発注残数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((モニター発行フラグ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((short)(モニター発行フラグ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((オーダー区分 == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(オーダー区分));
            }
            if ((回答コード == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(回答コード));
            }
            if ((回答名 == null)) {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(回答名));
            }
            if ((回答納期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[84].Value = ((System.DateTime)(回答納期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((発注番号発注残数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((decimal)(発注番号発注残数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    global::System.Nullable<short> 入力区分, 
                    global::System.Nullable<int> 処理番号, 
                    bool エラーフラグ, 
                    global::System.Nullable<int> 受発注行数, 
                    global::System.Nullable<int> 発注連番, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入荷連番, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    global::System.Nullable<global::System.DateTime> 仕入日, 
                    global::System.Nullable<global::System.DateTime> 入荷日, 
                    global::System.Nullable<global::System.DateTime> 発注日, 
                    global::System.Nullable<global::System.DateTime> 納期, 
                    global::System.Nullable<short> 処理区, 
                    global::System.Nullable<short> 仕入区分コード, 
                    short システム区分, 
                    global::System.Nullable<short> 支払月区分コード, 
                    string 仕入先コード, 
                    string 仕名, 
                    global::System.Nullable<short> 仕入分類, 
                    string 事業所コード, 
                    string 仕入担当者コード, 
                    global::System.Nullable<short> 仕入切捨区分, 
                    global::System.Nullable<short> 仕入税区分, 
                    string 伝票摘要, 
                    string 商品コード, 
                    string 商名, 
                    string 規格, 
                    string 形式寸法, 
                    string 材質, 
                    global::System.Nullable<short> 分類, 
                    bool 在庫管理区分, 
                    string 品種コード, 
                    string メーカーコード, 
                    global::System.Nullable<decimal> 入数, 
                    global::System.Nullable<short> 単位コード, 
                    string 倉庫コード, 
                    global::System.Nullable<decimal> ケース数, 
                    global::System.Nullable<decimal> 数量, 
                    global::System.Nullable<decimal> 仕入単価, 
                    global::System.Nullable<decimal> 仕入金額, 
                    global::System.Nullable<decimal> 税抜仕入金額, 
                    global::System.Nullable<decimal> 消費税, 
                    global::System.Nullable<short> 仕入返品値引理由区分, 
                    global::System.Nullable<short> 外内税区分, 
                    global::System.Nullable<decimal> 消費税率, 
                    global::System.Nullable<decimal> 新消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    string 明細摘要, 
                    global::System.Nullable<int> 発注番号, 
                    string 相手先受付番号, 
                    string 自社発注番号, 
                    global::System.Nullable<int> 売上伝票番号, 
                    string 得意先コード, 
                    global::System.Nullable<int> 支払番号, 
                    bool チェック, 
                    bool 完了フラグ, 
                    global::System.Nullable<short> WS_ID, 
                    bool 発注更新フラグ, 
                    bool 入荷更新フラグ, 
                    bool 仕入先更新フラグ, 
                    bool 商品更新フラグ, 
                    bool 商品倉庫更新フラグ, 
                    string オペレーターコード, 
                    string 修正オペレーターコード, 
                    global::System.Nullable<int> 発注行, 
                    global::System.Nullable<global::System.DateTime> 処理月日, 
                    global::System.Nullable<int> 管理年月, 
                    global::System.Nullable<short> 一括消費税締日, 
                    global::System.Nullable<int> 発注行番号, 
                    global::System.Nullable<int> 仕入行番号, 
                    global::System.Nullable<decimal> 定価, 
                    global::System.Nullable<decimal> 原価掛率, 
                    string メーカー品番, 
                    string 納入先コード, 
                    global::System.Nullable<decimal> 在庫数, 
                    global::System.Nullable<decimal> 受注残数, 
                    global::System.Nullable<decimal> 発注残数, 
                    global::System.Nullable<short> モニター発行フラグ, 
                    string オーダー区分, 
                    string 回答コード, 
                    string 回答名, 
                    global::System.Nullable<global::System.DateTime> 回答納期, 
                    global::System.Nullable<decimal> 発注番号発注残数, 
                    int Original_仕入連番, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    global::System.Nullable<short> Original_入力区分, 
                    global::System.Nullable<int> Original_処理番号, 
                    bool Original_エラーフラグ, 
                    global::System.Nullable<int> Original_受発注行数, 
                    global::System.Nullable<int> Original_発注連番, 
                    global::System.Nullable<int> Original_入荷番号, 
                    global::System.Nullable<int> Original_入荷連番, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    global::System.Nullable<global::System.DateTime> Original_仕入日, 
                    global::System.Nullable<global::System.DateTime> Original_入荷日, 
                    global::System.Nullable<global::System.DateTime> Original_発注日, 
                    global::System.Nullable<global::System.DateTime> Original_納期, 
                    global::System.Nullable<short> Original_処理区, 
                    global::System.Nullable<short> Original_仕入区分コード, 
                    short Original_システム区分, 
                    global::System.Nullable<short> Original_支払月区分コード, 
                    string Original_仕入先コード, 
                    string Original_仕名, 
                    global::System.Nullable<short> Original_仕入分類, 
                    string Original_事業所コード, 
                    string Original_仕入担当者コード, 
                    global::System.Nullable<short> Original_仕入切捨区分, 
                    global::System.Nullable<short> Original_仕入税区分, 
                    string Original_伝票摘要, 
                    string Original_商品コード, 
                    string Original_商名, 
                    string Original_規格, 
                    string Original_形式寸法, 
                    string Original_材質, 
                    global::System.Nullable<short> Original_分類, 
                    bool Original_在庫管理区分, 
                    string Original_品種コード, 
                    string Original_メーカーコード, 
                    global::System.Nullable<decimal> Original_入数, 
                    global::System.Nullable<short> Original_単位コード, 
                    string Original_倉庫コード, 
                    global::System.Nullable<decimal> Original_ケース数, 
                    global::System.Nullable<decimal> Original_数量, 
                    global::System.Nullable<decimal> Original_仕入単価, 
                    global::System.Nullable<decimal> Original_仕入金額, 
                    global::System.Nullable<decimal> Original_税抜仕入金額, 
                    global::System.Nullable<decimal> Original_消費税, 
                    global::System.Nullable<short> Original_仕入返品値引理由区分, 
                    global::System.Nullable<short> Original_外内税区分, 
                    global::System.Nullable<decimal> Original_消費税率, 
                    global::System.Nullable<decimal> Original_新消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    string Original_明細摘要, 
                    global::System.Nullable<int> Original_発注番号, 
                    string Original_相手先受付番号, 
                    string Original_自社発注番号, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    string Original_得意先コード, 
                    global::System.Nullable<int> Original_支払番号, 
                    bool Original_チェック, 
                    bool Original_完了フラグ, 
                    global::System.Nullable<short> Original_WS_ID, 
                    bool Original_発注更新フラグ, 
                    bool Original_入荷更新フラグ, 
                    bool Original_仕入先更新フラグ, 
                    bool Original_商品更新フラグ, 
                    bool Original_商品倉庫更新フラグ, 
                    string Original_オペレーターコード, 
                    string Original_修正オペレーターコード, 
                    global::System.Nullable<int> Original_発注行, 
                    global::System.Nullable<global::System.DateTime> Original_処理月日, 
                    global::System.Nullable<int> Original_管理年月, 
                    global::System.Nullable<short> Original_一括消費税締日, 
                    global::System.Nullable<int> Original_発注行番号, 
                    global::System.Nullable<int> Original_仕入行番号, 
                    global::System.Nullable<decimal> Original_定価, 
                    global::System.Nullable<decimal> Original_原価掛率, 
                    string Original_メーカー品番, 
                    string Original_納入先コード, 
                    global::System.Nullable<decimal> Original_在庫数, 
                    global::System.Nullable<decimal> Original_受注残数, 
                    global::System.Nullable<decimal> Original_発注残数, 
                    global::System.Nullable<short> Original_モニター発行フラグ, 
                    string Original_オーダー区分, 
                    string Original_回答コード, 
                    string Original_回答名, 
                    global::System.Nullable<global::System.DateTime> Original_回答納期, 
                    global::System.Nullable<decimal> Original_発注番号発注残数, 
                    int 仕入連番) {
            if ((本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(処理コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((入力区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(入力区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(エラーフラグ));
            if ((受発注行数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(受発注行数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((発注連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(発注連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((入荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(入荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((入荷連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(入荷連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((仕入日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(仕入日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((入荷日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(入荷日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((発注日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(発注日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((処理区.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((short)(処理区.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((仕入区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((short)(仕入区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((short)(システム区分));
            if ((支払月区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((short)(支払月区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((仕入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(仕入先コード));
            }
            if ((仕名 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(仕名));
            }
            if ((仕入分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((short)(仕入分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(事業所コード));
            }
            if ((仕入担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(仕入担当者コード));
            }
            if ((仕入切捨区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((short)(仕入切捨区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((仕入税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((short)(仕入税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((伝票摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(伝票摘要));
            }
            if ((商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(商品コード));
            }
            if ((商名 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(商名));
            }
            if ((規格 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(規格));
            }
            if ((形式寸法 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(形式寸法));
            }
            if ((材質 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(材質));
            }
            if ((分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((short)(分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(在庫管理区分));
            if ((品種コード == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(品種コード));
            }
            if ((メーカーコード == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(メーカーコード));
            }
            if ((入数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(入数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((単位コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((short)(単位コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((倉庫コード == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(倉庫コード));
            }
            if ((ケース数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(ケース数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((数量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(数量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((仕入単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(仕入単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((仕入金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(仕入金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((税抜仕入金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(税抜仕入金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((消費税.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(消費税.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((仕入返品値引理由区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((short)(仕入返品値引理由区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((外内税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((short)(外内税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((新消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(新消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((新消費税適用.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(新消費税適用.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((明細摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(明細摘要));
            }
            if ((発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((相手先受付番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(相手先受付番号));
            }
            if ((自社発注番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(自社発注番号));
            }
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((得意先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(得意先コード));
            }
            if ((支払番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(支払番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(チェック));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(完了フラグ));
            if ((WS_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((short)(WS_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(発注更新フラグ));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(入荷更新フラグ));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(仕入先更新フラグ));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(商品更新フラグ));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(商品倉庫更新フラグ));
            if ((オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(オペレーターコード));
            }
            if ((修正オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(修正オペレーターコード));
            }
            if ((発注行.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(発注行.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((処理月日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((System.DateTime)(処理月日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((管理年月.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(管理年月.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((一括消費税締日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((short)(一括消費税締日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((発注行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(発注行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((仕入行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(仕入行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((定価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((decimal)(定価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((原価掛率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(原価掛率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((メーカー品番 == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(メーカー品番));
            }
            if ((納入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(納入先コード));
            }
            if ((在庫数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(在庫数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((受注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(受注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((発注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(発注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((モニター発行フラグ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((short)(モニター発行フラグ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((オーダー区分 == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(オーダー区分));
            }
            if ((回答コード == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(回答コード));
            }
            if ((回答名 == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(回答名));
            }
            if ((回答納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((System.DateTime)(回答納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((発注番号発注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(発注番号発注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(Original_仕入連番));
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_処理コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(Original_処理コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_入力区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((short)(Original_入力区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_処理番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((int)(Original_処理番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[95].Value = ((bool)(Original_エラーフラグ));
            if ((Original_受発注行数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((int)(Original_受発注行数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_発注連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(Original_発注連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(Original_入荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷連番.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(Original_入荷連番.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((int)(Original_仕入伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((System.DateTime)(Original_処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((System.DateTime)(Original_仕入日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((System.DateTime)(Original_入荷日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_発注日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((System.DateTime)(Original_発注日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((System.DateTime)(Original_納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_処理区.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((short)(Original_処理区.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((short)(Original_仕入区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[120].Value = ((short)(Original_システム区分));
            if ((Original_支払月区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((short)(Original_支払月区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(Original_仕入先コード));
            }
            if ((Original_仕名 == null)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(Original_仕名));
            }
            if ((Original_仕入分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((short)(Original_仕入分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((string)(Original_事業所コード));
            }
            if ((Original_仕入担当者コード == null)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((string)(Original_仕入担当者コード));
            }
            if ((Original_仕入切捨区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((short)(Original_仕入切捨区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((short)(Original_仕入税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_伝票摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((string)(Original_伝票摘要));
            }
            if ((Original_商品コード == null)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((string)(Original_商品コード));
            }
            if ((Original_商名 == null)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((string)(Original_商名));
            }
            if ((Original_規格 == null)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((string)(Original_規格));
            }
            if ((Original_形式寸法 == null)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((string)(Original_形式寸法));
            }
            if ((Original_材質 == null)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((string)(Original_材質));
            }
            if ((Original_分類.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((short)(Original_分類.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[151].Value = ((bool)(Original_在庫管理区分));
            if ((Original_品種コード == null)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((string)(Original_品種コード));
            }
            if ((Original_メーカーコード == null)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((string)(Original_メーカーコード));
            }
            if ((Original_入数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((decimal)(Original_入数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            if ((Original_単位コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((short)(Original_単位コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            if ((Original_倉庫コード == null)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((string)(Original_倉庫コード));
            }
            if ((Original_ケース数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((decimal)(Original_ケース数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            if ((Original_数量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((decimal)(Original_数量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入単価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((decimal)(Original_仕入単価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((decimal)(Original_仕入金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_税抜仕入金額.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((decimal)(Original_税抜仕入金額.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((decimal)(Original_消費税.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入返品値引理由区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((short)(Original_仕入返品値引理由区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_外内税区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((short)(Original_外内税区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((decimal)(Original_消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((decimal)(Original_新消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税適用.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((System.DateTime)(Original_新消費税適用.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            if ((Original_明細摘要 == null)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((string)(Original_明細摘要));
            }
            if ((Original_発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((int)(Original_発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            if ((Original_相手先受付番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((string)(Original_相手先受付番号));
            }
            if ((Original_自社発注番号 == null)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((string)(Original_自社発注番号));
            }
            if ((Original_売上伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((int)(Original_売上伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            if ((Original_得意先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((string)(Original_得意先コード));
            }
            if ((Original_支払番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((int)(Original_支払番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[198].Value = ((bool)(Original_チェック));
            this.Adapter.UpdateCommand.Parameters[199].Value = ((bool)(Original_完了フラグ));
            if ((Original_WS_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((short)(Original_WS_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[202].Value = ((bool)(Original_発注更新フラグ));
            this.Adapter.UpdateCommand.Parameters[203].Value = ((bool)(Original_入荷更新フラグ));
            this.Adapter.UpdateCommand.Parameters[204].Value = ((bool)(Original_仕入先更新フラグ));
            this.Adapter.UpdateCommand.Parameters[205].Value = ((bool)(Original_商品更新フラグ));
            this.Adapter.UpdateCommand.Parameters[206].Value = ((bool)(Original_商品倉庫更新フラグ));
            if ((Original_オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[208].Value = ((string)(Original_オペレーターコード));
            }
            if ((Original_修正オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[210].Value = ((string)(Original_修正オペレーターコード));
            }
            if ((Original_発注行.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[212].Value = ((int)(Original_発注行.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            if ((Original_処理月日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[214].Value = ((System.DateTime)(Original_処理月日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            if ((Original_管理年月.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((int)(Original_管理年月.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            if ((Original_一括消費税締日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((short)(Original_一括消費税締日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            if ((Original_発注行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[220].Value = ((int)(Original_発注行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入行番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[222].Value = ((int)(Original_仕入行番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            if ((Original_定価.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[224].Value = ((decimal)(Original_定価.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            if ((Original_原価掛率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[226].Value = ((decimal)(Original_原価掛率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[226].Value = global::System.DBNull.Value;
            }
            if ((Original_メーカー品番 == null)) {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[228].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[228].Value = ((string)(Original_メーカー品番));
            }
            if ((Original_納入先コード == null)) {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[230].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[230].Value = ((string)(Original_納入先コード));
            }
            if ((Original_在庫数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[232].Value = ((decimal)(Original_在庫数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            if ((Original_受注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[234].Value = ((decimal)(Original_受注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[234].Value = global::System.DBNull.Value;
            }
            if ((Original_発注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[236].Value = ((decimal)(Original_発注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[236].Value = global::System.DBNull.Value;
            }
            if ((Original_モニター発行フラグ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[238].Value = ((short)(Original_モニター発行フラグ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[238].Value = global::System.DBNull.Value;
            }
            if ((Original_オーダー区分 == null)) {
                this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[240].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[240].Value = ((string)(Original_オーダー区分));
            }
            if ((Original_回答コード == null)) {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[242].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[242].Value = ((string)(Original_回答コード));
            }
            if ((Original_回答名 == null)) {
                this.Adapter.UpdateCommand.Parameters[243].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[244].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[243].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[244].Value = ((string)(Original_回答名));
            }
            if ((Original_回答納期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[245].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[246].Value = ((System.DateTime)(Original_回答納期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[245].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[246].Value = global::System.DBNull.Value;
            }
            if ((Original_発注番号発注残数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[247].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[248].Value = ((decimal)(Original_発注番号発注残数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[247].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[248].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[249].Value = ((int)(仕入連番));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    global::System.Nullable<short> 入力区分, 
                    global::System.Nullable<int> 処理番号, 
                    bool エラーフラグ, 
                    global::System.Nullable<int> 受発注行数, 
                    global::System.Nullable<int> 発注連番, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入荷連番, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    global::System.Nullable<global::System.DateTime> 仕入日, 
                    global::System.Nullable<global::System.DateTime> 入荷日, 
                    global::System.Nullable<global::System.DateTime> 発注日, 
                    global::System.Nullable<global::System.DateTime> 納期, 
                    global::System.Nullable<short> 処理区, 
                    global::System.Nullable<short> 仕入区分コード, 
                    short システム区分, 
                    global::System.Nullable<short> 支払月区分コード, 
                    string 仕入先コード, 
                    string 仕名, 
                    global::System.Nullable<short> 仕入分類, 
                    string 事業所コード, 
                    string 仕入担当者コード, 
                    global::System.Nullable<short> 仕入切捨区分, 
                    global::System.Nullable<short> 仕入税区分, 
                    string 伝票摘要, 
                    string 商品コード, 
                    string 商名, 
                    string 規格, 
                    string 形式寸法, 
                    string 材質, 
                    global::System.Nullable<short> 分類, 
                    bool 在庫管理区分, 
                    string 品種コード, 
                    string メーカーコード, 
                    global::System.Nullable<decimal> 入数, 
                    global::System.Nullable<short> 単位コード, 
                    string 倉庫コード, 
                    global::System.Nullable<decimal> ケース数, 
                    global::System.Nullable<decimal> 数量, 
                    global::System.Nullable<decimal> 仕入単価, 
                    global::System.Nullable<decimal> 仕入金額, 
                    global::System.Nullable<decimal> 税抜仕入金額, 
                    global::System.Nullable<decimal> 消費税, 
                    global::System.Nullable<short> 仕入返品値引理由区分, 
                    global::System.Nullable<short> 外内税区分, 
                    global::System.Nullable<decimal> 消費税率, 
                    global::System.Nullable<decimal> 新消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    string 明細摘要, 
                    global::System.Nullable<int> 発注番号, 
                    string 相手先受付番号, 
                    string 自社発注番号, 
                    global::System.Nullable<int> 売上伝票番号, 
                    string 得意先コード, 
                    global::System.Nullable<int> 支払番号, 
                    bool チェック, 
                    bool 完了フラグ, 
                    global::System.Nullable<short> WS_ID, 
                    bool 発注更新フラグ, 
                    bool 入荷更新フラグ, 
                    bool 仕入先更新フラグ, 
                    bool 商品更新フラグ, 
                    bool 商品倉庫更新フラグ, 
                    string オペレーターコード, 
                    string 修正オペレーターコード, 
                    global::System.Nullable<int> 発注行, 
                    global::System.Nullable<global::System.DateTime> 処理月日, 
                    global::System.Nullable<int> 管理年月, 
                    global::System.Nullable<short> 一括消費税締日, 
                    global::System.Nullable<int> 発注行番号, 
                    global::System.Nullable<int> 仕入行番号, 
                    global::System.Nullable<decimal> 定価, 
                    global::System.Nullable<decimal> 原価掛率, 
                    string メーカー品番, 
                    string 納入先コード, 
                    global::System.Nullable<decimal> 在庫数, 
                    global::System.Nullable<decimal> 受注残数, 
                    global::System.Nullable<decimal> 発注残数, 
                    global::System.Nullable<short> モニター発行フラグ, 
                    string オーダー区分, 
                    string 回答コード, 
                    string 回答名, 
                    global::System.Nullable<global::System.DateTime> 回答納期, 
                    global::System.Nullable<decimal> 発注番号発注残数, 
                    int Original_仕入連番, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    global::System.Nullable<short> Original_入力区分, 
                    global::System.Nullable<int> Original_処理番号, 
                    bool Original_エラーフラグ, 
                    global::System.Nullable<int> Original_受発注行数, 
                    global::System.Nullable<int> Original_発注連番, 
                    global::System.Nullable<int> Original_入荷番号, 
                    global::System.Nullable<int> Original_入荷連番, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    global::System.Nullable<global::System.DateTime> Original_仕入日, 
                    global::System.Nullable<global::System.DateTime> Original_入荷日, 
                    global::System.Nullable<global::System.DateTime> Original_発注日, 
                    global::System.Nullable<global::System.DateTime> Original_納期, 
                    global::System.Nullable<short> Original_処理区, 
                    global::System.Nullable<short> Original_仕入区分コード, 
                    short Original_システム区分, 
                    global::System.Nullable<short> Original_支払月区分コード, 
                    string Original_仕入先コード, 
                    string Original_仕名, 
                    global::System.Nullable<short> Original_仕入分類, 
                    string Original_事業所コード, 
                    string Original_仕入担当者コード, 
                    global::System.Nullable<short> Original_仕入切捨区分, 
                    global::System.Nullable<short> Original_仕入税区分, 
                    string Original_伝票摘要, 
                    string Original_商品コード, 
                    string Original_商名, 
                    string Original_規格, 
                    string Original_形式寸法, 
                    string Original_材質, 
                    global::System.Nullable<short> Original_分類, 
                    bool Original_在庫管理区分, 
                    string Original_品種コード, 
                    string Original_メーカーコード, 
                    global::System.Nullable<decimal> Original_入数, 
                    global::System.Nullable<short> Original_単位コード, 
                    string Original_倉庫コード, 
                    global::System.Nullable<decimal> Original_ケース数, 
                    global::System.Nullable<decimal> Original_数量, 
                    global::System.Nullable<decimal> Original_仕入単価, 
                    global::System.Nullable<decimal> Original_仕入金額, 
                    global::System.Nullable<decimal> Original_税抜仕入金額, 
                    global::System.Nullable<decimal> Original_消費税, 
                    global::System.Nullable<short> Original_仕入返品値引理由区分, 
                    global::System.Nullable<short> Original_外内税区分, 
                    global::System.Nullable<decimal> Original_消費税率, 
                    global::System.Nullable<decimal> Original_新消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    string Original_明細摘要, 
                    global::System.Nullable<int> Original_発注番号, 
                    string Original_相手先受付番号, 
                    string Original_自社発注番号, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    string Original_得意先コード, 
                    global::System.Nullable<int> Original_支払番号, 
                    bool Original_チェック, 
                    bool Original_完了フラグ, 
                    global::System.Nullable<short> Original_WS_ID, 
                    bool Original_発注更新フラグ, 
                    bool Original_入荷更新フラグ, 
                    bool Original_仕入先更新フラグ, 
                    bool Original_商品更新フラグ, 
                    bool Original_商品倉庫更新フラグ, 
                    string Original_オペレーターコード, 
                    string Original_修正オペレーターコード, 
                    global::System.Nullable<int> Original_発注行, 
                    global::System.Nullable<global::System.DateTime> Original_処理月日, 
                    global::System.Nullable<int> Original_管理年月, 
                    global::System.Nullable<short> Original_一括消費税締日, 
                    global::System.Nullable<int> Original_発注行番号, 
                    global::System.Nullable<int> Original_仕入行番号, 
                    global::System.Nullable<decimal> Original_定価, 
                    global::System.Nullable<decimal> Original_原価掛率, 
                    string Original_メーカー品番, 
                    string Original_納入先コード, 
                    global::System.Nullable<decimal> Original_在庫数, 
                    global::System.Nullable<decimal> Original_受注残数, 
                    global::System.Nullable<decimal> Original_発注残数, 
                    global::System.Nullable<short> Original_モニター発行フラグ, 
                    string Original_オーダー区分, 
                    string Original_回答コード, 
                    string Original_回答名, 
                    global::System.Nullable<global::System.DateTime> Original_回答納期, 
                    global::System.Nullable<decimal> Original_発注番号発注残数) {
            return this.Update(本支店区分, 処理コード, 入力区分, 処理番号, エラーフラグ, 受発注行数, 発注連番, 入荷番号, 入荷連番, 仕入伝票番号, 処理日, 仕入日, 入荷日, 発注日, 納期, 処理区, 仕入区分コード, システム区分, 支払月区分コード, 仕入先コード, 仕名, 仕入分類, 事業所コード, 仕入担当者コード, 仕入切捨区分, 仕入税区分, 伝票摘要, 商品コード, 商名, 規格, 形式寸法, 材質, 分類, 在庫管理区分, 品種コード, メーカーコード, 入数, 単位コード, 倉庫コード, ケース数, 数量, 仕入単価, 仕入金額, 税抜仕入金額, 消費税, 仕入返品値引理由区分, 外内税区分, 消費税率, 新消費税率, 新消費税適用, 明細摘要, 発注番号, 相手先受付番号, 自社発注番号, 売上伝票番号, 得意先コード, 支払番号, チェック, 完了フラグ, WS_ID, 発注更新フラグ, 入荷更新フラグ, 仕入先更新フラグ, 商品更新フラグ, 商品倉庫更新フラグ, オペレーターコード, 修正オペレーターコード, 発注行, 処理月日, 管理年月, 一括消費税締日, 発注行番号, 仕入行番号, 定価, 原価掛率, メーカー品番, 納入先コード, 在庫数, 受注残数, 発注残数, モニター発行フラグ, オーダー区分, 回答コード, 回答名, 回答納期, 発注番号発注残数, Original_仕入連番, Original_本支店区分, Original_処理コード, Original_入力区分, Original_処理番号, Original_エラーフラグ, Original_受発注行数, Original_発注連番, Original_入荷番号, Original_入荷連番, Original_仕入伝票番号, Original_処理日, Original_仕入日, Original_入荷日, Original_発注日, Original_納期, Original_処理区, Original_仕入区分コード, Original_システム区分, Original_支払月区分コード, Original_仕入先コード, Original_仕名, Original_仕入分類, Original_事業所コード, Original_仕入担当者コード, Original_仕入切捨区分, Original_仕入税区分, Original_伝票摘要, Original_商品コード, Original_商名, Original_規格, Original_形式寸法, Original_材質, Original_分類, Original_在庫管理区分, Original_品種コード, Original_メーカーコード, Original_入数, Original_単位コード, Original_倉庫コード, Original_ケース数, Original_数量, Original_仕入単価, Original_仕入金額, Original_税抜仕入金額, Original_消費税, Original_仕入返品値引理由区分, Original_外内税区分, Original_消費税率, Original_新消費税率, Original_新消費税適用, Original_明細摘要, Original_発注番号, Original_相手先受付番号, Original_自社発注番号, Original_売上伝票番号, Original_得意先コード, Original_支払番号, Original_チェック, Original_完了フラグ, Original_WS_ID, Original_発注更新フラグ, Original_入荷更新フラグ, Original_仕入先更新フラグ, Original_商品更新フラグ, Original_商品倉庫更新フラグ, Original_オペレーターコード, Original_修正オペレーターコード, Original_発注行, Original_処理月日, Original_管理年月, Original_一括消費税締日, Original_発注行番号, Original_仕入行番号, Original_定価, Original_原価掛率, Original_メーカー品番, Original_納入先コード, Original_在庫数, Original_受注残数, Original_発注残数, Original_モニター発行フラグ, Original_オーダー区分, Original_回答コード, Original_回答名, Original_回答納期, Original_発注番号発注残数, Original_仕入連番);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T処理履歴テーブルTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T処理履歴テーブルTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T処理履歴テーブル";
            tableMapping.ColumnMappings.Add("カウント", "カウント");
            tableMapping.ColumnMappings.Add("本支店区分", "本支店区分");
            tableMapping.ColumnMappings.Add("処理コード", "処理コード");
            tableMapping.ColumnMappings.Add("処理名", "処理名");
            tableMapping.ColumnMappings.Add("入力区分", "入力区分");
            tableMapping.ColumnMappings.Add("事業所コード", "事業所コード");
            tableMapping.ColumnMappings.Add("処理番号", "処理番号");
            tableMapping.ColumnMappings.Add("売上仕入区分コード", "売上仕入区分コード");
            tableMapping.ColumnMappings.Add("システム区分", "システム区分");
            tableMapping.ColumnMappings.Add("受注番号", "受注番号");
            tableMapping.ColumnMappings.Add("売上伝票番号", "売上伝票番号");
            tableMapping.ColumnMappings.Add("出荷番号", "出荷番号");
            tableMapping.ColumnMappings.Add("発注番号", "発注番号");
            tableMapping.ColumnMappings.Add("仕入伝票番号", "仕入伝票番号");
            tableMapping.ColumnMappings.Add("入荷番号", "入荷番号");
            tableMapping.ColumnMappings.Add("入金番号", "入金番号");
            tableMapping.ColumnMappings.Add("支払番号", "支払番号");
            tableMapping.ColumnMappings.Add("移動番号", "移動番号");
            tableMapping.ColumnMappings.Add("棚卸番号", "棚卸番号");
            tableMapping.ColumnMappings.Add("処理日", "処理日");
            tableMapping.ColumnMappings.Add("更新フラグ", "更新フラグ");
            tableMapping.ColumnMappings.Add("更新INDEX", "更新INDEX");
            tableMapping.ColumnMappings.Add("更新処理日", "更新処理日");
            tableMapping.ColumnMappings.Add("オペレーターコード", "オペレーターコード");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T処理履歴テーブル] WHERE (([カウント] = @Original_カウント) AND ((@IsNull_本支店区" +
                "分 = 1 AND [本支店区分] IS NULL) OR ([本支店区分] = @Original_本支店区分)) AND ((@IsNull_処理コード =" +
                " 1 AND [処理コード] IS NULL) OR ([処理コード] = @Original_処理コード)) AND ((@IsNull_処理名 = 1 AN" +
                "D [処理名] IS NULL) OR ([処理名] = @Original_処理名)) AND ((@IsNull_入力区分 = 1 AND [入力区分] I" +
                "S NULL) OR ([入力区分] = @Original_入力区分)) AND ((@IsNull_事業所コード = 1 AND [事業所コード] IS N" +
                "ULL) OR ([事業所コード] = @Original_事業所コード)) AND ((@IsNull_処理番号 = 1 AND [処理番号] IS NULL" +
                ") OR ([処理番号] = @Original_処理番号)) AND ((@IsNull_売上仕入区分コード = 1 AND [売上仕入区分コード] IS N" +
                "ULL) OR ([売上仕入区分コード] = @Original_売上仕入区分コード)) AND ((@IsNull_システム区分 = 1 AND [システム区" +
                "分] IS NULL) OR ([システム区分] = @Original_システム区分)) AND ((@IsNull_受注番号 = 1 AND [受注番号] " +
                "IS NULL) OR ([受注番号] = @Original_受注番号)) AND ((@IsNull_売上伝票番号 = 1 AND [売上伝票番号] IS " +
                "NULL) OR ([売上伝票番号] = @Original_売上伝票番号)) AND ((@IsNull_出荷番号 = 1 AND [出荷番号] IS NUL" +
                "L) OR ([出荷番号] = @Original_出荷番号)) AND ((@IsNull_発注番号 = 1 AND [発注番号] IS NULL) OR (" +
                "[発注番号] = @Original_発注番号)) AND ((@IsNull_仕入伝票番号 = 1 AND [仕入伝票番号] IS NULL) OR ([仕入" +
                "伝票番号] = @Original_仕入伝票番号)) AND ((@IsNull_入荷番号 = 1 AND [入荷番号] IS NULL) OR ([入荷番号]" +
                " = @Original_入荷番号)) AND ((@IsNull_入金番号 = 1 AND [入金番号] IS NULL) OR ([入金番号] = @Ori" +
                "ginal_入金番号)) AND ((@IsNull_支払番号 = 1 AND [支払番号] IS NULL) OR ([支払番号] = @Original_支" +
                "払番号)) AND ((@IsNull_移動番号 = 1 AND [移動番号] IS NULL) OR ([移動番号] = @Original_移動番号)) A" +
                "ND ((@IsNull_棚卸番号 = 1 AND [棚卸番号] IS NULL) OR ([棚卸番号] = @Original_棚卸番号)) AND ((@I" +
                "sNull_処理日 = 1 AND [処理日] IS NULL) OR ([処理日] = @Original_処理日)) AND ([更新フラグ] = @Ori" +
                "ginal_更新フラグ) AND ([更新INDEX] = @Original_更新INDEX) AND ((@IsNull_更新処理日 = 1 AND [更新" +
                "処理日] IS NULL) OR ([更新処理日] = @Original_更新処理日)) AND ((@IsNull_オペレーターコード = 1 AND [オ" +
                "ペレーターコード] IS NULL) OR ([オペレーターコード] = @Original_オペレーターコード)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_カウント", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "カウント", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入力区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上仕入区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_システム区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_移動番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_移動番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_棚卸番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚卸番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新INDEX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_更新処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T処理履歴テーブル] ([本支店区分], [処理コード], [処理名], [入力区分], [事業所コード], [処理番号], [売上仕入区分コード], [システム区分], [受注番号], [売上伝票番号], [出荷番号], [発注番号], [仕入伝票番号], [入荷番号], [入金番号], [支払番号], [移動番号], [棚卸番号], [処理日], [更新フラグ], [更新INDEX], [更新処理日], [オペレーターコード]) VALUES (@本支店区分, @処理コード, @処理名, @入力区分, @事業所コード, @処理番号, @売上仕入区分コード, @システム区分, @受注番号, @売上伝票番号, @出荷番号, @発注番号, @仕入伝票番号, @入荷番号, @入金番号, @支払番号, @移動番号, @棚卸番号, @処理日, @更新フラグ, @更新INDEX, @更新処理日, @オペレーターコード);
SELECT カウント, 本支店区分, 処理コード, 処理名, 入力区分, 事業所コード, 処理番号, 売上仕入区分コード, システム区分, 受注番号, 売上伝票番号, 出荷番号, 発注番号, 仕入伝票番号, 入荷番号, 入金番号, 支払番号, 移動番号, 棚卸番号, 処理日, 更新フラグ, 更新INDEX, 更新処理日, オペレーターコード FROM T処理履歴テーブル WHERE (カウント = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@移動番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新INDEX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T処理履歴テーブル] SET [本支店区分] = @本支店区分, [処理コード] = @処理コード, [処理名] = @処理名, [入" +
                "力区分] = @入力区分, [事業所コード] = @事業所コード, [処理番号] = @処理番号, [売上仕入区分コード] = @売上仕入区分コード, [システ" +
                "ム区分] = @システム区分, [受注番号] = @受注番号, [売上伝票番号] = @売上伝票番号, [出荷番号] = @出荷番号, [発注番号] = @発注" +
                "番号, [仕入伝票番号] = @仕入伝票番号, [入荷番号] = @入荷番号, [入金番号] = @入金番号, [支払番号] = @支払番号, [移動番号] =" +
                " @移動番号, [棚卸番号] = @棚卸番号, [処理日] = @処理日, [更新フラグ] = @更新フラグ, [更新INDEX] = @更新INDEX, [更" +
                "新処理日] = @更新処理日, [オペレーターコード] = @オペレーターコード WHERE (([カウント] = @Original_カウント) AND ((" +
                "@IsNull_本支店区分 = 1 AND [本支店区分] IS NULL) OR ([本支店区分] = @Original_本支店区分)) AND ((@Is" +
                "Null_処理コード = 1 AND [処理コード] IS NULL) OR ([処理コード] = @Original_処理コード)) AND ((@IsNul" +
                "l_処理名 = 1 AND [処理名] IS NULL) OR ([処理名] = @Original_処理名)) AND ((@IsNull_入力区分 = 1 " +
                "AND [入力区分] IS NULL) OR ([入力区分] = @Original_入力区分)) AND ((@IsNull_事業所コード = 1 AND [" +
                "事業所コード] IS NULL) OR ([事業所コード] = @Original_事業所コード)) AND ((@IsNull_処理番号 = 1 AND [処" +
                "理番号] IS NULL) OR ([処理番号] = @Original_処理番号)) AND ((@IsNull_売上仕入区分コード = 1 AND [売上仕" +
                "入区分コード] IS NULL) OR ([売上仕入区分コード] = @Original_売上仕入区分コード)) AND ((@IsNull_システム区分 = " +
                "1 AND [システム区分] IS NULL) OR ([システム区分] = @Original_システム区分)) AND ((@IsNull_受注番号 = 1" +
                " AND [受注番号] IS NULL) OR ([受注番号] = @Original_受注番号)) AND ((@IsNull_売上伝票番号 = 1 AND " +
                "[売上伝票番号] IS NULL) OR ([売上伝票番号] = @Original_売上伝票番号)) AND ((@IsNull_出荷番号 = 1 AND [" +
                "出荷番号] IS NULL) OR ([出荷番号] = @Original_出荷番号)) AND ((@IsNull_発注番号 = 1 AND [発注番号] I" +
                "S NULL) OR ([発注番号] = @Original_発注番号)) AND ((@IsNull_仕入伝票番号 = 1 AND [仕入伝票番号] IS N" +
                "ULL) OR ([仕入伝票番号] = @Original_仕入伝票番号)) AND ((@IsNull_入荷番号 = 1 AND [入荷番号] IS NULL" +
                ") OR ([入荷番号] = @Original_入荷番号)) AND ((@IsNull_入金番号 = 1 AND [入金番号] IS NULL) OR ([" +
                "入金番号] = @Original_入金番号)) AND ((@IsNull_支払番号 = 1 AND [支払番号] IS NULL) OR ([支払番号] =" +
                " @Original_支払番号)) AND ((@IsNull_移動番号 = 1 AND [移動番号] IS NULL) OR ([移動番号] = @Origi" +
                "nal_移動番号)) AND ((@IsNull_棚卸番号 = 1 AND [棚卸番号] IS NULL) OR ([棚卸番号] = @Original_棚卸番" +
                "号)) AND ((@IsNull_処理日 = 1 AND [処理日] IS NULL) OR ([処理日] = @Original_処理日)) AND ([更" +
                "新フラグ] = @Original_更新フラグ) AND ([更新INDEX] = @Original_更新INDEX) AND ((@IsNull_更新処理日" +
                " = 1 AND [更新処理日] IS NULL) OR ([更新処理日] = @Original_更新処理日)) AND ((@IsNull_オペレーターコー" +
                "ド = 1 AND [オペレーターコード] IS NULL) OR ([オペレーターコード] = @Original_オペレーターコード)));\r\nSELECT" +
                " カウント, 本支店区分, 処理コード, 処理名, 入力区分, 事業所コード, 処理番号, 売上仕入区分コード, システム区分, 受注番号, 売上伝票番号, 出" +
                "荷番号, 発注番号, 仕入伝票番号, 入荷番号, 入金番号, 支払番号, 移動番号, 棚卸番号, 処理日, 更新フラグ, 更新INDEX, 更新処理日, オペレ" +
                "ーターコード FROM T処理履歴テーブル WHERE (カウント = @カウント)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@移動番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新INDEX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_カウント", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "カウント", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理名", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理名", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入力区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入力区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上仕入区分コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_システム区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入伝票番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_移動番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_移動番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_棚卸番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚卸番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新フラグ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新フラグ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新INDEX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新INDEX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_更新処理日", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_更新処理日", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_オペレーターコード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_オペレーターコード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@カウント", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "カウント", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::db_test.Properties.Settings.Default.SPEEDDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT カウント, 本支店区分, 処理コード, 処理名, 入力区分, 事業所コード, 処理番号, 売上仕入区分コード, システム区分, 受注番号, 売上伝票" +
                "番号, 出荷番号, 発注番号, 仕入伝票番号, 入荷番号, 入金番号, 支払番号, 移動番号, 棚卸番号, 処理日, 更新フラグ, 更新INDEX, 更新処理日" +
                ", オペレーターコード FROM dbo.T処理履歴テーブル";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"INSERT INTO [dbo].[T処理履歴テーブル] ([本支店区分], [処理コード], [処理名], [入力区分], [事業所コード], [処理番号], [売上仕入区分コード], [システム区分], [受注番号], [売上伝票番号], [出荷番号], [発注番号], [仕入伝票番号], [入荷番号], [入金番号], [支払番号], [移動番号], [棚卸番号], [処理日], [更新フラグ], [更新INDEX], [更新処理日], [オペレーターコード]) VALUES (@本支店区分, @処理コード, @処理名, @入力区分, @事業所コード, @処理番号, @売上仕入区分コード, @システム区分, @受注番号, @売上伝票番号, @出荷番号, @発注番号, @仕入伝票番号, @入荷番号, @入金番号, @支払番号, @移動番号, @棚卸番号, @処理日, @更新フラグ, @更新INDEX, @更新処理日, @オペレーターコード);
SELECT カウント, 本支店区分, 処理コード, 処理名, 入力区分, 事業所コード, 処理番号, 売上仕入区分コード, システム区分, 受注番号, 売上伝票番号, 出荷番号, 発注番号, 仕入伝票番号, 入荷番号, 入金番号, 支払番号, 移動番号, 棚卸番号, 処理日, 更新フラグ, 更新INDEX, 更新処理日, オペレーターコード FROM T処理履歴テーブル WHERE (カウント = SCOPE_IDENTITY())";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理コード", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "処理コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理名", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "処理名", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入力区分", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "入力区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上仕入区分コード", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕入区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "受注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上伝票番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "売上伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "出荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "発注番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入伝票番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "仕入伝票番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "入荷番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "入金番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "支払番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@移動番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "移動番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理日", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新フラグ", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "更新フラグ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新INDEX", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "更新INDEX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@更新処理日", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "更新処理日", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@オペレーターコード", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "オペレーターコード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(仕入計上DataSet.T処理履歴テーブルDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 仕入計上DataSet.T処理履歴テーブルDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            仕入計上DataSet.T処理履歴テーブルDataTable dataTable = new 仕入計上DataSet.T処理履歴テーブルDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(仕入計上DataSet.T処理履歴テーブルDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(仕入計上DataSet dataSet) {
            return this.Adapter.Update(dataSet, "T処理履歴テーブル");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_カウント, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    string Original_処理名, 
                    global::System.Nullable<short> Original_入力区分, 
                    string Original_事業所コード, 
                    global::System.Nullable<int> Original_処理番号, 
                    global::System.Nullable<short> Original_売上仕入区分コード, 
                    global::System.Nullable<short> Original_システム区分, 
                    global::System.Nullable<int> Original_受注番号, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    global::System.Nullable<int> Original_出荷番号, 
                    global::System.Nullable<int> Original_発注番号, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    global::System.Nullable<int> Original_入荷番号, 
                    global::System.Nullable<int> Original_入金番号, 
                    global::System.Nullable<int> Original_支払番号, 
                    global::System.Nullable<int> Original_移動番号, 
                    global::System.Nullable<int> Original_棚卸番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    bool Original_更新フラグ, 
                    int Original_更新INDEX, 
                    global::System.Nullable<global::System.DateTime> Original_更新処理日, 
                    string Original_オペレーターコード) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_カウント));
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_処理コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_処理コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_処理名 == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_処理名));
            }
            if ((Original_入力区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((short)(Original_入力区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_事業所コード == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_事業所コード));
            }
            if ((Original_処理番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_処理番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_売上仕入区分コード.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((short)(Original_売上仕入区分コード.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_システム区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((short)(Original_システム区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_受注番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_受注番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_売上伝票番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_売上伝票番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_出荷番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_発注番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_発注番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入伝票番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_仕入伝票番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_入荷番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_入金番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_入金番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_支払番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_支払番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_移動番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_移動番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_棚卸番号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_棚卸番号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_処理日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((System.DateTime)(Original_処理日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[39].Value = ((bool)(Original_更新フラグ));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_更新INDEX));
            if ((Original_更新処理日.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((System.DateTime)(Original_更新処理日.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_オペレーターコード == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_オペレーターコード));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    string 処理名, 
                    global::System.Nullable<short> 入力区分, 
                    string 事業所コード, 
                    global::System.Nullable<int> 処理番号, 
                    global::System.Nullable<short> 売上仕入区分コード, 
                    global::System.Nullable<short> システム区分, 
                    global::System.Nullable<int> 受注番号, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入金番号, 
                    global::System.Nullable<int> 支払番号, 
                    global::System.Nullable<int> 移動番号, 
                    global::System.Nullable<int> 棚卸番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    bool 更新フラグ, 
                    int 更新INDEX, 
                    global::System.Nullable<global::System.DateTime> 更新処理日, 
                    string オペレーターコード) {
            if ((本支店区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(処理コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((処理名 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(処理名));
            }
            if ((入力区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(入力区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((事業所コード == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(事業所コード));
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((売上仕入区分コード.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((short)(売上仕入区分コード.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((システム区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((short)(システム区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((受注番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(受注番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((出荷番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(出荷番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((発注番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((入荷番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(入荷番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((入金番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(入金番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((支払番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(支払番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((移動番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(移動番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((棚卸番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(棚卸番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(更新フラグ));
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(更新INDEX));
            if ((更新処理日.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(更新処理日.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((オペレーターコード == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(オペレーターコード));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    string 処理名, 
                    global::System.Nullable<short> 入力区分, 
                    string 事業所コード, 
                    global::System.Nullable<int> 処理番号, 
                    global::System.Nullable<short> 売上仕入区分コード, 
                    global::System.Nullable<short> システム区分, 
                    global::System.Nullable<int> 受注番号, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入金番号, 
                    global::System.Nullable<int> 支払番号, 
                    global::System.Nullable<int> 移動番号, 
                    global::System.Nullable<int> 棚卸番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    bool 更新フラグ, 
                    int 更新INDEX, 
                    global::System.Nullable<global::System.DateTime> 更新処理日, 
                    string オペレーターコード, 
                    int Original_カウント, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    string Original_処理名, 
                    global::System.Nullable<short> Original_入力区分, 
                    string Original_事業所コード, 
                    global::System.Nullable<int> Original_処理番号, 
                    global::System.Nullable<short> Original_売上仕入区分コード, 
                    global::System.Nullable<short> Original_システム区分, 
                    global::System.Nullable<int> Original_受注番号, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    global::System.Nullable<int> Original_出荷番号, 
                    global::System.Nullable<int> Original_発注番号, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    global::System.Nullable<int> Original_入荷番号, 
                    global::System.Nullable<int> Original_入金番号, 
                    global::System.Nullable<int> Original_支払番号, 
                    global::System.Nullable<int> Original_移動番号, 
                    global::System.Nullable<int> Original_棚卸番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    bool Original_更新フラグ, 
                    int Original_更新INDEX, 
                    global::System.Nullable<global::System.DateTime> Original_更新処理日, 
                    string Original_オペレーターコード, 
                    int カウント) {
            if ((本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(処理コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((処理名 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(処理名));
            }
            if ((入力区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(入力区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(事業所コード));
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((売上仕入区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(売上仕入区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((システム区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(システム区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((受注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(受注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((売上伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(売上伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((出荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(出荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((仕入伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((入荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(入荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((入金番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(入金番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((支払番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(支払番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((移動番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(移動番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((棚卸番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(棚卸番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(更新フラグ));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(更新INDEX));
            if ((更新処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(更新処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(オペレーターコード));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_カウント));
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_処理コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_処理コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_処理名 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_処理名));
            }
            if ((Original_入力区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((short)(Original_入力区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_事業所コード));
            }
            if ((Original_処理番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_処理番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_売上仕入区分コード.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((short)(Original_売上仕入区分コード.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_システム区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((short)(Original_システム区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_受注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_受注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_売上伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_売上伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_出荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_出荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_発注番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_発注番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_仕入伝票番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_仕入伝票番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_入荷番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_入荷番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_入金番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_入金番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_支払番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_支払番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_移動番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_移動番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_棚卸番号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_棚卸番号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Original_更新フラグ));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(Original_更新INDEX));
            if ((Original_更新処理日.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(Original_更新処理日.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_オペレーターコード == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_オペレーターコード));
            }
            this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(カウント));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    string 処理名, 
                    global::System.Nullable<short> 入力区分, 
                    string 事業所コード, 
                    global::System.Nullable<int> 処理番号, 
                    global::System.Nullable<short> 売上仕入区分コード, 
                    global::System.Nullable<short> システム区分, 
                    global::System.Nullable<int> 受注番号, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入金番号, 
                    global::System.Nullable<int> 支払番号, 
                    global::System.Nullable<int> 移動番号, 
                    global::System.Nullable<int> 棚卸番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    bool 更新フラグ, 
                    int 更新INDEX, 
                    global::System.Nullable<global::System.DateTime> 更新処理日, 
                    string オペレーターコード, 
                    int Original_カウント, 
                    global::System.Nullable<short> Original_本支店区分, 
                    global::System.Nullable<int> Original_処理コード, 
                    string Original_処理名, 
                    global::System.Nullable<short> Original_入力区分, 
                    string Original_事業所コード, 
                    global::System.Nullable<int> Original_処理番号, 
                    global::System.Nullable<short> Original_売上仕入区分コード, 
                    global::System.Nullable<short> Original_システム区分, 
                    global::System.Nullable<int> Original_受注番号, 
                    global::System.Nullable<int> Original_売上伝票番号, 
                    global::System.Nullable<int> Original_出荷番号, 
                    global::System.Nullable<int> Original_発注番号, 
                    global::System.Nullable<int> Original_仕入伝票番号, 
                    global::System.Nullable<int> Original_入荷番号, 
                    global::System.Nullable<int> Original_入金番号, 
                    global::System.Nullable<int> Original_支払番号, 
                    global::System.Nullable<int> Original_移動番号, 
                    global::System.Nullable<int> Original_棚卸番号, 
                    global::System.Nullable<global::System.DateTime> Original_処理日, 
                    bool Original_更新フラグ, 
                    int Original_更新INDEX, 
                    global::System.Nullable<global::System.DateTime> Original_更新処理日, 
                    string Original_オペレーターコード) {
            return this.Update(本支店区分, 処理コード, 処理名, 入力区分, 事業所コード, 処理番号, 売上仕入区分コード, システム区分, 受注番号, 売上伝票番号, 出荷番号, 発注番号, 仕入伝票番号, 入荷番号, 入金番号, 支払番号, 移動番号, 棚卸番号, 処理日, 更新フラグ, 更新INDEX, 更新処理日, オペレーターコード, Original_カウント, Original_本支店区分, Original_処理コード, Original_処理名, Original_入力区分, Original_事業所コード, Original_処理番号, Original_売上仕入区分コード, Original_システム区分, Original_受注番号, Original_売上伝票番号, Original_出荷番号, Original_発注番号, Original_仕入伝票番号, Original_入荷番号, Original_入金番号, Original_支払番号, Original_移動番号, Original_棚卸番号, Original_処理日, Original_更新フラグ, Original_更新INDEX, Original_更新処理日, Original_オペレーターコード, Original_カウント);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQueryT処理履歴(
                    global::System.Nullable<short> 本支店区分, 
                    global::System.Nullable<int> 処理コード, 
                    string 処理名, 
                    global::System.Nullable<short> 入力区分, 
                    string 事業所コード, 
                    global::System.Nullable<int> 処理番号, 
                    global::System.Nullable<short> 売上仕入区分コード, 
                    global::System.Nullable<short> システム区分, 
                    global::System.Nullable<int> 受注番号, 
                    global::System.Nullable<int> 売上伝票番号, 
                    global::System.Nullable<int> 出荷番号, 
                    global::System.Nullable<int> 発注番号, 
                    global::System.Nullable<int> 仕入伝票番号, 
                    global::System.Nullable<int> 入荷番号, 
                    global::System.Nullable<int> 入金番号, 
                    global::System.Nullable<int> 支払番号, 
                    global::System.Nullable<int> 移動番号, 
                    global::System.Nullable<int> 棚卸番号, 
                    global::System.Nullable<global::System.DateTime> 処理日, 
                    bool 更新フラグ, 
                    int 更新INDEX, 
                    global::System.Nullable<global::System.DateTime> 更新処理日, 
                    string オペレーターコード) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((本支店区分.HasValue == true)) {
                command.Parameters[0].Value = ((short)(本支店区分.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((処理コード.HasValue == true)) {
                command.Parameters[1].Value = ((int)(処理コード.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((処理名 == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(処理名));
            }
            if ((入力区分.HasValue == true)) {
                command.Parameters[3].Value = ((short)(入力区分.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((事業所コード == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(事業所コード));
            }
            if ((処理番号.HasValue == true)) {
                command.Parameters[5].Value = ((int)(処理番号.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((売上仕入区分コード.HasValue == true)) {
                command.Parameters[6].Value = ((short)(売上仕入区分コード.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((システム区分.HasValue == true)) {
                command.Parameters[7].Value = ((short)(システム区分.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((受注番号.HasValue == true)) {
                command.Parameters[8].Value = ((int)(受注番号.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((売上伝票番号.HasValue == true)) {
                command.Parameters[9].Value = ((int)(売上伝票番号.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((出荷番号.HasValue == true)) {
                command.Parameters[10].Value = ((int)(出荷番号.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((発注番号.HasValue == true)) {
                command.Parameters[11].Value = ((int)(発注番号.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((仕入伝票番号.HasValue == true)) {
                command.Parameters[12].Value = ((int)(仕入伝票番号.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((入荷番号.HasValue == true)) {
                command.Parameters[13].Value = ((int)(入荷番号.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((入金番号.HasValue == true)) {
                command.Parameters[14].Value = ((int)(入金番号.Value));
            }
            else {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((支払番号.HasValue == true)) {
                command.Parameters[15].Value = ((int)(支払番号.Value));
            }
            else {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((移動番号.HasValue == true)) {
                command.Parameters[16].Value = ((int)(移動番号.Value));
            }
            else {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((棚卸番号.HasValue == true)) {
                command.Parameters[17].Value = ((int)(棚卸番号.Value));
            }
            else {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((処理日.HasValue == true)) {
                command.Parameters[18].Value = ((System.DateTime)(処理日.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            command.Parameters[19].Value = ((bool)(更新フラグ));
            command.Parameters[20].Value = ((int)(更新INDEX));
            if ((更新処理日.HasValue == true)) {
                command.Parameters[21].Value = ((System.DateTime)(更新処理日.Value));
            }
            else {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((オペレーターコード == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(オペレーターコード));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private T仕入修正戻ファイルTableAdapter _t仕入修正戻ファイルTableAdapter;
        
        private T仕入明細ファイルTableAdapter _t仕入明細ファイルTableAdapter;
        
        private T処理履歴テーブルTableAdapter _t処理履歴テーブルTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T仕入修正戻ファイルTableAdapter T仕入修正戻ファイルTableAdapter {
            get {
                return this._t仕入修正戻ファイルTableAdapter;
            }
            set {
                this._t仕入修正戻ファイルTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T仕入明細ファイルTableAdapter T仕入明細ファイルTableAdapter {
            get {
                return this._t仕入明細ファイルTableAdapter;
            }
            set {
                this._t仕入明細ファイルTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T処理履歴テーブルTableAdapter T処理履歴テーブルTableAdapter {
            get {
                return this._t処理履歴テーブルTableAdapter;
            }
            set {
                this._t処理履歴テーブルTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._t仕入修正戻ファイルTableAdapter != null) 
                            && (this._t仕入修正戻ファイルTableAdapter.Connection != null))) {
                    return this._t仕入修正戻ファイルTableAdapter.Connection;
                }
                if (((this._t仕入明細ファイルTableAdapter != null) 
                            && (this._t仕入明細ファイルTableAdapter.Connection != null))) {
                    return this._t仕入明細ファイルTableAdapter.Connection;
                }
                if (((this._t処理履歴テーブルTableAdapter != null) 
                            && (this._t処理履歴テーブルTableAdapter.Connection != null))) {
                    return this._t処理履歴テーブルTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._t仕入修正戻ファイルTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._t仕入明細ファイルTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._t処理履歴テーブルTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(仕入計上DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._t処理履歴テーブルTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T処理履歴テーブル.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t処理履歴テーブルTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._t仕入明細ファイルTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T仕入明細ファイル.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t仕入明細ファイルTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._t仕入修正戻ファイルTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T仕入修正戻ファイル.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t仕入修正戻ファイルTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(仕入計上DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._t処理履歴テーブルTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T処理履歴テーブル.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t処理履歴テーブルTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._t仕入明細ファイルTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T仕入明細ファイル.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t仕入明細ファイルTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._t仕入修正戻ファイルTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T仕入修正戻ファイル.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t仕入修正戻ファイルTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(仕入計上DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._t仕入修正戻ファイルTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T仕入修正戻ファイル.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t仕入修正戻ファイルTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._t仕入明細ファイルTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T仕入明細ファイル.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t仕入明細ファイルTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._t処理履歴テーブルTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T処理履歴テーブル.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t処理履歴テーブルTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(仕入計上DataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._t仕入修正戻ファイルTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t仕入修正戻ファイルTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            if (((this._t仕入明細ファイルTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t仕入明細ファイルTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            if (((this._t処理履歴テーブルTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t処理履歴テーブルTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager には接続情報がありません。それぞれの TableAdapterManager TableAdapter プロパティを有効な" +
                        " TableAdapter インスタンスに設定してください。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("トランザクションを開始できません。現在のデータ接続がトランザクションをサポートしていないか、または現在の状態がトランザクションの開始を許可していません。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._t仕入修正戻ファイルTableAdapter != null)) {
                    revertConnections.Add(this._t仕入修正戻ファイルTableAdapter, this._t仕入修正戻ファイルTableAdapter.Connection);
                    this._t仕入修正戻ファイルTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t仕入修正戻ファイルTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t仕入修正戻ファイルTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t仕入修正戻ファイルTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t仕入修正戻ファイルTableAdapter.Adapter);
                    }
                }
                if ((this._t仕入明細ファイルTableAdapter != null)) {
                    revertConnections.Add(this._t仕入明細ファイルTableAdapter, this._t仕入明細ファイルTableAdapter.Connection);
                    this._t仕入明細ファイルTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t仕入明細ファイルTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t仕入明細ファイルTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t仕入明細ファイルTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t仕入明細ファイルTableAdapter.Adapter);
                    }
                }
                if ((this._t処理履歴テーブルTableAdapter != null)) {
                    revertConnections.Add(this._t処理履歴テーブルTableAdapter, this._t処理履歴テーブルTableAdapter.Connection);
                    this._t処理履歴テーブルTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t処理履歴テーブルTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t処理履歴テーブルTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t処理履歴テーブルTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t処理履歴テーブルTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._t仕入修正戻ファイルTableAdapter != null)) {
                    this._t仕入修正戻ファイルTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t仕入修正戻ファイルTableAdapter]));
                    this._t仕入修正戻ファイルTableAdapter.Transaction = null;
                }
                if ((this._t仕入明細ファイルTableAdapter != null)) {
                    this._t仕入明細ファイルTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t仕入明細ファイルTableAdapter]));
                    this._t仕入明細ファイルTableAdapter.Transaction = null;
                }
                if ((this._t処理履歴テーブルTableAdapter != null)) {
                    this._t処理履歴テーブルTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t処理履歴テーブルTableAdapter]));
                    this._t処理履歴テーブルTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591