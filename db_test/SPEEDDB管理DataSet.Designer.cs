//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace db_test {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SPEEDDB管理DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SPEEDDB管理DataSet : global::System.Data.DataSet {
        
        private TＷＳ番号DataTable tableTＷＳ番号;
        
        private T会社基本DataTable tableT会社基本;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SPEEDDB管理DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SPEEDDB管理DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TＷＳ番号"] != null)) {
                    base.Tables.Add(new TＷＳ番号DataTable(ds.Tables["TＷＳ番号"]));
                }
                if ((ds.Tables["T会社基本"] != null)) {
                    base.Tables.Add(new T会社基本DataTable(ds.Tables["T会社基本"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TＷＳ番号DataTable TＷＳ番号 {
            get {
                return this.tableTＷＳ番号;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T会社基本DataTable T会社基本 {
            get {
                return this.tableT会社基本;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SPEEDDB管理DataSet cln = ((SPEEDDB管理DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TＷＳ番号"] != null)) {
                    base.Tables.Add(new TＷＳ番号DataTable(ds.Tables["TＷＳ番号"]));
                }
                if ((ds.Tables["T会社基本"] != null)) {
                    base.Tables.Add(new T会社基本DataTable(ds.Tables["T会社基本"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTＷＳ番号 = ((TＷＳ番号DataTable)(base.Tables["TＷＳ番号"]));
            if ((initTable == true)) {
                if ((this.tableTＷＳ番号 != null)) {
                    this.tableTＷＳ番号.InitVars();
                }
            }
            this.tableT会社基本 = ((T会社基本DataTable)(base.Tables["T会社基本"]));
            if ((initTable == true)) {
                if ((this.tableT会社基本 != null)) {
                    this.tableT会社基本.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SPEEDDB管理DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SPEEDDB管理DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTＷＳ番号 = new TＷＳ番号DataTable();
            base.Tables.Add(this.tableTＷＳ番号);
            this.tableT会社基本 = new T会社基本DataTable();
            base.Tables.Add(this.tableT会社基本);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTＷＳ番号() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT会社基本() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SPEEDDB管理DataSet ds = new SPEEDDB管理DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TＷＳ番号RowChangeEventHandler(object sender, TＷＳ番号RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T会社基本RowChangeEventHandler(object sender, T会社基本RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TＷＳ番号DataTable : global::System.Data.TypedTableBase<TＷＳ番号Row> {
            
            private global::System.Data.DataColumn columnＫＥＹ;
            
            private global::System.Data.DataColumn columnＷＳ番号;
            
            private global::System.Data.DataColumn column処理番号;
            
            private global::System.Data.DataColumn column受発注行数;
            
            private global::System.Data.DataColumn column行数連番;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TＷＳ番号DataTable() {
                this.TableName = "TＷＳ番号";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TＷＳ番号DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TＷＳ番号DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＫＥＹColumn {
                get {
                    return this.columnＫＥＹ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＷＳ番号Column {
                get {
                    return this.columnＷＳ番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理番号Column {
                get {
                    return this.column処理番号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受発注行数Column {
                get {
                    return this.column受発注行数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 行数連番Column {
                get {
                    return this.column行数連番;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TＷＳ番号Row this[int index] {
                get {
                    return ((TＷＳ番号Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TＷＳ番号RowChangeEventHandler TＷＳ番号RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TＷＳ番号RowChangeEventHandler TＷＳ番号RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TＷＳ番号RowChangeEventHandler TＷＳ番号RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TＷＳ番号RowChangeEventHandler TＷＳ番号RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTＷＳ番号Row(TＷＳ番号Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TＷＳ番号Row AddTＷＳ番号Row(short ＫＥＹ, short ＷＳ番号, int 処理番号, int 受発注行数, int 行数連番) {
                TＷＳ番号Row rowTＷＳ番号Row = ((TＷＳ番号Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ＫＥＹ,
                        ＷＳ番号,
                        処理番号,
                        受発注行数,
                        行数連番};
                rowTＷＳ番号Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowTＷＳ番号Row);
                return rowTＷＳ番号Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TＷＳ番号DataTable cln = ((TＷＳ番号DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TＷＳ番号DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnＫＥＹ = base.Columns["ＫＥＹ"];
                this.columnＷＳ番号 = base.Columns["ＷＳ番号"];
                this.column処理番号 = base.Columns["処理番号"];
                this.column受発注行数 = base.Columns["受発注行数"];
                this.column行数連番 = base.Columns["行数連番"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnＫＥＹ = new global::System.Data.DataColumn("ＫＥＹ", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＫＥＹ);
                this.columnＷＳ番号 = new global::System.Data.DataColumn("ＷＳ番号", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＷＳ番号);
                this.column処理番号 = new global::System.Data.DataColumn("処理番号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理番号);
                this.column受発注行数 = new global::System.Data.DataColumn("受発注行数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受発注行数);
                this.column行数連番 = new global::System.Data.DataColumn("行数連番", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column行数連番);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TＷＳ番号Row NewTＷＳ番号Row() {
                return ((TＷＳ番号Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TＷＳ番号Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TＷＳ番号Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TＷＳ番号RowChanged != null)) {
                    this.TＷＳ番号RowChanged(this, new TＷＳ番号RowChangeEvent(((TＷＳ番号Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TＷＳ番号RowChanging != null)) {
                    this.TＷＳ番号RowChanging(this, new TＷＳ番号RowChangeEvent(((TＷＳ番号Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TＷＳ番号RowDeleted != null)) {
                    this.TＷＳ番号RowDeleted(this, new TＷＳ番号RowChangeEvent(((TＷＳ番号Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TＷＳ番号RowDeleting != null)) {
                    this.TＷＳ番号RowDeleting(this, new TＷＳ番号RowChangeEvent(((TＷＳ番号Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTＷＳ番号Row(TＷＳ番号Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SPEEDDB管理DataSet ds = new SPEEDDB管理DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TＷＳ番号DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T会社基本DataTable : global::System.Data.TypedTableBase<T会社基本Row> {
            
            private global::System.Data.DataColumn columnＫＥ;
            
            private global::System.Data.DataColumn column事業所管理;
            
            private global::System.Data.DataColumn column棚卸区分;
            
            private global::System.Data.DataColumn column在庫評価区分;
            
            private global::System.Data.DataColumn column入数管理;
            
            private global::System.Data.DataColumn column倉庫管理;
            
            private global::System.Data.DataColumn columnセット入庫管理;
            
            private global::System.Data.DataColumn column月末管理サイクル;
            
            private global::System.Data.DataColumn column代理店管理;
            
            private global::System.Data.DataColumn column納入先管理;
            
            private global::System.Data.DataColumn column一括消費税率;
            
            private global::System.Data.DataColumn column新一括消費税率;
            
            private global::System.Data.DataColumn column新消費税適用;
            
            private global::System.Data.DataColumn column数量の小数桁;
            
            private global::System.Data.DataColumn column売上単価の小数桁;
            
            private global::System.Data.DataColumn column売上金額の丸め;
            
            private global::System.Data.DataColumn column単価管理;
            
            private global::System.Data.DataColumn column得掛率管理;
            
            private global::System.Data.DataColumn column得履歴管理;
            
            private global::System.Data.DataColumn column仕履歴管理;
            
            private global::System.Data.DataColumn column売上区分コード;
            
            private global::System.Data.DataColumn columnシステム区分;
            
            private global::System.Data.DataColumn column請求月区分コード;
            
            private global::System.Data.DataColumn column入金区分コード;
            
            private global::System.Data.DataColumn column入金システム区分;
            
            private global::System.Data.DataColumn column仕入区分コード;
            
            private global::System.Data.DataColumn column仕入システム区分;
            
            private global::System.Data.DataColumn column支払月区分コード;
            
            private global::System.Data.DataColumn column支払区分コード;
            
            private global::System.Data.DataColumn column支払システム区分;
            
            private global::System.Data.DataColumn column移動区分コード;
            
            private global::System.Data.DataColumn column移動システム区分;
            
            private global::System.Data.DataColumn column棚卸区分コード;
            
            private global::System.Data.DataColumn column棚卸システム区分;
            
            private global::System.Data.DataColumn column納品書レーザー;
            
            private global::System.Data.DataColumn column合計請求書レーザー;
            
            private global::System.Data.DataColumn column請求明細書レーザー;
            
            private global::System.Data.DataColumn column事業所コード;
            
            private global::System.Data.DataColumn column事業所記号;
            
            private global::System.Data.DataColumn column本支店区分;
            
            private global::System.Data.DataColumn columnBG更新;
            
            private global::System.Data.DataColumn columnBG起動;
            
            private global::System.Data.DataColumn columnBG終了;
            
            private global::System.Data.DataColumn column受注入力送信区分;
            
            private global::System.Data.DataColumn column出荷指示送信区分;
            
            private global::System.Data.DataColumn column売上入力送信区分;
            
            private global::System.Data.DataColumn column発注入力送信区分;
            
            private global::System.Data.DataColumn column入荷入力送信区分;
            
            private global::System.Data.DataColumn column仕入入力送信区分;
            
            private global::System.Data.DataColumn column入金入力送信区分;
            
            private global::System.Data.DataColumn column支払入力送信区分;
            
            private global::System.Data.DataColumn column支払消費税送信区分;
            
            private global::System.Data.DataColumn column移動入力送信区分;
            
            private global::System.Data.DataColumn column棚卸入力送信区分;
            
            private global::System.Data.DataColumn columnBG更新処理;
            
            private global::System.Data.DataColumn column数量の整数桁;
            
            private global::System.Data.DataColumn column売上単価の整数桁;
            
            private global::System.Data.DataColumn column売上仕訳連携区分;
            
            private global::System.Data.DataColumn column入金仕訳連携区分;
            
            private global::System.Data.DataColumn column仕入仕訳連携区分;
            
            private global::System.Data.DataColumn column支払仕訳連携区分;
            
            private global::System.Data.DataColumn column売上オンライン仕訳区分;
            
            private global::System.Data.DataColumn column入金オンライン仕訳区分;
            
            private global::System.Data.DataColumn column仕入オンライン仕訳区分;
            
            private global::System.Data.DataColumn column支払オンライン仕訳区分;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T会社基本DataTable() {
                this.TableName = "T会社基本";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T会社基本DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T会社基本DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ＫＥColumn {
                get {
                    return this.columnＫＥ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 事業所管理Column {
                get {
                    return this.column事業所管理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 棚卸区分Column {
                get {
                    return this.column棚卸区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 在庫評価区分Column {
                get {
                    return this.column在庫評価区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入数管理Column {
                get {
                    return this.column入数管理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 倉庫管理Column {
                get {
                    return this.column倉庫管理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn セット入庫管理Column {
                get {
                    return this.columnセット入庫管理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 月末管理サイクルColumn {
                get {
                    return this.column月末管理サイクル;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 代理店管理Column {
                get {
                    return this.column代理店管理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納入先管理Column {
                get {
                    return this.column納入先管理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 一括消費税率Column {
                get {
                    return this.column一括消費税率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 新一括消費税率Column {
                get {
                    return this.column新一括消費税率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 新消費税適用Column {
                get {
                    return this.column新消費税適用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 数量の小数桁Column {
                get {
                    return this.column数量の小数桁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上単価の小数桁Column {
                get {
                    return this.column売上単価の小数桁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上金額の丸めColumn {
                get {
                    return this.column売上金額の丸め;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 単価管理Column {
                get {
                    return this.column単価管理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 得掛率管理Column {
                get {
                    return this.column得掛率管理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 得履歴管理Column {
                get {
                    return this.column得履歴管理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕履歴管理Column {
                get {
                    return this.column仕履歴管理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上区分コードColumn {
                get {
                    return this.column売上区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn システム区分Column {
                get {
                    return this.columnシステム区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 請求月区分コードColumn {
                get {
                    return this.column請求月区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入金区分コードColumn {
                get {
                    return this.column入金区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入金システム区分Column {
                get {
                    return this.column入金システム区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入区分コードColumn {
                get {
                    return this.column仕入区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入システム区分Column {
                get {
                    return this.column仕入システム区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払月区分コードColumn {
                get {
                    return this.column支払月区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払区分コードColumn {
                get {
                    return this.column支払区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払システム区分Column {
                get {
                    return this.column支払システム区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 移動区分コードColumn {
                get {
                    return this.column移動区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 移動システム区分Column {
                get {
                    return this.column移動システム区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 棚卸区分コードColumn {
                get {
                    return this.column棚卸区分コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 棚卸システム区分Column {
                get {
                    return this.column棚卸システム区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 納品書レーザーColumn {
                get {
                    return this.column納品書レーザー;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 合計請求書レーザーColumn {
                get {
                    return this.column合計請求書レーザー;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 請求明細書レーザーColumn {
                get {
                    return this.column請求明細書レーザー;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 事業所コードColumn {
                get {
                    return this.column事業所コード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 事業所記号Column {
                get {
                    return this.column事業所記号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 本支店区分Column {
                get {
                    return this.column本支店区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BG更新Column {
                get {
                    return this.columnBG更新;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BG起動Column {
                get {
                    return this.columnBG起動;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BG終了Column {
                get {
                    return this.columnBG終了;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 受注入力送信区分Column {
                get {
                    return this.column受注入力送信区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出荷指示送信区分Column {
                get {
                    return this.column出荷指示送信区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上入力送信区分Column {
                get {
                    return this.column売上入力送信区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 発注入力送信区分Column {
                get {
                    return this.column発注入力送信区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入荷入力送信区分Column {
                get {
                    return this.column入荷入力送信区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入入力送信区分Column {
                get {
                    return this.column仕入入力送信区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入金入力送信区分Column {
                get {
                    return this.column入金入力送信区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払入力送信区分Column {
                get {
                    return this.column支払入力送信区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払消費税送信区分Column {
                get {
                    return this.column支払消費税送信区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 移動入力送信区分Column {
                get {
                    return this.column移動入力送信区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 棚卸入力送信区分Column {
                get {
                    return this.column棚卸入力送信区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BG更新処理Column {
                get {
                    return this.columnBG更新処理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 数量の整数桁Column {
                get {
                    return this.column数量の整数桁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上単価の整数桁Column {
                get {
                    return this.column売上単価の整数桁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上仕訳連携区分Column {
                get {
                    return this.column売上仕訳連携区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入金仕訳連携区分Column {
                get {
                    return this.column入金仕訳連携区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入仕訳連携区分Column {
                get {
                    return this.column仕入仕訳連携区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払仕訳連携区分Column {
                get {
                    return this.column支払仕訳連携区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売上オンライン仕訳区分Column {
                get {
                    return this.column売上オンライン仕訳区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入金オンライン仕訳区分Column {
                get {
                    return this.column入金オンライン仕訳区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 仕入オンライン仕訳区分Column {
                get {
                    return this.column仕入オンライン仕訳区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 支払オンライン仕訳区分Column {
                get {
                    return this.column支払オンライン仕訳区分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T会社基本Row this[int index] {
                get {
                    return ((T会社基本Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T会社基本RowChangeEventHandler T会社基本RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T会社基本RowChangeEventHandler T会社基本RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T会社基本RowChangeEventHandler T会社基本RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T会社基本RowChangeEventHandler T会社基本RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT会社基本Row(T会社基本Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T会社基本Row AddT会社基本Row(
                        short ＫＥ, 
                        bool 事業所管理, 
                        bool 棚卸区分, 
                        short 在庫評価区分, 
                        bool 入数管理, 
                        bool 倉庫管理, 
                        bool セット入庫管理, 
                        bool 月末管理サイクル, 
                        bool 代理店管理, 
                        bool 納入先管理, 
                        decimal 一括消費税率, 
                        decimal 新一括消費税率, 
                        System.DateTime 新消費税適用, 
                        short 数量の小数桁, 
                        short 売上単価の小数桁, 
                        short 売上金額の丸め, 
                        bool 単価管理, 
                        bool 得掛率管理, 
                        bool 得履歴管理, 
                        bool 仕履歴管理, 
                        short 売上区分コード, 
                        short システム区分, 
                        short 請求月区分コード, 
                        short 入金区分コード, 
                        short 入金システム区分, 
                        short 仕入区分コード, 
                        short 仕入システム区分, 
                        short 支払月区分コード, 
                        short 支払区分コード, 
                        short 支払システム区分, 
                        short 移動区分コード, 
                        short 移動システム区分, 
                        short 棚卸区分コード, 
                        short 棚卸システム区分, 
                        bool 納品書レーザー, 
                        bool 合計請求書レーザー, 
                        bool 請求明細書レーザー, 
                        string 事業所コード, 
                        string 事業所記号, 
                        short 本支店区分, 
                        bool BG更新, 
                        bool BG起動, 
                        bool BG終了, 
                        bool 受注入力送信区分, 
                        bool 出荷指示送信区分, 
                        bool 売上入力送信区分, 
                        bool 発注入力送信区分, 
                        bool 入荷入力送信区分, 
                        bool 仕入入力送信区分, 
                        bool 入金入力送信区分, 
                        bool 支払入力送信区分, 
                        bool 支払消費税送信区分, 
                        bool 移動入力送信区分, 
                        bool 棚卸入力送信区分, 
                        bool BG更新処理, 
                        short 数量の整数桁, 
                        short 売上単価の整数桁, 
                        bool 売上仕訳連携区分, 
                        bool 入金仕訳連携区分, 
                        bool 仕入仕訳連携区分, 
                        bool 支払仕訳連携区分, 
                        bool 売上オンライン仕訳区分, 
                        bool 入金オンライン仕訳区分, 
                        bool 仕入オンライン仕訳区分, 
                        bool 支払オンライン仕訳区分) {
                T会社基本Row rowT会社基本Row = ((T会社基本Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ＫＥ,
                        事業所管理,
                        棚卸区分,
                        在庫評価区分,
                        入数管理,
                        倉庫管理,
                        セット入庫管理,
                        月末管理サイクル,
                        代理店管理,
                        納入先管理,
                        一括消費税率,
                        新一括消費税率,
                        新消費税適用,
                        数量の小数桁,
                        売上単価の小数桁,
                        売上金額の丸め,
                        単価管理,
                        得掛率管理,
                        得履歴管理,
                        仕履歴管理,
                        売上区分コード,
                        システム区分,
                        請求月区分コード,
                        入金区分コード,
                        入金システム区分,
                        仕入区分コード,
                        仕入システム区分,
                        支払月区分コード,
                        支払区分コード,
                        支払システム区分,
                        移動区分コード,
                        移動システム区分,
                        棚卸区分コード,
                        棚卸システム区分,
                        納品書レーザー,
                        合計請求書レーザー,
                        請求明細書レーザー,
                        事業所コード,
                        事業所記号,
                        本支店区分,
                        BG更新,
                        BG起動,
                        BG終了,
                        受注入力送信区分,
                        出荷指示送信区分,
                        売上入力送信区分,
                        発注入力送信区分,
                        入荷入力送信区分,
                        仕入入力送信区分,
                        入金入力送信区分,
                        支払入力送信区分,
                        支払消費税送信区分,
                        移動入力送信区分,
                        棚卸入力送信区分,
                        BG更新処理,
                        数量の整数桁,
                        売上単価の整数桁,
                        売上仕訳連携区分,
                        入金仕訳連携区分,
                        仕入仕訳連携区分,
                        支払仕訳連携区分,
                        売上オンライン仕訳区分,
                        入金オンライン仕訳区分,
                        仕入オンライン仕訳区分,
                        支払オンライン仕訳区分};
                rowT会社基本Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowT会社基本Row);
                return rowT会社基本Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T会社基本Row FindByＫＥ(short ＫＥ) {
                return ((T会社基本Row)(this.Rows.Find(new object[] {
                            ＫＥ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T会社基本DataTable cln = ((T会社基本DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T会社基本DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnＫＥ = base.Columns["ＫＥ"];
                this.column事業所管理 = base.Columns["事業所管理"];
                this.column棚卸区分 = base.Columns["棚卸区分"];
                this.column在庫評価区分 = base.Columns["在庫評価区分"];
                this.column入数管理 = base.Columns["入数管理"];
                this.column倉庫管理 = base.Columns["倉庫管理"];
                this.columnセット入庫管理 = base.Columns["セット入庫管理"];
                this.column月末管理サイクル = base.Columns["月末管理サイクル"];
                this.column代理店管理 = base.Columns["代理店管理"];
                this.column納入先管理 = base.Columns["納入先管理"];
                this.column一括消費税率 = base.Columns["一括消費税率"];
                this.column新一括消費税率 = base.Columns["新一括消費税率"];
                this.column新消費税適用 = base.Columns["新消費税適用"];
                this.column数量の小数桁 = base.Columns["数量の小数桁"];
                this.column売上単価の小数桁 = base.Columns["売上単価の小数桁"];
                this.column売上金額の丸め = base.Columns["売上金額の丸め"];
                this.column単価管理 = base.Columns["単価管理"];
                this.column得掛率管理 = base.Columns["得掛率管理"];
                this.column得履歴管理 = base.Columns["得履歴管理"];
                this.column仕履歴管理 = base.Columns["仕履歴管理"];
                this.column売上区分コード = base.Columns["売上区分コード"];
                this.columnシステム区分 = base.Columns["システム区分"];
                this.column請求月区分コード = base.Columns["請求月区分コード"];
                this.column入金区分コード = base.Columns["入金区分コード"];
                this.column入金システム区分 = base.Columns["入金システム区分"];
                this.column仕入区分コード = base.Columns["仕入区分コード"];
                this.column仕入システム区分 = base.Columns["仕入システム区分"];
                this.column支払月区分コード = base.Columns["支払月区分コード"];
                this.column支払区分コード = base.Columns["支払区分コード"];
                this.column支払システム区分 = base.Columns["支払システム区分"];
                this.column移動区分コード = base.Columns["移動区分コード"];
                this.column移動システム区分 = base.Columns["移動システム区分"];
                this.column棚卸区分コード = base.Columns["棚卸区分コード"];
                this.column棚卸システム区分 = base.Columns["棚卸システム区分"];
                this.column納品書レーザー = base.Columns["納品書レーザー"];
                this.column合計請求書レーザー = base.Columns["合計請求書レーザー"];
                this.column請求明細書レーザー = base.Columns["請求明細書レーザー"];
                this.column事業所コード = base.Columns["事業所コード"];
                this.column事業所記号 = base.Columns["事業所記号"];
                this.column本支店区分 = base.Columns["本支店区分"];
                this.columnBG更新 = base.Columns["BG更新"];
                this.columnBG起動 = base.Columns["BG起動"];
                this.columnBG終了 = base.Columns["BG終了"];
                this.column受注入力送信区分 = base.Columns["受注入力送信区分"];
                this.column出荷指示送信区分 = base.Columns["出荷指示送信区分"];
                this.column売上入力送信区分 = base.Columns["売上入力送信区分"];
                this.column発注入力送信区分 = base.Columns["発注入力送信区分"];
                this.column入荷入力送信区分 = base.Columns["入荷入力送信区分"];
                this.column仕入入力送信区分 = base.Columns["仕入入力送信区分"];
                this.column入金入力送信区分 = base.Columns["入金入力送信区分"];
                this.column支払入力送信区分 = base.Columns["支払入力送信区分"];
                this.column支払消費税送信区分 = base.Columns["支払消費税送信区分"];
                this.column移動入力送信区分 = base.Columns["移動入力送信区分"];
                this.column棚卸入力送信区分 = base.Columns["棚卸入力送信区分"];
                this.columnBG更新処理 = base.Columns["BG更新処理"];
                this.column数量の整数桁 = base.Columns["数量の整数桁"];
                this.column売上単価の整数桁 = base.Columns["売上単価の整数桁"];
                this.column売上仕訳連携区分 = base.Columns["売上仕訳連携区分"];
                this.column入金仕訳連携区分 = base.Columns["入金仕訳連携区分"];
                this.column仕入仕訳連携区分 = base.Columns["仕入仕訳連携区分"];
                this.column支払仕訳連携区分 = base.Columns["支払仕訳連携区分"];
                this.column売上オンライン仕訳区分 = base.Columns["売上オンライン仕訳区分"];
                this.column入金オンライン仕訳区分 = base.Columns["入金オンライン仕訳区分"];
                this.column仕入オンライン仕訳区分 = base.Columns["仕入オンライン仕訳区分"];
                this.column支払オンライン仕訳区分 = base.Columns["支払オンライン仕訳区分"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnＫＥ = new global::System.Data.DataColumn("ＫＥ", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnＫＥ);
                this.column事業所管理 = new global::System.Data.DataColumn("事業所管理", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column事業所管理);
                this.column棚卸区分 = new global::System.Data.DataColumn("棚卸区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column棚卸区分);
                this.column在庫評価区分 = new global::System.Data.DataColumn("在庫評価区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column在庫評価区分);
                this.column入数管理 = new global::System.Data.DataColumn("入数管理", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入数管理);
                this.column倉庫管理 = new global::System.Data.DataColumn("倉庫管理", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column倉庫管理);
                this.columnセット入庫管理 = new global::System.Data.DataColumn("セット入庫管理", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnセット入庫管理);
                this.column月末管理サイクル = new global::System.Data.DataColumn("月末管理サイクル", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column月末管理サイクル);
                this.column代理店管理 = new global::System.Data.DataColumn("代理店管理", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column代理店管理);
                this.column納入先管理 = new global::System.Data.DataColumn("納入先管理", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納入先管理);
                this.column一括消費税率 = new global::System.Data.DataColumn("一括消費税率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column一括消費税率);
                this.column新一括消費税率 = new global::System.Data.DataColumn("新一括消費税率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column新一括消費税率);
                this.column新消費税適用 = new global::System.Data.DataColumn("新消費税適用", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column新消費税適用);
                this.column数量の小数桁 = new global::System.Data.DataColumn("数量の小数桁", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量の小数桁);
                this.column売上単価の小数桁 = new global::System.Data.DataColumn("売上単価の小数桁", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上単価の小数桁);
                this.column売上金額の丸め = new global::System.Data.DataColumn("売上金額の丸め", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上金額の丸め);
                this.column単価管理 = new global::System.Data.DataColumn("単価管理", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column単価管理);
                this.column得掛率管理 = new global::System.Data.DataColumn("得掛率管理", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column得掛率管理);
                this.column得履歴管理 = new global::System.Data.DataColumn("得履歴管理", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column得履歴管理);
                this.column仕履歴管理 = new global::System.Data.DataColumn("仕履歴管理", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕履歴管理);
                this.column売上区分コード = new global::System.Data.DataColumn("売上区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上区分コード);
                this.columnシステム区分 = new global::System.Data.DataColumn("システム区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnシステム区分);
                this.column請求月区分コード = new global::System.Data.DataColumn("請求月区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column請求月区分コード);
                this.column入金区分コード = new global::System.Data.DataColumn("入金区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入金区分コード);
                this.column入金システム区分 = new global::System.Data.DataColumn("入金システム区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入金システム区分);
                this.column仕入区分コード = new global::System.Data.DataColumn("仕入区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入区分コード);
                this.column仕入システム区分 = new global::System.Data.DataColumn("仕入システム区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入システム区分);
                this.column支払月区分コード = new global::System.Data.DataColumn("支払月区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払月区分コード);
                this.column支払区分コード = new global::System.Data.DataColumn("支払区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払区分コード);
                this.column支払システム区分 = new global::System.Data.DataColumn("支払システム区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払システム区分);
                this.column移動区分コード = new global::System.Data.DataColumn("移動区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column移動区分コード);
                this.column移動システム区分 = new global::System.Data.DataColumn("移動システム区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column移動システム区分);
                this.column棚卸区分コード = new global::System.Data.DataColumn("棚卸区分コード", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column棚卸区分コード);
                this.column棚卸システム区分 = new global::System.Data.DataColumn("棚卸システム区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column棚卸システム区分);
                this.column納品書レーザー = new global::System.Data.DataColumn("納品書レーザー", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column納品書レーザー);
                this.column合計請求書レーザー = new global::System.Data.DataColumn("合計請求書レーザー", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合計請求書レーザー);
                this.column請求明細書レーザー = new global::System.Data.DataColumn("請求明細書レーザー", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column請求明細書レーザー);
                this.column事業所コード = new global::System.Data.DataColumn("事業所コード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column事業所コード);
                this.column事業所記号 = new global::System.Data.DataColumn("事業所記号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column事業所記号);
                this.column本支店区分 = new global::System.Data.DataColumn("本支店区分", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本支店区分);
                this.columnBG更新 = new global::System.Data.DataColumn("BG更新", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBG更新);
                this.columnBG起動 = new global::System.Data.DataColumn("BG起動", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBG起動);
                this.columnBG終了 = new global::System.Data.DataColumn("BG終了", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBG終了);
                this.column受注入力送信区分 = new global::System.Data.DataColumn("受注入力送信区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column受注入力送信区分);
                this.column出荷指示送信区分 = new global::System.Data.DataColumn("出荷指示送信区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出荷指示送信区分);
                this.column売上入力送信区分 = new global::System.Data.DataColumn("売上入力送信区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上入力送信区分);
                this.column発注入力送信区分 = new global::System.Data.DataColumn("発注入力送信区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column発注入力送信区分);
                this.column入荷入力送信区分 = new global::System.Data.DataColumn("入荷入力送信区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入荷入力送信区分);
                this.column仕入入力送信区分 = new global::System.Data.DataColumn("仕入入力送信区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入入力送信区分);
                this.column入金入力送信区分 = new global::System.Data.DataColumn("入金入力送信区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入金入力送信区分);
                this.column支払入力送信区分 = new global::System.Data.DataColumn("支払入力送信区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払入力送信区分);
                this.column支払消費税送信区分 = new global::System.Data.DataColumn("支払消費税送信区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払消費税送信区分);
                this.column移動入力送信区分 = new global::System.Data.DataColumn("移動入力送信区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column移動入力送信区分);
                this.column棚卸入力送信区分 = new global::System.Data.DataColumn("棚卸入力送信区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column棚卸入力送信区分);
                this.columnBG更新処理 = new global::System.Data.DataColumn("BG更新処理", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBG更新処理);
                this.column数量の整数桁 = new global::System.Data.DataColumn("数量の整数桁", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column数量の整数桁);
                this.column売上単価の整数桁 = new global::System.Data.DataColumn("売上単価の整数桁", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上単価の整数桁);
                this.column売上仕訳連携区分 = new global::System.Data.DataColumn("売上仕訳連携区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上仕訳連携区分);
                this.column入金仕訳連携区分 = new global::System.Data.DataColumn("入金仕訳連携区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入金仕訳連携区分);
                this.column仕入仕訳連携区分 = new global::System.Data.DataColumn("仕入仕訳連携区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入仕訳連携区分);
                this.column支払仕訳連携区分 = new global::System.Data.DataColumn("支払仕訳連携区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払仕訳連携区分);
                this.column売上オンライン仕訳区分 = new global::System.Data.DataColumn("売上オンライン仕訳区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売上オンライン仕訳区分);
                this.column入金オンライン仕訳区分 = new global::System.Data.DataColumn("入金オンライン仕訳区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入金オンライン仕訳区分);
                this.column仕入オンライン仕訳区分 = new global::System.Data.DataColumn("仕入オンライン仕訳区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column仕入オンライン仕訳区分);
                this.column支払オンライン仕訳区分 = new global::System.Data.DataColumn("支払オンライン仕訳区分", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支払オンライン仕訳区分);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnＫＥ}, true));
                this.columnＫＥ.AllowDBNull = false;
                this.columnＫＥ.Unique = true;
                this.column事業所管理.AllowDBNull = false;
                this.column棚卸区分.AllowDBNull = false;
                this.column入数管理.AllowDBNull = false;
                this.column倉庫管理.AllowDBNull = false;
                this.columnセット入庫管理.AllowDBNull = false;
                this.column月末管理サイクル.AllowDBNull = false;
                this.column代理店管理.AllowDBNull = false;
                this.column納入先管理.AllowDBNull = false;
                this.column単価管理.AllowDBNull = false;
                this.column得掛率管理.AllowDBNull = false;
                this.column得履歴管理.AllowDBNull = false;
                this.column仕履歴管理.AllowDBNull = false;
                this.column売上区分コード.AllowDBNull = false;
                this.columnシステム区分.AllowDBNull = false;
                this.column請求月区分コード.AllowDBNull = false;
                this.column入金区分コード.AllowDBNull = false;
                this.column入金システム区分.AllowDBNull = false;
                this.column仕入区分コード.AllowDBNull = false;
                this.column仕入システム区分.AllowDBNull = false;
                this.column支払月区分コード.AllowDBNull = false;
                this.column支払区分コード.AllowDBNull = false;
                this.column支払システム区分.AllowDBNull = false;
                this.column移動区分コード.AllowDBNull = false;
                this.column移動システム区分.AllowDBNull = false;
                this.column棚卸区分コード.AllowDBNull = false;
                this.column棚卸システム区分.AllowDBNull = false;
                this.column納品書レーザー.AllowDBNull = false;
                this.column合計請求書レーザー.AllowDBNull = false;
                this.column請求明細書レーザー.AllowDBNull = false;
                this.column事業所コード.MaxLength = 8;
                this.column事業所記号.MaxLength = 10;
                this.columnBG更新.AllowDBNull = false;
                this.columnBG起動.AllowDBNull = false;
                this.columnBG終了.AllowDBNull = false;
                this.column受注入力送信区分.AllowDBNull = false;
                this.column出荷指示送信区分.AllowDBNull = false;
                this.column売上入力送信区分.AllowDBNull = false;
                this.column発注入力送信区分.AllowDBNull = false;
                this.column入荷入力送信区分.AllowDBNull = false;
                this.column仕入入力送信区分.AllowDBNull = false;
                this.column入金入力送信区分.AllowDBNull = false;
                this.column支払入力送信区分.AllowDBNull = false;
                this.column支払消費税送信区分.AllowDBNull = false;
                this.column移動入力送信区分.AllowDBNull = false;
                this.column棚卸入力送信区分.AllowDBNull = false;
                this.columnBG更新処理.AllowDBNull = false;
                this.column売上仕訳連携区分.AllowDBNull = false;
                this.column入金仕訳連携区分.AllowDBNull = false;
                this.column仕入仕訳連携区分.AllowDBNull = false;
                this.column支払仕訳連携区分.AllowDBNull = false;
                this.column売上オンライン仕訳区分.AllowDBNull = false;
                this.column入金オンライン仕訳区分.AllowDBNull = false;
                this.column仕入オンライン仕訳区分.AllowDBNull = false;
                this.column支払オンライン仕訳区分.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T会社基本Row NewT会社基本Row() {
                return ((T会社基本Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T会社基本Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T会社基本Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T会社基本RowChanged != null)) {
                    this.T会社基本RowChanged(this, new T会社基本RowChangeEvent(((T会社基本Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T会社基本RowChanging != null)) {
                    this.T会社基本RowChanging(this, new T会社基本RowChangeEvent(((T会社基本Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T会社基本RowDeleted != null)) {
                    this.T会社基本RowDeleted(this, new T会社基本RowChangeEvent(((T会社基本Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T会社基本RowDeleting != null)) {
                    this.T会社基本RowDeleting(this, new T会社基本RowChangeEvent(((T会社基本Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT会社基本Row(T会社基本Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SPEEDDB管理DataSet ds = new SPEEDDB管理DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T会社基本DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TＷＳ番号Row : global::System.Data.DataRow {
            
            private TＷＳ番号DataTable tableTＷＳ番号;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TＷＳ番号Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTＷＳ番号 = ((TＷＳ番号DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ＫＥＹ {
                get {
                    try {
                        return ((short)(this[this.tableTＷＳ番号.ＫＥＹColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TＷＳ番号\' にある列 \'ＫＥＹ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTＷＳ番号.ＫＥＹColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ＷＳ番号 {
                get {
                    try {
                        return ((short)(this[this.tableTＷＳ番号.ＷＳ番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TＷＳ番号\' にある列 \'ＷＳ番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTＷＳ番号.ＷＳ番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 処理番号 {
                get {
                    try {
                        return ((int)(this[this.tableTＷＳ番号.処理番号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TＷＳ番号\' にある列 \'処理番号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTＷＳ番号.処理番号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 受発注行数 {
                get {
                    try {
                        return ((int)(this[this.tableTＷＳ番号.受発注行数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TＷＳ番号\' にある列 \'受発注行数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTＷＳ番号.受発注行数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 行数連番 {
                get {
                    try {
                        return ((int)(this[this.tableTＷＳ番号.行数連番Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'TＷＳ番号\' にある列 \'行数連番\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableTＷＳ番号.行数連番Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＫＥＹNull() {
                return this.IsNull(this.tableTＷＳ番号.ＫＥＹColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＫＥＹNull() {
                this[this.tableTＷＳ番号.ＫＥＹColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsＷＳ番号Null() {
                return this.IsNull(this.tableTＷＳ番号.ＷＳ番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetＷＳ番号Null() {
                this[this.tableTＷＳ番号.ＷＳ番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理番号Null() {
                return this.IsNull(this.tableTＷＳ番号.処理番号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理番号Null() {
                this[this.tableTＷＳ番号.処理番号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is受発注行数Null() {
                return this.IsNull(this.tableTＷＳ番号.受発注行数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set受発注行数Null() {
                this[this.tableTＷＳ番号.受発注行数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is行数連番Null() {
                return this.IsNull(this.tableTＷＳ番号.行数連番Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set行数連番Null() {
                this[this.tableTＷＳ番号.行数連番Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T会社基本Row : global::System.Data.DataRow {
            
            private T会社基本DataTable tableT会社基本;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T会社基本Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT会社基本 = ((T会社基本DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ＫＥ {
                get {
                    return ((short)(this[this.tableT会社基本.ＫＥColumn]));
                }
                set {
                    this[this.tableT会社基本.ＫＥColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 事業所管理 {
                get {
                    return ((bool)(this[this.tableT会社基本.事業所管理Column]));
                }
                set {
                    this[this.tableT会社基本.事業所管理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 棚卸区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.棚卸区分Column]));
                }
                set {
                    this[this.tableT会社基本.棚卸区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 在庫評価区分 {
                get {
                    try {
                        return ((short)(this[this.tableT会社基本.在庫評価区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T会社基本\' にある列 \'在庫評価区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT会社基本.在庫評価区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 入数管理 {
                get {
                    return ((bool)(this[this.tableT会社基本.入数管理Column]));
                }
                set {
                    this[this.tableT会社基本.入数管理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 倉庫管理 {
                get {
                    return ((bool)(this[this.tableT会社基本.倉庫管理Column]));
                }
                set {
                    this[this.tableT会社基本.倉庫管理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool セット入庫管理 {
                get {
                    return ((bool)(this[this.tableT会社基本.セット入庫管理Column]));
                }
                set {
                    this[this.tableT会社基本.セット入庫管理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 月末管理サイクル {
                get {
                    return ((bool)(this[this.tableT会社基本.月末管理サイクルColumn]));
                }
                set {
                    this[this.tableT会社基本.月末管理サイクルColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 代理店管理 {
                get {
                    return ((bool)(this[this.tableT会社基本.代理店管理Column]));
                }
                set {
                    this[this.tableT会社基本.代理店管理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 納入先管理 {
                get {
                    return ((bool)(this[this.tableT会社基本.納入先管理Column]));
                }
                set {
                    this[this.tableT会社基本.納入先管理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 一括消費税率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT会社基本.一括消費税率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T会社基本\' にある列 \'一括消費税率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT会社基本.一括消費税率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal 新一括消費税率 {
                get {
                    try {
                        return ((decimal)(this[this.tableT会社基本.新一括消費税率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T会社基本\' にある列 \'新一括消費税率\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT会社基本.新一括消費税率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 新消費税適用 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT会社基本.新消費税適用Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T会社基本\' にある列 \'新消費税適用\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT会社基本.新消費税適用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 数量の小数桁 {
                get {
                    try {
                        return ((short)(this[this.tableT会社基本.数量の小数桁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T会社基本\' にある列 \'数量の小数桁\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT会社基本.数量の小数桁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上単価の小数桁 {
                get {
                    try {
                        return ((short)(this[this.tableT会社基本.売上単価の小数桁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T会社基本\' にある列 \'売上単価の小数桁\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT会社基本.売上単価の小数桁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上金額の丸め {
                get {
                    try {
                        return ((short)(this[this.tableT会社基本.売上金額の丸めColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T会社基本\' にある列 \'売上金額の丸め\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT会社基本.売上金額の丸めColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 単価管理 {
                get {
                    return ((bool)(this[this.tableT会社基本.単価管理Column]));
                }
                set {
                    this[this.tableT会社基本.単価管理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 得掛率管理 {
                get {
                    return ((bool)(this[this.tableT会社基本.得掛率管理Column]));
                }
                set {
                    this[this.tableT会社基本.得掛率管理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 得履歴管理 {
                get {
                    return ((bool)(this[this.tableT会社基本.得履歴管理Column]));
                }
                set {
                    this[this.tableT会社基本.得履歴管理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 仕履歴管理 {
                get {
                    return ((bool)(this[this.tableT会社基本.仕履歴管理Column]));
                }
                set {
                    this[this.tableT会社基本.仕履歴管理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上区分コード {
                get {
                    return ((short)(this[this.tableT会社基本.売上区分コードColumn]));
                }
                set {
                    this[this.tableT会社基本.売上区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short システム区分 {
                get {
                    return ((short)(this[this.tableT会社基本.システム区分Column]));
                }
                set {
                    this[this.tableT会社基本.システム区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 請求月区分コード {
                get {
                    return ((short)(this[this.tableT会社基本.請求月区分コードColumn]));
                }
                set {
                    this[this.tableT会社基本.請求月区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 入金区分コード {
                get {
                    return ((short)(this[this.tableT会社基本.入金区分コードColumn]));
                }
                set {
                    this[this.tableT会社基本.入金区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 入金システム区分 {
                get {
                    return ((short)(this[this.tableT会社基本.入金システム区分Column]));
                }
                set {
                    this[this.tableT会社基本.入金システム区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入区分コード {
                get {
                    return ((short)(this[this.tableT会社基本.仕入区分コードColumn]));
                }
                set {
                    this[this.tableT会社基本.仕入区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 仕入システム区分 {
                get {
                    return ((short)(this[this.tableT会社基本.仕入システム区分Column]));
                }
                set {
                    this[this.tableT会社基本.仕入システム区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 支払月区分コード {
                get {
                    return ((short)(this[this.tableT会社基本.支払月区分コードColumn]));
                }
                set {
                    this[this.tableT会社基本.支払月区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 支払区分コード {
                get {
                    return ((short)(this[this.tableT会社基本.支払区分コードColumn]));
                }
                set {
                    this[this.tableT会社基本.支払区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 支払システム区分 {
                get {
                    return ((short)(this[this.tableT会社基本.支払システム区分Column]));
                }
                set {
                    this[this.tableT会社基本.支払システム区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 移動区分コード {
                get {
                    return ((short)(this[this.tableT会社基本.移動区分コードColumn]));
                }
                set {
                    this[this.tableT会社基本.移動区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 移動システム区分 {
                get {
                    return ((short)(this[this.tableT会社基本.移動システム区分Column]));
                }
                set {
                    this[this.tableT会社基本.移動システム区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 棚卸区分コード {
                get {
                    return ((short)(this[this.tableT会社基本.棚卸区分コードColumn]));
                }
                set {
                    this[this.tableT会社基本.棚卸区分コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 棚卸システム区分 {
                get {
                    return ((short)(this[this.tableT会社基本.棚卸システム区分Column]));
                }
                set {
                    this[this.tableT会社基本.棚卸システム区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 納品書レーザー {
                get {
                    return ((bool)(this[this.tableT会社基本.納品書レーザーColumn]));
                }
                set {
                    this[this.tableT会社基本.納品書レーザーColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 合計請求書レーザー {
                get {
                    return ((bool)(this[this.tableT会社基本.合計請求書レーザーColumn]));
                }
                set {
                    this[this.tableT会社基本.合計請求書レーザーColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 請求明細書レーザー {
                get {
                    return ((bool)(this[this.tableT会社基本.請求明細書レーザーColumn]));
                }
                set {
                    this[this.tableT会社基本.請求明細書レーザーColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 事業所コード {
                get {
                    try {
                        return ((string)(this[this.tableT会社基本.事業所コードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T会社基本\' にある列 \'事業所コード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT会社基本.事業所コードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 事業所記号 {
                get {
                    try {
                        return ((string)(this[this.tableT会社基本.事業所記号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T会社基本\' にある列 \'事業所記号\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT会社基本.事業所記号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 本支店区分 {
                get {
                    try {
                        return ((short)(this[this.tableT会社基本.本支店区分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T会社基本\' にある列 \'本支店区分\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT会社基本.本支店区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BG更新 {
                get {
                    return ((bool)(this[this.tableT会社基本.BG更新Column]));
                }
                set {
                    this[this.tableT会社基本.BG更新Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BG起動 {
                get {
                    return ((bool)(this[this.tableT会社基本.BG起動Column]));
                }
                set {
                    this[this.tableT会社基本.BG起動Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BG終了 {
                get {
                    return ((bool)(this[this.tableT会社基本.BG終了Column]));
                }
                set {
                    this[this.tableT会社基本.BG終了Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 受注入力送信区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.受注入力送信区分Column]));
                }
                set {
                    this[this.tableT会社基本.受注入力送信区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 出荷指示送信区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.出荷指示送信区分Column]));
                }
                set {
                    this[this.tableT会社基本.出荷指示送信区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 売上入力送信区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.売上入力送信区分Column]));
                }
                set {
                    this[this.tableT会社基本.売上入力送信区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 発注入力送信区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.発注入力送信区分Column]));
                }
                set {
                    this[this.tableT会社基本.発注入力送信区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 入荷入力送信区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.入荷入力送信区分Column]));
                }
                set {
                    this[this.tableT会社基本.入荷入力送信区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 仕入入力送信区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.仕入入力送信区分Column]));
                }
                set {
                    this[this.tableT会社基本.仕入入力送信区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 入金入力送信区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.入金入力送信区分Column]));
                }
                set {
                    this[this.tableT会社基本.入金入力送信区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 支払入力送信区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.支払入力送信区分Column]));
                }
                set {
                    this[this.tableT会社基本.支払入力送信区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 支払消費税送信区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.支払消費税送信区分Column]));
                }
                set {
                    this[this.tableT会社基本.支払消費税送信区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 移動入力送信区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.移動入力送信区分Column]));
                }
                set {
                    this[this.tableT会社基本.移動入力送信区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 棚卸入力送信区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.棚卸入力送信区分Column]));
                }
                set {
                    this[this.tableT会社基本.棚卸入力送信区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BG更新処理 {
                get {
                    return ((bool)(this[this.tableT会社基本.BG更新処理Column]));
                }
                set {
                    this[this.tableT会社基本.BG更新処理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 数量の整数桁 {
                get {
                    try {
                        return ((short)(this[this.tableT会社基本.数量の整数桁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T会社基本\' にある列 \'数量の整数桁\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT会社基本.数量の整数桁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short 売上単価の整数桁 {
                get {
                    try {
                        return ((short)(this[this.tableT会社基本.売上単価の整数桁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T会社基本\' にある列 \'売上単価の整数桁\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT会社基本.売上単価の整数桁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 売上仕訳連携区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.売上仕訳連携区分Column]));
                }
                set {
                    this[this.tableT会社基本.売上仕訳連携区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 入金仕訳連携区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.入金仕訳連携区分Column]));
                }
                set {
                    this[this.tableT会社基本.入金仕訳連携区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 仕入仕訳連携区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.仕入仕訳連携区分Column]));
                }
                set {
                    this[this.tableT会社基本.仕入仕訳連携区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 支払仕訳連携区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.支払仕訳連携区分Column]));
                }
                set {
                    this[this.tableT会社基本.支払仕訳連携区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 売上オンライン仕訳区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.売上オンライン仕訳区分Column]));
                }
                set {
                    this[this.tableT会社基本.売上オンライン仕訳区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 入金オンライン仕訳区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.入金オンライン仕訳区分Column]));
                }
                set {
                    this[this.tableT会社基本.入金オンライン仕訳区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 仕入オンライン仕訳区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.仕入オンライン仕訳区分Column]));
                }
                set {
                    this[this.tableT会社基本.仕入オンライン仕訳区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 支払オンライン仕訳区分 {
                get {
                    return ((bool)(this[this.tableT会社基本.支払オンライン仕訳区分Column]));
                }
                set {
                    this[this.tableT会社基本.支払オンライン仕訳区分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is在庫評価区分Null() {
                return this.IsNull(this.tableT会社基本.在庫評価区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set在庫評価区分Null() {
                this[this.tableT会社基本.在庫評価区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is一括消費税率Null() {
                return this.IsNull(this.tableT会社基本.一括消費税率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set一括消費税率Null() {
                this[this.tableT会社基本.一括消費税率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is新一括消費税率Null() {
                return this.IsNull(this.tableT会社基本.新一括消費税率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set新一括消費税率Null() {
                this[this.tableT会社基本.新一括消費税率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is新消費税適用Null() {
                return this.IsNull(this.tableT会社基本.新消費税適用Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set新消費税適用Null() {
                this[this.tableT会社基本.新消費税適用Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is数量の小数桁Null() {
                return this.IsNull(this.tableT会社基本.数量の小数桁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set数量の小数桁Null() {
                this[this.tableT会社基本.数量の小数桁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上単価の小数桁Null() {
                return this.IsNull(this.tableT会社基本.売上単価の小数桁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上単価の小数桁Null() {
                this[this.tableT会社基本.売上単価の小数桁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上金額の丸めNull() {
                return this.IsNull(this.tableT会社基本.売上金額の丸めColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上金額の丸めNull() {
                this[this.tableT会社基本.売上金額の丸めColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is事業所コードNull() {
                return this.IsNull(this.tableT会社基本.事業所コードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set事業所コードNull() {
                this[this.tableT会社基本.事業所コードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is事業所記号Null() {
                return this.IsNull(this.tableT会社基本.事業所記号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set事業所記号Null() {
                this[this.tableT会社基本.事業所記号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is本支店区分Null() {
                return this.IsNull(this.tableT会社基本.本支店区分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set本支店区分Null() {
                this[this.tableT会社基本.本支店区分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is数量の整数桁Null() {
                return this.IsNull(this.tableT会社基本.数量の整数桁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set数量の整数桁Null() {
                this[this.tableT会社基本.数量の整数桁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売上単価の整数桁Null() {
                return this.IsNull(this.tableT会社基本.売上単価の整数桁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売上単価の整数桁Null() {
                this[this.tableT会社基本.売上単価の整数桁Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TＷＳ番号RowChangeEvent : global::System.EventArgs {
            
            private TＷＳ番号Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TＷＳ番号RowChangeEvent(TＷＳ番号Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TＷＳ番号Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T会社基本RowChangeEvent : global::System.EventArgs {
            
            private T会社基本Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T会社基本RowChangeEvent(T会社基本Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T会社基本Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace db_test.SPEEDDB管理DataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TＷＳ番号TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TＷＳ番号TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TＷＳ番号";
            tableMapping.ColumnMappings.Add("ＫＥＹ", "ＫＥＹ");
            tableMapping.ColumnMappings.Add("ＷＳ番号", "ＷＳ番号");
            tableMapping.ColumnMappings.Add("処理番号", "処理番号");
            tableMapping.ColumnMappings.Add("受発注行数", "受発注行数");
            tableMapping.ColumnMappings.Add("行数連番", "行数連番");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TＷＳ番号] ([ＫＥＹ], [ＷＳ番号], [処理番号], [受発注行数], [行数連番]) VALUES (@ＫＥＹ, " +
                "@ＷＳ番号, @処理番号, @受発注行数, @行数連番)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＫＥＹ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＫＥＹ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＷＳ番号", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＷＳ番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受発注行数", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受発注行数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@行数連番", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "行数連番", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::db_test.Properties.Settings.Default.SPEEDDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ＫＥＹ, ＷＳ番号, 処理番号, 受発注行数, 行数連番 FROM dbo.TＷＳ番号";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT            ＫＥＹ, ＷＳ番号, 処理番号, 受発注行数, 行数連番\r\nFROM              TＷＳ番号\r\nWHERE   " +
                "          (ＫＥＹ = @KEY)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "ＫＥＹ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE TＷＳ番号\r\nSET 処理番号 = @処理番号\r\nWHERE ＫＥＹ = 1\r\n";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理番号", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "処理番号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SPEEDDB管理DataSet.TＷＳ番号DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SPEEDDB管理DataSet.TＷＳ番号DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SPEEDDB管理DataSet.TＷＳ番号DataTable dataTable = new SPEEDDB管理DataSet.TＷＳ番号DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByKEY(SPEEDDB管理DataSet.TＷＳ番号DataTable dataTable, global::System.Nullable<short> KEY) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((KEY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((short)(KEY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SPEEDDB管理DataSet.TＷＳ番号DataTable GetDataByKEY(global::System.Nullable<short> KEY) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((KEY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((short)(KEY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            SPEEDDB管理DataSet.TＷＳ番号DataTable dataTable = new SPEEDDB管理DataSet.TＷＳ番号DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SPEEDDB管理DataSet.TＷＳ番号DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SPEEDDB管理DataSet dataSet) {
            return this.Adapter.Update(dataSet, "TＷＳ番号");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<short> ＫＥＹ, global::System.Nullable<short> ＷＳ番号, global::System.Nullable<int> 処理番号, global::System.Nullable<int> 受発注行数, global::System.Nullable<int> 行数連番) {
            if ((ＫＥＹ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((short)(ＫＥＹ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ＷＳ番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((short)(ＷＳ番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((処理番号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(処理番号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((受発注行数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(受発注行数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((行数連番.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(行数連番.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery処理番号(global::System.Nullable<int> 処理番号) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((処理番号.HasValue == true)) {
                command.Parameters[0].Value = ((int)(処理番号.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T会社基本TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T会社基本TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T会社基本";
            tableMapping.ColumnMappings.Add("ＫＥ", "ＫＥ");
            tableMapping.ColumnMappings.Add("事業所管理", "事業所管理");
            tableMapping.ColumnMappings.Add("棚卸区分", "棚卸区分");
            tableMapping.ColumnMappings.Add("在庫評価区分", "在庫評価区分");
            tableMapping.ColumnMappings.Add("入数管理", "入数管理");
            tableMapping.ColumnMappings.Add("倉庫管理", "倉庫管理");
            tableMapping.ColumnMappings.Add("セット入庫管理", "セット入庫管理");
            tableMapping.ColumnMappings.Add("月末管理サイクル", "月末管理サイクル");
            tableMapping.ColumnMappings.Add("代理店管理", "代理店管理");
            tableMapping.ColumnMappings.Add("納入先管理", "納入先管理");
            tableMapping.ColumnMappings.Add("一括消費税率", "一括消費税率");
            tableMapping.ColumnMappings.Add("新一括消費税率", "新一括消費税率");
            tableMapping.ColumnMappings.Add("新消費税適用", "新消費税適用");
            tableMapping.ColumnMappings.Add("数量の小数桁", "数量の小数桁");
            tableMapping.ColumnMappings.Add("売上単価の小数桁", "売上単価の小数桁");
            tableMapping.ColumnMappings.Add("売上金額の丸め", "売上金額の丸め");
            tableMapping.ColumnMappings.Add("単価管理", "単価管理");
            tableMapping.ColumnMappings.Add("得掛率管理", "得掛率管理");
            tableMapping.ColumnMappings.Add("得履歴管理", "得履歴管理");
            tableMapping.ColumnMappings.Add("仕履歴管理", "仕履歴管理");
            tableMapping.ColumnMappings.Add("売上区分コード", "売上区分コード");
            tableMapping.ColumnMappings.Add("システム区分", "システム区分");
            tableMapping.ColumnMappings.Add("請求月区分コード", "請求月区分コード");
            tableMapping.ColumnMappings.Add("入金区分コード", "入金区分コード");
            tableMapping.ColumnMappings.Add("入金システム区分", "入金システム区分");
            tableMapping.ColumnMappings.Add("仕入区分コード", "仕入区分コード");
            tableMapping.ColumnMappings.Add("仕入システム区分", "仕入システム区分");
            tableMapping.ColumnMappings.Add("支払月区分コード", "支払月区分コード");
            tableMapping.ColumnMappings.Add("支払区分コード", "支払区分コード");
            tableMapping.ColumnMappings.Add("支払システム区分", "支払システム区分");
            tableMapping.ColumnMappings.Add("移動区分コード", "移動区分コード");
            tableMapping.ColumnMappings.Add("移動システム区分", "移動システム区分");
            tableMapping.ColumnMappings.Add("棚卸区分コード", "棚卸区分コード");
            tableMapping.ColumnMappings.Add("棚卸システム区分", "棚卸システム区分");
            tableMapping.ColumnMappings.Add("納品書レーザー", "納品書レーザー");
            tableMapping.ColumnMappings.Add("合計請求書レーザー", "合計請求書レーザー");
            tableMapping.ColumnMappings.Add("請求明細書レーザー", "請求明細書レーザー");
            tableMapping.ColumnMappings.Add("事業所コード", "事業所コード");
            tableMapping.ColumnMappings.Add("事業所記号", "事業所記号");
            tableMapping.ColumnMappings.Add("本支店区分", "本支店区分");
            tableMapping.ColumnMappings.Add("BG更新", "BG更新");
            tableMapping.ColumnMappings.Add("BG起動", "BG起動");
            tableMapping.ColumnMappings.Add("BG終了", "BG終了");
            tableMapping.ColumnMappings.Add("受注入力送信区分", "受注入力送信区分");
            tableMapping.ColumnMappings.Add("出荷指示送信区分", "出荷指示送信区分");
            tableMapping.ColumnMappings.Add("売上入力送信区分", "売上入力送信区分");
            tableMapping.ColumnMappings.Add("発注入力送信区分", "発注入力送信区分");
            tableMapping.ColumnMappings.Add("入荷入力送信区分", "入荷入力送信区分");
            tableMapping.ColumnMappings.Add("仕入入力送信区分", "仕入入力送信区分");
            tableMapping.ColumnMappings.Add("入金入力送信区分", "入金入力送信区分");
            tableMapping.ColumnMappings.Add("支払入力送信区分", "支払入力送信区分");
            tableMapping.ColumnMappings.Add("支払消費税送信区分", "支払消費税送信区分");
            tableMapping.ColumnMappings.Add("移動入力送信区分", "移動入力送信区分");
            tableMapping.ColumnMappings.Add("棚卸入力送信区分", "棚卸入力送信区分");
            tableMapping.ColumnMappings.Add("BG更新処理", "BG更新処理");
            tableMapping.ColumnMappings.Add("数量の整数桁", "数量の整数桁");
            tableMapping.ColumnMappings.Add("売上単価の整数桁", "売上単価の整数桁");
            tableMapping.ColumnMappings.Add("売上仕訳連携区分", "売上仕訳連携区分");
            tableMapping.ColumnMappings.Add("入金仕訳連携区分", "入金仕訳連携区分");
            tableMapping.ColumnMappings.Add("仕入仕訳連携区分", "仕入仕訳連携区分");
            tableMapping.ColumnMappings.Add("支払仕訳連携区分", "支払仕訳連携区分");
            tableMapping.ColumnMappings.Add("売上オンライン仕訳区分", "売上オンライン仕訳区分");
            tableMapping.ColumnMappings.Add("入金オンライン仕訳区分", "入金オンライン仕訳区分");
            tableMapping.ColumnMappings.Add("仕入オンライン仕訳区分", "仕入オンライン仕訳区分");
            tableMapping.ColumnMappings.Add("支払オンライン仕訳区分", "支払オンライン仕訳区分");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T会社基本] WHERE (([ＫＥ] = @Original_ＫＥ) AND ([事業所管理] = @Original_事" +
                "業所管理) AND ([棚卸区分] = @Original_棚卸区分) AND ((@IsNull_在庫評価区分 = 1 AND [在庫評価区分] IS NUL" +
                "L) OR ([在庫評価区分] = @Original_在庫評価区分)) AND ([入数管理] = @Original_入数管理) AND ([倉庫管理] =" +
                " @Original_倉庫管理) AND ([セット入庫管理] = @Original_セット入庫管理) AND ([月末管理サイクル] = @Original" +
                "_月末管理サイクル) AND ([代理店管理] = @Original_代理店管理) AND ([納入先管理] = @Original_納入先管理) AND (" +
                "(@IsNull_一括消費税率 = 1 AND [一括消費税率] IS NULL) OR ([一括消費税率] = @Original_一括消費税率)) AND " +
                "((@IsNull_新一括消費税率 = 1 AND [新一括消費税率] IS NULL) OR ([新一括消費税率] = @Original_新一括消費税率))" +
                " AND ((@IsNull_新消費税適用 = 1 AND [新消費税適用] IS NULL) OR ([新消費税適用] = @Original_新消費税適用)" +
                ") AND ((@IsNull_数量の小数桁 = 1 AND [数量の小数桁] IS NULL) OR ([数量の小数桁] = @Original_数量の小数桁" +
                ")) AND ((@IsNull_売上単価の小数桁 = 1 AND [売上単価の小数桁] IS NULL) OR ([売上単価の小数桁] = @Original" +
                "_売上単価の小数桁)) AND ((@IsNull_売上金額の丸め = 1 AND [売上金額の丸め] IS NULL) OR ([売上金額の丸め] = @Or" +
                "iginal_売上金額の丸め)) AND ([単価管理] = @Original_単価管理) AND ([得掛率管理] = @Original_得掛率管理) A" +
                "ND ([得履歴管理] = @Original_得履歴管理) AND ([仕履歴管理] = @Original_仕履歴管理) AND ([売上区分コード] = " +
                "@Original_売上区分コード) AND ([システム区分] = @Original_システム区分) AND ([請求月区分コード] = @Original" +
                "_請求月区分コード) AND ([入金区分コード] = @Original_入金区分コード) AND ([入金システム区分] = @Original_入金システ" +
                "ム区分) AND ([仕入区分コード] = @Original_仕入区分コード) AND ([仕入システム区分] = @Original_仕入システム区分) A" +
                "ND ([支払月区分コード] = @Original_支払月区分コード) AND ([支払区分コード] = @Original_支払区分コード) AND ([支" +
                "払システム区分] = @Original_支払システム区分) AND ([移動区分コード] = @Original_移動区分コード) AND ([移動システム区" +
                "分] = @Original_移動システム区分) AND ([棚卸区分コード] = @Original_棚卸区分コード) AND ([棚卸システム区分] = @" +
                "Original_棚卸システム区分) AND ([納品書レーザー] = @Original_納品書レーザー) AND ([合計請求書レーザー] = @Origi" +
                "nal_合計請求書レーザー) AND ([請求明細書レーザー] = @Original_請求明細書レーザー) AND ((@IsNull_事業所コード = 1 " +
                "AND [事業所コード] IS NULL) OR ([事業所コード] = @Original_事業所コード)) AND ((@IsNull_事業所記号 = 1 " +
                "AND [事業所記号] IS NULL) OR ([事業所記号] = @Original_事業所記号)) AND ((@IsNull_本支店区分 = 1 AND" +
                " [本支店区分] IS NULL) OR ([本支店区分] = @Original_本支店区分)) AND ([BG更新] = @Original_BG更新) " +
                "AND ([BG起動] = @Original_BG起動) AND ([BG終了] = @Original_BG終了) AND ([受注入力送信区分] = @O" +
                "riginal_受注入力送信区分) AND ([出荷指示送信区分] = @Original_出荷指示送信区分) AND ([売上入力送信区分] = @Origi" +
                "nal_売上入力送信区分) AND ([発注入力送信区分] = @Original_発注入力送信区分) AND ([入荷入力送信区分] = @Original_" +
                "入荷入力送信区分) AND ([仕入入力送信区分] = @Original_仕入入力送信区分) AND ([入金入力送信区分] = @Original_入金入力" +
                "送信区分) AND ([支払入力送信区分] = @Original_支払入力送信区分) AND ([支払消費税送信区分] = @Original_支払消費税送信" +
                "区分) AND ([移動入力送信区分] = @Original_移動入力送信区分) AND ([棚卸入力送信区分] = @Original_棚卸入力送信区分) " +
                "AND ([BG更新処理] = @Original_BG更新処理) AND ((@IsNull_数量の整数桁 = 1 AND [数量の整数桁] IS NULL)" +
                " OR ([数量の整数桁] = @Original_数量の整数桁)) AND ((@IsNull_売上単価の整数桁 = 1 AND [売上単価の整数桁] IS " +
                "NULL) OR ([売上単価の整数桁] = @Original_売上単価の整数桁)) AND ([売上仕訳連携区分] = @Original_売上仕訳連携区分" +
                ") AND ([入金仕訳連携区分] = @Original_入金仕訳連携区分) AND ([仕入仕訳連携区分] = @Original_仕入仕訳連携区分) AN" +
                "D ([支払仕訳連携区分] = @Original_支払仕訳連携区分) AND ([売上オンライン仕訳区分] = @Original_売上オンライン仕訳区分) " +
                "AND ([入金オンライン仕訳区分] = @Original_入金オンライン仕訳区分) AND ([仕入オンライン仕訳区分] = @Original_仕入オンラ" +
                "イン仕訳区分) AND ([支払オンライン仕訳区分] = @Original_支払オンライン仕訳区分))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＫＥ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＫＥ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚卸区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_在庫評価区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫評価区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫評価区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫評価区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入数管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_倉庫管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_セット入庫管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "セット入庫管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_月末管理サイクル", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "月末管理サイクル", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_代理店管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入先管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_一括消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_一括消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新一括消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新一括消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新一括消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新一括消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税適用", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_数量の小数桁", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量の小数桁", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_数量の小数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量の小数桁", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上単価の小数桁", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価の小数桁", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上単価の小数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価の小数桁", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上金額の丸め", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額の丸め", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上金額の丸め", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額の丸め", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_単価管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単価管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得掛率管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得掛率管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得履歴管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得履歴管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕履歴管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕履歴管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_移動区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_移動システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚卸区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚卸システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納品書レーザー", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書レーザー", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_合計請求書レーザー", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "合計請求書レーザー", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求明細書レーザー", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求明細書レーザー", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所記号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所記号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所記号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所記号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BG更新", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG更新", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BG起動", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG起動", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BG終了", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG終了", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷指示送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷指示送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払消費税送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払消費税送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_移動入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚卸入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BG更新処理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG更新処理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_数量の整数桁", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量の整数桁", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_数量の整数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量の整数桁", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上単価の整数桁", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価の整数桁", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上単価の整数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価の整数桁", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕訳連携区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金仕訳連携区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入仕訳連携区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払仕訳連携区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上オンライン仕訳区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金オンライン仕訳区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入オンライン仕訳区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払オンライン仕訳区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T会社基本] ([ＫＥ], [事業所管理], [棚卸区分], [在庫評価区分], [入数管理], [倉庫管理], [セット入" +
                "庫管理], [月末管理サイクル], [代理店管理], [納入先管理], [一括消費税率], [新一括消費税率], [新消費税適用], [数量の小数桁], [売上" +
                "単価の小数桁], [売上金額の丸め], [単価管理], [得掛率管理], [得履歴管理], [仕履歴管理], [売上区分コード], [システム区分], [請求月" +
                "区分コード], [入金区分コード], [入金システム区分], [仕入区分コード], [仕入システム区分], [支払月区分コード], [支払区分コード], [支払" +
                "システム区分], [移動区分コード], [移動システム区分], [棚卸区分コード], [棚卸システム区分], [納品書レーザー], [合計請求書レーザー], [" +
                "請求明細書レーザー], [事業所コード], [事業所記号], [本支店区分], [BG更新], [BG起動], [BG終了], [受注入力送信区分], [出荷指" +
                "示送信区分], [売上入力送信区分], [発注入力送信区分], [入荷入力送信区分], [仕入入力送信区分], [入金入力送信区分], [支払入力送信区分], " +
                "[支払消費税送信区分], [移動入力送信区分], [棚卸入力送信区分], [BG更新処理], [数量の整数桁], [売上単価の整数桁], [売上仕訳連携区分]," +
                " [入金仕訳連携区分], [仕入仕訳連携区分], [支払仕訳連携区分], [売上オンライン仕訳区分], [入金オンライン仕訳区分], [仕入オンライン仕訳区分]" +
                ", [支払オンライン仕訳区分]) VALUES (@ＫＥ, @事業所管理, @棚卸区分, @在庫評価区分, @入数管理, @倉庫管理, @セット入庫管理, @月" +
                "末管理サイクル, @代理店管理, @納入先管理, @一括消費税率, @新一括消費税率, @新消費税適用, @数量の小数桁, @売上単価の小数桁, @売上金額の丸" +
                "め, @単価管理, @得掛率管理, @得履歴管理, @仕履歴管理, @売上区分コード, @システム区分, @請求月区分コード, @入金区分コード, @入金システ" +
                "ム区分, @仕入区分コード, @仕入システム区分, @支払月区分コード, @支払区分コード, @支払システム区分, @移動区分コード, @移動システム区分, @" +
                "棚卸区分コード, @棚卸システム区分, @納品書レーザー, @合計請求書レーザー, @請求明細書レーザー, @事業所コード, @事業所記号, @本支店区分, @" +
                "BG更新, @BG起動, @BG終了, @受注入力送信区分, @出荷指示送信区分, @売上入力送信区分, @発注入力送信区分, @入荷入力送信区分, @仕入入力" +
                "送信区分, @入金入力送信区分, @支払入力送信区分, @支払消費税送信区分, @移動入力送信区分, @棚卸入力送信区分, @BG更新処理, @数量の整数桁, " +
                "@売上単価の整数桁, @売上仕訳連携区分, @入金仕訳連携区分, @仕入仕訳連携区分, @支払仕訳連携区分, @売上オンライン仕訳区分, @入金オンライン仕訳区" +
                "分, @仕入オンライン仕訳区分, @支払オンライン仕訳区分);\r\nSELECT ＫＥ, 事業所管理, 棚卸区分, 在庫評価区分, 入数管理, 倉庫管理, セット" +
                "入庫管理, 月末管理サイクル, 代理店管理, 納入先管理, 一括消費税率, 新一括消費税率, 新消費税適用, 数量の小数桁, 売上単価の小数桁, 売上金額の丸め" +
                ", 単価管理, 得掛率管理, 得履歴管理, 仕履歴管理, 売上区分コード, システム区分, 請求月区分コード, 入金区分コード, 入金システム区分, 仕入区分コ" +
                "ード, 仕入システム区分, 支払月区分コード, 支払区分コード, 支払システム区分, 移動区分コード, 移動システム区分, 棚卸区分コード, 棚卸システム区分," +
                " 納品書レーザー, 合計請求書レーザー, 請求明細書レーザー, 事業所コード, 事業所記号, 本支店区分, BG更新, BG起動, BG終了, 受注入力送信区分" +
                ", 出荷指示送信区分, 売上入力送信区分, 発注入力送信区分, 入荷入力送信区分, 仕入入力送信区分, 入金入力送信区分, 支払入力送信区分, 支払消費税送信区" +
                "分, 移動入力送信区分, 棚卸入力送信区分, BG更新処理, 数量の整数桁, 売上単価の整数桁, 売上仕訳連携区分, 入金仕訳連携区分, 仕入仕訳連携区分, 支" +
                "払仕訳連携区分, 売上オンライン仕訳区分, 入金オンライン仕訳区分, 仕入オンライン仕訳区分, 支払オンライン仕訳区分 FROM T会社基本 WHERE (ＫＥ" +
                " = @ＫＥ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＫＥ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＫＥ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫評価区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫評価区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入数管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@倉庫管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@セット入庫管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "セット入庫管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@月末管理サイクル", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "月末管理サイクル", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@代理店管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入先管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@一括消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新一括消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新一括消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@数量の小数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量の小数桁", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上単価の小数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価の小数桁", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上金額の丸め", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額の丸め", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@単価管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単価管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得掛率管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得掛率管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得履歴管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得履歴管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕履歴管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕履歴管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@移動区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@移動システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納品書レーザー", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書レーザー", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@合計請求書レーザー", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "合計請求書レーザー", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求明細書レーザー", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求明細書レーザー", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所記号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所記号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BG更新", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG更新", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BG起動", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG起動", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BG終了", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG終了", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷指示送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷指示送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払消費税送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払消費税送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@移動入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BG更新処理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG更新処理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@数量の整数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量の整数桁", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上単価の整数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価の整数桁", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕訳連携区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金仕訳連携区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入仕訳連携区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払仕訳連携区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上オンライン仕訳区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金オンライン仕訳区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入オンライン仕訳区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払オンライン仕訳区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T会社基本] SET [ＫＥ] = @ＫＥ, [事業所管理] = @事業所管理, [棚卸区分] = @棚卸区分, [在庫評価区分] =" +
                " @在庫評価区分, [入数管理] = @入数管理, [倉庫管理] = @倉庫管理, [セット入庫管理] = @セット入庫管理, [月末管理サイクル] = @月末" +
                "管理サイクル, [代理店管理] = @代理店管理, [納入先管理] = @納入先管理, [一括消費税率] = @一括消費税率, [新一括消費税率] = @新一括" +
                "消費税率, [新消費税適用] = @新消費税適用, [数量の小数桁] = @数量の小数桁, [売上単価の小数桁] = @売上単価の小数桁, [売上金額の丸め] " +
                "= @売上金額の丸め, [単価管理] = @単価管理, [得掛率管理] = @得掛率管理, [得履歴管理] = @得履歴管理, [仕履歴管理] = @仕履歴管理" +
                ", [売上区分コード] = @売上区分コード, [システム区分] = @システム区分, [請求月区分コード] = @請求月区分コード, [入金区分コード] = " +
                "@入金区分コード, [入金システム区分] = @入金システム区分, [仕入区分コード] = @仕入区分コード, [仕入システム区分] = @仕入システム区分, " +
                "[支払月区分コード] = @支払月区分コード, [支払区分コード] = @支払区分コード, [支払システム区分] = @支払システム区分, [移動区分コード] " +
                "= @移動区分コード, [移動システム区分] = @移動システム区分, [棚卸区分コード] = @棚卸区分コード, [棚卸システム区分] = @棚卸システム区分" +
                ", [納品書レーザー] = @納品書レーザー, [合計請求書レーザー] = @合計請求書レーザー, [請求明細書レーザー] = @請求明細書レーザー, [事業所" +
                "コード] = @事業所コード, [事業所記号] = @事業所記号, [本支店区分] = @本支店区分, [BG更新] = @BG更新, [BG起動] = @BG" +
                "起動, [BG終了] = @BG終了, [受注入力送信区分] = @受注入力送信区分, [出荷指示送信区分] = @出荷指示送信区分, [売上入力送信区分] =" +
                " @売上入力送信区分, [発注入力送信区分] = @発注入力送信区分, [入荷入力送信区分] = @入荷入力送信区分, [仕入入力送信区分] = @仕入入力送信" +
                "区分, [入金入力送信区分] = @入金入力送信区分, [支払入力送信区分] = @支払入力送信区分, [支払消費税送信区分] = @支払消費税送信区分, [移" +
                "動入力送信区分] = @移動入力送信区分, [棚卸入力送信区分] = @棚卸入力送信区分, [BG更新処理] = @BG更新処理, [数量の整数桁] = @数量" +
                "の整数桁, [売上単価の整数桁] = @売上単価の整数桁, [売上仕訳連携区分] = @売上仕訳連携区分, [入金仕訳連携区分] = @入金仕訳連携区分, [仕" +
                "入仕訳連携区分] = @仕入仕訳連携区分, [支払仕訳連携区分] = @支払仕訳連携区分, [売上オンライン仕訳区分] = @売上オンライン仕訳区分, [入金オ" +
                "ンライン仕訳区分] = @入金オンライン仕訳区分, [仕入オンライン仕訳区分] = @仕入オンライン仕訳区分, [支払オンライン仕訳区分] = @支払オンライン" +
                "仕訳区分 WHERE (([ＫＥ] = @Original_ＫＥ) AND ([事業所管理] = @Original_事業所管理) AND ([棚卸区分] = " +
                "@Original_棚卸区分) AND ((@IsNull_在庫評価区分 = 1 AND [在庫評価区分] IS NULL) OR ([在庫評価区分] = @O" +
                "riginal_在庫評価区分)) AND ([入数管理] = @Original_入数管理) AND ([倉庫管理] = @Original_倉庫管理) AND" +
                " ([セット入庫管理] = @Original_セット入庫管理) AND ([月末管理サイクル] = @Original_月末管理サイクル) AND ([代理店" +
                "管理] = @Original_代理店管理) AND ([納入先管理] = @Original_納入先管理) AND ((@IsNull_一括消費税率 = 1 " +
                "AND [一括消費税率] IS NULL) OR ([一括消費税率] = @Original_一括消費税率)) AND ((@IsNull_新一括消費税率 = " +
                "1 AND [新一括消費税率] IS NULL) OR ([新一括消費税率] = @Original_新一括消費税率)) AND ((@IsNull_新消費税適" +
                "用 = 1 AND [新消費税適用] IS NULL) OR ([新消費税適用] = @Original_新消費税適用)) AND ((@IsNull_数量の小" +
                "数桁 = 1 AND [数量の小数桁] IS NULL) OR ([数量の小数桁] = @Original_数量の小数桁)) AND ((@IsNull_売上単" +
                "価の小数桁 = 1 AND [売上単価の小数桁] IS NULL) OR ([売上単価の小数桁] = @Original_売上単価の小数桁)) AND ((@I" +
                "sNull_売上金額の丸め = 1 AND [売上金額の丸め] IS NULL) OR ([売上金額の丸め] = @Original_売上金額の丸め)) AND" +
                " ([単価管理] = @Original_単価管理) AND ([得掛率管理] = @Original_得掛率管理) AND ([得履歴管理] = @Origi" +
                "nal_得履歴管理) AND ([仕履歴管理] = @Original_仕履歴管理) AND ([売上区分コード] = @Original_売上区分コード) A" +
                "ND ([システム区分] = @Original_システム区分) AND ([請求月区分コード] = @Original_請求月区分コード) AND ([入金区" +
                "分コード] = @Original_入金区分コード) AND ([入金システム区分] = @Original_入金システム区分) AND ([仕入区分コード] " +
                "= @Original_仕入区分コード) AND ([仕入システム区分] = @Original_仕入システム区分) AND ([支払月区分コード] = @Or" +
                "iginal_支払月区分コード) AND ([支払区分コード] = @Original_支払区分コード) AND ([支払システム区分] = @Original" +
                "_支払システム区分) AND ([移動区分コード] = @Original_移動区分コード) AND ([移動システム区分] = @Original_移動システ" +
                "ム区分) AND ([棚卸区分コード] = @Original_棚卸区分コード) AND ([棚卸システム区分] = @Original_棚卸システム区分) A" +
                "ND ([納品書レーザー] = @Original_納品書レーザー) AND ([合計請求書レーザー] = @Original_合計請求書レーザー) AND (" +
                "[請求明細書レーザー] = @Original_請求明細書レーザー) AND ((@IsNull_事業所コード = 1 AND [事業所コード] IS NULL" +
                ") OR ([事業所コード] = @Original_事業所コード)) AND ((@IsNull_事業所記号 = 1 AND [事業所記号] IS NULL)" +
                " OR ([事業所記号] = @Original_事業所記号)) AND ((@IsNull_本支店区分 = 1 AND [本支店区分] IS NULL) OR" +
                " ([本支店区分] = @Original_本支店区分)) AND ([BG更新] = @Original_BG更新) AND ([BG起動] = @Origi" +
                "nal_BG起動) AND ([BG終了] = @Original_BG終了) AND ([受注入力送信区分] = @Original_受注入力送信区分) AN" +
                "D ([出荷指示送信区分] = @Original_出荷指示送信区分) AND ([売上入力送信区分] = @Original_売上入力送信区分) AND ([" +
                "発注入力送信区分] = @Original_発注入力送信区分) AND ([入荷入力送信区分] = @Original_入荷入力送信区分) AND ([仕入入力" +
                "送信区分] = @Original_仕入入力送信区分) AND ([入金入力送信区分] = @Original_入金入力送信区分) AND ([支払入力送信区分" +
                "] = @Original_支払入力送信区分) AND ([支払消費税送信区分] = @Original_支払消費税送信区分) AND ([移動入力送信区分] " +
                "= @Original_移動入力送信区分) AND ([棚卸入力送信区分] = @Original_棚卸入力送信区分) AND ([BG更新処理] = @Ori" +
                "ginal_BG更新処理) AND ((@IsNull_数量の整数桁 = 1 AND [数量の整数桁] IS NULL) OR ([数量の整数桁] = @Ori" +
                "ginal_数量の整数桁)) AND ((@IsNull_売上単価の整数桁 = 1 AND [売上単価の整数桁] IS NULL) OR ([売上単価の整数桁]" +
                " = @Original_売上単価の整数桁)) AND ([売上仕訳連携区分] = @Original_売上仕訳連携区分) AND ([入金仕訳連携区分] = " +
                "@Original_入金仕訳連携区分) AND ([仕入仕訳連携区分] = @Original_仕入仕訳連携区分) AND ([支払仕訳連携区分] = @Ori" +
                "ginal_支払仕訳連携区分) AND ([売上オンライン仕訳区分] = @Original_売上オンライン仕訳区分) AND ([入金オンライン仕訳区分] =" +
                " @Original_入金オンライン仕訳区分) AND ([仕入オンライン仕訳区分] = @Original_仕入オンライン仕訳区分) AND ([支払オンライ" +
                "ン仕訳区分] = @Original_支払オンライン仕訳区分));\r\nSELECT ＫＥ, 事業所管理, 棚卸区分, 在庫評価区分, 入数管理, 倉庫管理, セ" +
                "ット入庫管理, 月末管理サイクル, 代理店管理, 納入先管理, 一括消費税率, 新一括消費税率, 新消費税適用, 数量の小数桁, 売上単価の小数桁, 売上金額の" +
                "丸め, 単価管理, 得掛率管理, 得履歴管理, 仕履歴管理, 売上区分コード, システム区分, 請求月区分コード, 入金区分コード, 入金システム区分, 仕入区" +
                "分コード, 仕入システム区分, 支払月区分コード, 支払区分コード, 支払システム区分, 移動区分コード, 移動システム区分, 棚卸区分コード, 棚卸システム区" +
                "分, 納品書レーザー, 合計請求書レーザー, 請求明細書レーザー, 事業所コード, 事業所記号, 本支店区分, BG更新, BG起動, BG終了, 受注入力送信" +
                "区分, 出荷指示送信区分, 売上入力送信区分, 発注入力送信区分, 入荷入力送信区分, 仕入入力送信区分, 入金入力送信区分, 支払入力送信区分, 支払消費税送" +
                "信区分, 移動入力送信区分, 棚卸入力送信区分, BG更新処理, 数量の整数桁, 売上単価の整数桁, 売上仕訳連携区分, 入金仕訳連携区分, 仕入仕訳連携区分," +
                " 支払仕訳連携区分, 売上オンライン仕訳区分, 入金オンライン仕訳区分, 仕入オンライン仕訳区分, 支払オンライン仕訳区分 FROM T会社基本 WHERE (" +
                "ＫＥ = @ＫＥ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ＫＥ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＫＥ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@在庫評価区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫評価区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入数管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@倉庫管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@セット入庫管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "セット入庫管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@月末管理サイクル", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "月末管理サイクル", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@代理店管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納入先管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@一括消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新一括消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新一括消費税率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@数量の小数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量の小数桁", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上単価の小数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価の小数桁", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上金額の丸め", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額の丸め", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@単価管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単価管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得掛率管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得掛率管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@得履歴管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得履歴管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕履歴管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕履歴管理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@移動区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@移動システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸区分コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸システム区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@納品書レーザー", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書レーザー", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@合計請求書レーザー", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "合計請求書レーザー", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@請求明細書レーザー", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求明細書レーザー", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@事業所記号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所記号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BG更新", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG更新", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BG起動", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG起動", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BG終了", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG終了", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@受注入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@出荷指示送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷指示送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@発注入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入荷入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払消費税送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払消費税送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@移動入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@棚卸入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸入力送信区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BG更新処理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG更新処理", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@数量の整数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量の整数桁", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上単価の整数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価の整数桁", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕訳連携区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金仕訳連携区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入仕訳連携区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払仕訳連携区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売上オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上オンライン仕訳区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@入金オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金オンライン仕訳区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@仕入オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入オンライン仕訳区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@支払オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払オンライン仕訳区分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ＫＥ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ＫＥ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚卸区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_在庫評価区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫評価区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_在庫評価区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "在庫評価区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入数管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入数管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_倉庫管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "倉庫管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_セット入庫管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "セット入庫管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_月末管理サイクル", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "月末管理サイクル", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_代理店管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "代理店管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納入先管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納入先管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_一括消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_一括消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "一括消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新一括消費税率", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新一括消費税率", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新一括消費税率", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新一括消費税率", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_新消費税適用", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_新消費税適用", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "新消費税適用", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_数量の小数桁", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量の小数桁", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_数量の小数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量の小数桁", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上単価の小数桁", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価の小数桁", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上単価の小数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価の小数桁", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上金額の丸め", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額の丸め", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上金額の丸め", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上金額の丸め", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_単価管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "単価管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得掛率管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得掛率管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_得履歴管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "得履歴管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕履歴管理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕履歴管理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求月区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払月区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払月区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_移動区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_移動システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚卸区分コード", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸区分コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚卸システム区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸システム区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_納品書レーザー", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "納品書レーザー", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_合計請求書レーザー", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "合計請求書レーザー", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_請求明細書レーザー", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "請求明細書レーザー", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所コード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所コード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所コード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_事業所記号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所記号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_事業所記号", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "事業所記号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_本支店区分", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_本支店区分", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "本支店区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BG更新", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG更新", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BG起動", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG起動", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BG終了", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG終了", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_受注入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "受注入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_出荷指示送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "出荷指示送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_発注入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "発注入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入荷入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入荷入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払消費税送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払消費税送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_移動入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "移動入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_棚卸入力送信区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "棚卸入力送信区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BG更新処理", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG更新処理", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_数量の整数桁", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量の整数桁", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_数量の整数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "数量の整数桁", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売上単価の整数桁", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価の整数桁", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上単価の整数桁", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上単価の整数桁", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上仕訳連携区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金仕訳連携区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入仕訳連携区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払仕訳連携区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払仕訳連携区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売上オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売上オンライン仕訳区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_入金オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "入金オンライン仕訳区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_仕入オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "仕入オンライン仕訳区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_支払オンライン仕訳区分", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "支払オンライン仕訳区分", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::db_test.Properties.Settings.Default.SPEEDDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ＫＥ, 事業所管理, 棚卸区分, 在庫評価区分, 入数管理, 倉庫管理, セット入庫管理, 月末管理サイクル, 代理店管理, 納入先管理, 一括消費税率, 新一括消費税率, 新消費税適用, 数量の小数桁, 売上単価の小数桁, 売上金額の丸め, 単価管理, 得掛率管理, 得履歴管理, 仕履歴管理, 売上区分コード, システム区分, 請求月区分コード, 入金区分コード, 入金システム区分, 仕入区分コード, 仕入システム区分, 支払月区分コード, 支払区分コード, 支払システム区分, 移動区分コード, 移動システム区分, 棚卸区分コード, 棚卸システム区分, 納品書レーザー, 合計請求書レーザー, 請求明細書レーザー, 事業所コード, 事業所記号, 本支店区分, BG更新, BG起動, BG終了, 受注入力送信区分, 出荷指示送信区分, 売上入力送信区分, 発注入力送信区分, 入荷入力送信区分, 仕入入力送信区分, 入金入力送信区分, 支払入力送信区分, 支払消費税送信区分, 移動入力送信区分, 棚卸入力送信区分, BG更新処理, 数量の整数桁, 売上単価の整数桁, 売上仕訳連携区分, 入金仕訳連携区分, 仕入仕訳連携区分, 支払仕訳連携区分, 売上オンライン仕訳区分, 入金オンライン仕訳区分, 仕入オンライン仕訳区分, 支払オンライン仕訳区分 FROM dbo.T会社基本";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT            ＫＥ, 事業所管理, 棚卸区分, 在庫評価区分, 入数管理, 倉庫管理, セット入庫管理, 月末管理サイクル, 代理店管理, 納入先管理, 一括消費税率, 新一括消費税率, 新消費税適用, 
                        数量の小数桁, 売上単価の小数桁, 売上金額の丸め, 単価管理, 得掛率管理, 得履歴管理, 仕履歴管理, 売上区分コード, システム区分, 請求月区分コード, 入金区分コード, 
                        入金システム区分, 仕入区分コード, 仕入システム区分, 支払月区分コード, 支払区分コード, 支払システム区分, 移動区分コード, 移動システム区分, 棚卸区分コード, 
                        棚卸システム区分, 納品書レーザー, 合計請求書レーザー, 請求明細書レーザー, 事業所コード, 事業所記号, 本支店区分, BG更新, BG起動, BG終了, 受注入力送信区分, 
                        出荷指示送信区分, 売上入力送信区分, 発注入力送信区分, 入荷入力送信区分, 仕入入力送信区分, 入金入力送信区分, 支払入力送信区分, 支払消費税送信区分, 
                        移動入力送信区分, 棚卸入力送信区分, BG更新処理, 数量の整数桁, 売上単価の整数桁, 売上仕訳連携区分, 入金仕訳連携区分, 仕入仕訳連携区分, 支払仕訳連携区分, 
                        売上オンライン仕訳区分, 入金オンライン仕訳区分, 仕入オンライン仕訳区分, 支払オンライン仕訳区分
FROM              T会社基本
WHERE             (KE = @KE)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KE", global::System.Data.SqlDbType.Variant, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SPEEDDB管理DataSet.T会社基本DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SPEEDDB管理DataSet.T会社基本DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SPEEDDB管理DataSet.T会社基本DataTable dataTable = new SPEEDDB管理DataSet.T会社基本DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByKE(SPEEDDB管理DataSet.T会社基本DataTable dataTable, object KE) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((KE == null)) {
                throw new global::System.ArgumentNullException("KE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((object)(KE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SPEEDDB管理DataSet.T会社基本DataTable GetDataByKE(object KE) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((KE == null)) {
                throw new global::System.ArgumentNullException("KE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((object)(KE));
            }
            SPEEDDB管理DataSet.T会社基本DataTable dataTable = new SPEEDDB管理DataSet.T会社基本DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SPEEDDB管理DataSet.T会社基本DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SPEEDDB管理DataSet dataSet) {
            return this.Adapter.Update(dataSet, "T会社基本");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    short Original_ＫＥ, 
                    bool Original_事業所管理, 
                    bool Original_棚卸区分, 
                    global::System.Nullable<short> Original_在庫評価区分, 
                    bool Original_入数管理, 
                    bool Original_倉庫管理, 
                    bool Original_セット入庫管理, 
                    bool Original_月末管理サイクル, 
                    bool Original_代理店管理, 
                    bool Original_納入先管理, 
                    global::System.Nullable<decimal> Original_一括消費税率, 
                    global::System.Nullable<decimal> Original_新一括消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    global::System.Nullable<short> Original_数量の小数桁, 
                    global::System.Nullable<short> Original_売上単価の小数桁, 
                    global::System.Nullable<short> Original_売上金額の丸め, 
                    bool Original_単価管理, 
                    bool Original_得掛率管理, 
                    bool Original_得履歴管理, 
                    bool Original_仕履歴管理, 
                    short Original_売上区分コード, 
                    short Original_システム区分, 
                    short Original_請求月区分コード, 
                    short Original_入金区分コード, 
                    short Original_入金システム区分, 
                    short Original_仕入区分コード, 
                    short Original_仕入システム区分, 
                    short Original_支払月区分コード, 
                    short Original_支払区分コード, 
                    short Original_支払システム区分, 
                    short Original_移動区分コード, 
                    short Original_移動システム区分, 
                    short Original_棚卸区分コード, 
                    short Original_棚卸システム区分, 
                    bool Original_納品書レーザー, 
                    bool Original_合計請求書レーザー, 
                    bool Original_請求明細書レーザー, 
                    string Original_事業所コード, 
                    string Original_事業所記号, 
                    global::System.Nullable<short> Original_本支店区分, 
                    bool Original_BG更新, 
                    bool Original_BG起動, 
                    bool Original_BG終了, 
                    bool Original_受注入力送信区分, 
                    bool Original_出荷指示送信区分, 
                    bool Original_売上入力送信区分, 
                    bool Original_発注入力送信区分, 
                    bool Original_入荷入力送信区分, 
                    bool Original_仕入入力送信区分, 
                    bool Original_入金入力送信区分, 
                    bool Original_支払入力送信区分, 
                    bool Original_支払消費税送信区分, 
                    bool Original_移動入力送信区分, 
                    bool Original_棚卸入力送信区分, 
                    bool Original_BG更新処理, 
                    global::System.Nullable<short> Original_数量の整数桁, 
                    global::System.Nullable<short> Original_売上単価の整数桁, 
                    bool Original_売上仕訳連携区分, 
                    bool Original_入金仕訳連携区分, 
                    bool Original_仕入仕訳連携区分, 
                    bool Original_支払仕訳連携区分, 
                    bool Original_売上オンライン仕訳区分, 
                    bool Original_入金オンライン仕訳区分, 
                    bool Original_仕入オンライン仕訳区分, 
                    bool Original_支払オンライン仕訳区分) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_ＫＥ));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((bool)(Original_事業所管理));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_棚卸区分));
            if ((Original_在庫評価区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_在庫評価区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_入数管理));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_倉庫管理));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((bool)(Original_セット入庫管理));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_月末管理サイクル));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_代理店管理));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_納入先管理));
            if ((Original_一括消費税率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_一括消費税率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_新一括消費税率.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_新一括消費税率.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税適用.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_新消費税適用.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_数量の小数桁.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((short)(Original_数量の小数桁.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_売上単価の小数桁.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((short)(Original_売上単価の小数桁.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_売上金額の丸め.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((short)(Original_売上金額の丸め.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[23].Value = ((bool)(Original_単価管理));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_得掛率管理));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_得履歴管理));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_仕履歴管理));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((short)(Original_売上区分コード));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((short)(Original_システム区分));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((short)(Original_請求月区分コード));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((short)(Original_入金区分コード));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((short)(Original_入金システム区分));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((short)(Original_仕入区分コード));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((short)(Original_仕入システム区分));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((short)(Original_支払月区分コード));
            this.Adapter.DeleteCommand.Parameters[35].Value = ((short)(Original_支払区分コード));
            this.Adapter.DeleteCommand.Parameters[36].Value = ((short)(Original_支払システム区分));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((short)(Original_移動区分コード));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((short)(Original_移動システム区分));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((short)(Original_棚卸区分コード));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((short)(Original_棚卸システム区分));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((bool)(Original_納品書レーザー));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((bool)(Original_合計請求書レーザー));
            this.Adapter.DeleteCommand.Parameters[43].Value = ((bool)(Original_請求明細書レーザー));
            if ((Original_事業所コード == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_事業所コード));
            }
            if ((Original_事業所記号 == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_事業所記号));
            }
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[50].Value = ((bool)(Original_BG更新));
            this.Adapter.DeleteCommand.Parameters[51].Value = ((bool)(Original_BG起動));
            this.Adapter.DeleteCommand.Parameters[52].Value = ((bool)(Original_BG終了));
            this.Adapter.DeleteCommand.Parameters[53].Value = ((bool)(Original_受注入力送信区分));
            this.Adapter.DeleteCommand.Parameters[54].Value = ((bool)(Original_出荷指示送信区分));
            this.Adapter.DeleteCommand.Parameters[55].Value = ((bool)(Original_売上入力送信区分));
            this.Adapter.DeleteCommand.Parameters[56].Value = ((bool)(Original_発注入力送信区分));
            this.Adapter.DeleteCommand.Parameters[57].Value = ((bool)(Original_入荷入力送信区分));
            this.Adapter.DeleteCommand.Parameters[58].Value = ((bool)(Original_仕入入力送信区分));
            this.Adapter.DeleteCommand.Parameters[59].Value = ((bool)(Original_入金入力送信区分));
            this.Adapter.DeleteCommand.Parameters[60].Value = ((bool)(Original_支払入力送信区分));
            this.Adapter.DeleteCommand.Parameters[61].Value = ((bool)(Original_支払消費税送信区分));
            this.Adapter.DeleteCommand.Parameters[62].Value = ((bool)(Original_移動入力送信区分));
            this.Adapter.DeleteCommand.Parameters[63].Value = ((bool)(Original_棚卸入力送信区分));
            this.Adapter.DeleteCommand.Parameters[64].Value = ((bool)(Original_BG更新処理));
            if ((Original_数量の整数桁.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((short)(Original_数量の整数桁.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_売上単価の整数桁.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((short)(Original_売上単価の整数桁.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[69].Value = ((bool)(Original_売上仕訳連携区分));
            this.Adapter.DeleteCommand.Parameters[70].Value = ((bool)(Original_入金仕訳連携区分));
            this.Adapter.DeleteCommand.Parameters[71].Value = ((bool)(Original_仕入仕訳連携区分));
            this.Adapter.DeleteCommand.Parameters[72].Value = ((bool)(Original_支払仕訳連携区分));
            this.Adapter.DeleteCommand.Parameters[73].Value = ((bool)(Original_売上オンライン仕訳区分));
            this.Adapter.DeleteCommand.Parameters[74].Value = ((bool)(Original_入金オンライン仕訳区分));
            this.Adapter.DeleteCommand.Parameters[75].Value = ((bool)(Original_仕入オンライン仕訳区分));
            this.Adapter.DeleteCommand.Parameters[76].Value = ((bool)(Original_支払オンライン仕訳区分));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    short ＫＥ, 
                    bool 事業所管理, 
                    bool 棚卸区分, 
                    global::System.Nullable<short> 在庫評価区分, 
                    bool 入数管理, 
                    bool 倉庫管理, 
                    bool セット入庫管理, 
                    bool 月末管理サイクル, 
                    bool 代理店管理, 
                    bool 納入先管理, 
                    global::System.Nullable<decimal> 一括消費税率, 
                    global::System.Nullable<decimal> 新一括消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    global::System.Nullable<short> 数量の小数桁, 
                    global::System.Nullable<short> 売上単価の小数桁, 
                    global::System.Nullable<short> 売上金額の丸め, 
                    bool 単価管理, 
                    bool 得掛率管理, 
                    bool 得履歴管理, 
                    bool 仕履歴管理, 
                    short 売上区分コード, 
                    short システム区分, 
                    short 請求月区分コード, 
                    short 入金区分コード, 
                    short 入金システム区分, 
                    short 仕入区分コード, 
                    short 仕入システム区分, 
                    short 支払月区分コード, 
                    short 支払区分コード, 
                    short 支払システム区分, 
                    short 移動区分コード, 
                    short 移動システム区分, 
                    short 棚卸区分コード, 
                    short 棚卸システム区分, 
                    bool 納品書レーザー, 
                    bool 合計請求書レーザー, 
                    bool 請求明細書レーザー, 
                    string 事業所コード, 
                    string 事業所記号, 
                    global::System.Nullable<short> 本支店区分, 
                    bool BG更新, 
                    bool BG起動, 
                    bool BG終了, 
                    bool 受注入力送信区分, 
                    bool 出荷指示送信区分, 
                    bool 売上入力送信区分, 
                    bool 発注入力送信区分, 
                    bool 入荷入力送信区分, 
                    bool 仕入入力送信区分, 
                    bool 入金入力送信区分, 
                    bool 支払入力送信区分, 
                    bool 支払消費税送信区分, 
                    bool 移動入力送信区分, 
                    bool 棚卸入力送信区分, 
                    bool BG更新処理, 
                    global::System.Nullable<short> 数量の整数桁, 
                    global::System.Nullable<short> 売上単価の整数桁, 
                    bool 売上仕訳連携区分, 
                    bool 入金仕訳連携区分, 
                    bool 仕入仕訳連携区分, 
                    bool 支払仕訳連携区分, 
                    bool 売上オンライン仕訳区分, 
                    bool 入金オンライン仕訳区分, 
                    bool 仕入オンライン仕訳区分, 
                    bool 支払オンライン仕訳区分) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(ＫＥ));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(事業所管理));
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(棚卸区分));
            if ((在庫評価区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(在庫評価区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(入数管理));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(倉庫管理));
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(セット入庫管理));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(月末管理サイクル));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(代理店管理));
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(納入先管理));
            if ((一括消費税率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(一括消費税率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((新一括消費税率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(新一括消費税率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((新消費税適用.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(新消費税適用.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((数量の小数桁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((short)(数量の小数桁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((売上単価の小数桁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((short)(売上単価の小数桁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((売上金額の丸め.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((short)(売上金額の丸め.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(単価管理));
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(得掛率管理));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(得履歴管理));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(仕履歴管理));
            this.Adapter.InsertCommand.Parameters[20].Value = ((short)(売上区分コード));
            this.Adapter.InsertCommand.Parameters[21].Value = ((short)(システム区分));
            this.Adapter.InsertCommand.Parameters[22].Value = ((short)(請求月区分コード));
            this.Adapter.InsertCommand.Parameters[23].Value = ((short)(入金区分コード));
            this.Adapter.InsertCommand.Parameters[24].Value = ((short)(入金システム区分));
            this.Adapter.InsertCommand.Parameters[25].Value = ((short)(仕入区分コード));
            this.Adapter.InsertCommand.Parameters[26].Value = ((short)(仕入システム区分));
            this.Adapter.InsertCommand.Parameters[27].Value = ((short)(支払月区分コード));
            this.Adapter.InsertCommand.Parameters[28].Value = ((short)(支払区分コード));
            this.Adapter.InsertCommand.Parameters[29].Value = ((short)(支払システム区分));
            this.Adapter.InsertCommand.Parameters[30].Value = ((short)(移動区分コード));
            this.Adapter.InsertCommand.Parameters[31].Value = ((short)(移動システム区分));
            this.Adapter.InsertCommand.Parameters[32].Value = ((short)(棚卸区分コード));
            this.Adapter.InsertCommand.Parameters[33].Value = ((short)(棚卸システム区分));
            this.Adapter.InsertCommand.Parameters[34].Value = ((bool)(納品書レーザー));
            this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(合計請求書レーザー));
            this.Adapter.InsertCommand.Parameters[36].Value = ((bool)(請求明細書レーザー));
            if ((事業所コード == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(事業所コード));
            }
            if ((事業所記号 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(事業所記号));
            }
            if ((本支店区分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((bool)(BG更新));
            this.Adapter.InsertCommand.Parameters[41].Value = ((bool)(BG起動));
            this.Adapter.InsertCommand.Parameters[42].Value = ((bool)(BG終了));
            this.Adapter.InsertCommand.Parameters[43].Value = ((bool)(受注入力送信区分));
            this.Adapter.InsertCommand.Parameters[44].Value = ((bool)(出荷指示送信区分));
            this.Adapter.InsertCommand.Parameters[45].Value = ((bool)(売上入力送信区分));
            this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(発注入力送信区分));
            this.Adapter.InsertCommand.Parameters[47].Value = ((bool)(入荷入力送信区分));
            this.Adapter.InsertCommand.Parameters[48].Value = ((bool)(仕入入力送信区分));
            this.Adapter.InsertCommand.Parameters[49].Value = ((bool)(入金入力送信区分));
            this.Adapter.InsertCommand.Parameters[50].Value = ((bool)(支払入力送信区分));
            this.Adapter.InsertCommand.Parameters[51].Value = ((bool)(支払消費税送信区分));
            this.Adapter.InsertCommand.Parameters[52].Value = ((bool)(移動入力送信区分));
            this.Adapter.InsertCommand.Parameters[53].Value = ((bool)(棚卸入力送信区分));
            this.Adapter.InsertCommand.Parameters[54].Value = ((bool)(BG更新処理));
            if ((数量の整数桁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((short)(数量の整数桁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((売上単価の整数桁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((short)(売上単価の整数桁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[57].Value = ((bool)(売上仕訳連携区分));
            this.Adapter.InsertCommand.Parameters[58].Value = ((bool)(入金仕訳連携区分));
            this.Adapter.InsertCommand.Parameters[59].Value = ((bool)(仕入仕訳連携区分));
            this.Adapter.InsertCommand.Parameters[60].Value = ((bool)(支払仕訳連携区分));
            this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(売上オンライン仕訳区分));
            this.Adapter.InsertCommand.Parameters[62].Value = ((bool)(入金オンライン仕訳区分));
            this.Adapter.InsertCommand.Parameters[63].Value = ((bool)(仕入オンライン仕訳区分));
            this.Adapter.InsertCommand.Parameters[64].Value = ((bool)(支払オンライン仕訳区分));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short ＫＥ, 
                    bool 事業所管理, 
                    bool 棚卸区分, 
                    global::System.Nullable<short> 在庫評価区分, 
                    bool 入数管理, 
                    bool 倉庫管理, 
                    bool セット入庫管理, 
                    bool 月末管理サイクル, 
                    bool 代理店管理, 
                    bool 納入先管理, 
                    global::System.Nullable<decimal> 一括消費税率, 
                    global::System.Nullable<decimal> 新一括消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    global::System.Nullable<short> 数量の小数桁, 
                    global::System.Nullable<short> 売上単価の小数桁, 
                    global::System.Nullable<short> 売上金額の丸め, 
                    bool 単価管理, 
                    bool 得掛率管理, 
                    bool 得履歴管理, 
                    bool 仕履歴管理, 
                    short 売上区分コード, 
                    short システム区分, 
                    short 請求月区分コード, 
                    short 入金区分コード, 
                    short 入金システム区分, 
                    short 仕入区分コード, 
                    short 仕入システム区分, 
                    short 支払月区分コード, 
                    short 支払区分コード, 
                    short 支払システム区分, 
                    short 移動区分コード, 
                    short 移動システム区分, 
                    short 棚卸区分コード, 
                    short 棚卸システム区分, 
                    bool 納品書レーザー, 
                    bool 合計請求書レーザー, 
                    bool 請求明細書レーザー, 
                    string 事業所コード, 
                    string 事業所記号, 
                    global::System.Nullable<short> 本支店区分, 
                    bool BG更新, 
                    bool BG起動, 
                    bool BG終了, 
                    bool 受注入力送信区分, 
                    bool 出荷指示送信区分, 
                    bool 売上入力送信区分, 
                    bool 発注入力送信区分, 
                    bool 入荷入力送信区分, 
                    bool 仕入入力送信区分, 
                    bool 入金入力送信区分, 
                    bool 支払入力送信区分, 
                    bool 支払消費税送信区分, 
                    bool 移動入力送信区分, 
                    bool 棚卸入力送信区分, 
                    bool BG更新処理, 
                    global::System.Nullable<short> 数量の整数桁, 
                    global::System.Nullable<short> 売上単価の整数桁, 
                    bool 売上仕訳連携区分, 
                    bool 入金仕訳連携区分, 
                    bool 仕入仕訳連携区分, 
                    bool 支払仕訳連携区分, 
                    bool 売上オンライン仕訳区分, 
                    bool 入金オンライン仕訳区分, 
                    bool 仕入オンライン仕訳区分, 
                    bool 支払オンライン仕訳区分, 
                    short Original_ＫＥ, 
                    bool Original_事業所管理, 
                    bool Original_棚卸区分, 
                    global::System.Nullable<short> Original_在庫評価区分, 
                    bool Original_入数管理, 
                    bool Original_倉庫管理, 
                    bool Original_セット入庫管理, 
                    bool Original_月末管理サイクル, 
                    bool Original_代理店管理, 
                    bool Original_納入先管理, 
                    global::System.Nullable<decimal> Original_一括消費税率, 
                    global::System.Nullable<decimal> Original_新一括消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    global::System.Nullable<short> Original_数量の小数桁, 
                    global::System.Nullable<short> Original_売上単価の小数桁, 
                    global::System.Nullable<short> Original_売上金額の丸め, 
                    bool Original_単価管理, 
                    bool Original_得掛率管理, 
                    bool Original_得履歴管理, 
                    bool Original_仕履歴管理, 
                    short Original_売上区分コード, 
                    short Original_システム区分, 
                    short Original_請求月区分コード, 
                    short Original_入金区分コード, 
                    short Original_入金システム区分, 
                    short Original_仕入区分コード, 
                    short Original_仕入システム区分, 
                    short Original_支払月区分コード, 
                    short Original_支払区分コード, 
                    short Original_支払システム区分, 
                    short Original_移動区分コード, 
                    short Original_移動システム区分, 
                    short Original_棚卸区分コード, 
                    short Original_棚卸システム区分, 
                    bool Original_納品書レーザー, 
                    bool Original_合計請求書レーザー, 
                    bool Original_請求明細書レーザー, 
                    string Original_事業所コード, 
                    string Original_事業所記号, 
                    global::System.Nullable<short> Original_本支店区分, 
                    bool Original_BG更新, 
                    bool Original_BG起動, 
                    bool Original_BG終了, 
                    bool Original_受注入力送信区分, 
                    bool Original_出荷指示送信区分, 
                    bool Original_売上入力送信区分, 
                    bool Original_発注入力送信区分, 
                    bool Original_入荷入力送信区分, 
                    bool Original_仕入入力送信区分, 
                    bool Original_入金入力送信区分, 
                    bool Original_支払入力送信区分, 
                    bool Original_支払消費税送信区分, 
                    bool Original_移動入力送信区分, 
                    bool Original_棚卸入力送信区分, 
                    bool Original_BG更新処理, 
                    global::System.Nullable<short> Original_数量の整数桁, 
                    global::System.Nullable<short> Original_売上単価の整数桁, 
                    bool Original_売上仕訳連携区分, 
                    bool Original_入金仕訳連携区分, 
                    bool Original_仕入仕訳連携区分, 
                    bool Original_支払仕訳連携区分, 
                    bool Original_売上オンライン仕訳区分, 
                    bool Original_入金オンライン仕訳区分, 
                    bool Original_仕入オンライン仕訳区分, 
                    bool Original_支払オンライン仕訳区分) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(ＫＥ));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(事業所管理));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(棚卸区分));
            if ((在庫評価区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(在庫評価区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(入数管理));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(倉庫管理));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(セット入庫管理));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(月末管理サイクル));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(代理店管理));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(納入先管理));
            if ((一括消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(一括消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((新一括消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(新一括消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((新消費税適用.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(新消費税適用.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((数量の小数桁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(数量の小数桁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((売上単価の小数桁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((short)(売上単価の小数桁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((売上金額の丸め.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((short)(売上金額の丸め.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(単価管理));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(得掛率管理));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(得履歴管理));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(仕履歴管理));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((short)(売上区分コード));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((short)(システム区分));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((short)(請求月区分コード));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((short)(入金区分コード));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((short)(入金システム区分));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((short)(仕入区分コード));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((short)(仕入システム区分));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((short)(支払月区分コード));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((short)(支払区分コード));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((short)(支払システム区分));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((short)(移動区分コード));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((short)(移動システム区分));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((short)(棚卸区分コード));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((short)(棚卸システム区分));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(納品書レーザー));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(合計請求書レーザー));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(請求明細書レーザー));
            if ((事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(事業所コード));
            }
            if ((事業所記号 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(事業所記号));
            }
            if ((本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((short)(本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(BG更新));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(BG起動));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(BG終了));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((bool)(受注入力送信区分));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(出荷指示送信区分));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((bool)(売上入力送信区分));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(発注入力送信区分));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(入荷入力送信区分));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((bool)(仕入入力送信区分));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(入金入力送信区分));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(支払入力送信区分));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(支払消費税送信区分));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((bool)(移動入力送信区分));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((bool)(棚卸入力送信区分));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(BG更新処理));
            if ((数量の整数桁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((short)(数量の整数桁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((売上単価の整数桁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((short)(売上単価の整数桁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(売上仕訳連携区分));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(入金仕訳連携区分));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(仕入仕訳連携区分));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(支払仕訳連携区分));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(売上オンライン仕訳区分));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(入金オンライン仕訳区分));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(仕入オンライン仕訳区分));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(支払オンライン仕訳区分));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((short)(Original_ＫＥ));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(Original_事業所管理));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(Original_棚卸区分));
            if ((Original_在庫評価区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((short)(Original_在庫評価区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(Original_入数管理));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(Original_倉庫管理));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((bool)(Original_セット入庫管理));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(Original_月末管理サイクル));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((bool)(Original_代理店管理));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((bool)(Original_納入先管理));
            if ((Original_一括消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Original_一括消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_新一括消費税率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(Original_新一括消費税率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_新消費税適用.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((System.DateTime)(Original_新消費税適用.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_数量の小数桁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((short)(Original_数量の小数桁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_売上単価の小数桁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((short)(Original_売上単価の小数桁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_売上金額の丸め.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((short)(Original_売上金額の丸め.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[88].Value = ((bool)(Original_単価管理));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((bool)(Original_得掛率管理));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((bool)(Original_得履歴管理));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((bool)(Original_仕履歴管理));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((short)(Original_売上区分コード));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((short)(Original_システム区分));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((short)(Original_請求月区分コード));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((short)(Original_入金区分コード));
            this.Adapter.UpdateCommand.Parameters[96].Value = ((short)(Original_入金システム区分));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((short)(Original_仕入区分コード));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((short)(Original_仕入システム区分));
            this.Adapter.UpdateCommand.Parameters[99].Value = ((short)(Original_支払月区分コード));
            this.Adapter.UpdateCommand.Parameters[100].Value = ((short)(Original_支払区分コード));
            this.Adapter.UpdateCommand.Parameters[101].Value = ((short)(Original_支払システム区分));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((short)(Original_移動区分コード));
            this.Adapter.UpdateCommand.Parameters[103].Value = ((short)(Original_移動システム区分));
            this.Adapter.UpdateCommand.Parameters[104].Value = ((short)(Original_棚卸区分コード));
            this.Adapter.UpdateCommand.Parameters[105].Value = ((short)(Original_棚卸システム区分));
            this.Adapter.UpdateCommand.Parameters[106].Value = ((bool)(Original_納品書レーザー));
            this.Adapter.UpdateCommand.Parameters[107].Value = ((bool)(Original_合計請求書レーザー));
            this.Adapter.UpdateCommand.Parameters[108].Value = ((bool)(Original_請求明細書レーザー));
            if ((Original_事業所コード == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_事業所コード));
            }
            if ((Original_事業所記号 == null)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(Original_事業所記号));
            }
            if ((Original_本支店区分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((short)(Original_本支店区分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[115].Value = ((bool)(Original_BG更新));
            this.Adapter.UpdateCommand.Parameters[116].Value = ((bool)(Original_BG起動));
            this.Adapter.UpdateCommand.Parameters[117].Value = ((bool)(Original_BG終了));
            this.Adapter.UpdateCommand.Parameters[118].Value = ((bool)(Original_受注入力送信区分));
            this.Adapter.UpdateCommand.Parameters[119].Value = ((bool)(Original_出荷指示送信区分));
            this.Adapter.UpdateCommand.Parameters[120].Value = ((bool)(Original_売上入力送信区分));
            this.Adapter.UpdateCommand.Parameters[121].Value = ((bool)(Original_発注入力送信区分));
            this.Adapter.UpdateCommand.Parameters[122].Value = ((bool)(Original_入荷入力送信区分));
            this.Adapter.UpdateCommand.Parameters[123].Value = ((bool)(Original_仕入入力送信区分));
            this.Adapter.UpdateCommand.Parameters[124].Value = ((bool)(Original_入金入力送信区分));
            this.Adapter.UpdateCommand.Parameters[125].Value = ((bool)(Original_支払入力送信区分));
            this.Adapter.UpdateCommand.Parameters[126].Value = ((bool)(Original_支払消費税送信区分));
            this.Adapter.UpdateCommand.Parameters[127].Value = ((bool)(Original_移動入力送信区分));
            this.Adapter.UpdateCommand.Parameters[128].Value = ((bool)(Original_棚卸入力送信区分));
            this.Adapter.UpdateCommand.Parameters[129].Value = ((bool)(Original_BG更新処理));
            if ((Original_数量の整数桁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((short)(Original_数量の整数桁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_売上単価の整数桁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((short)(Original_売上単価の整数桁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[134].Value = ((bool)(Original_売上仕訳連携区分));
            this.Adapter.UpdateCommand.Parameters[135].Value = ((bool)(Original_入金仕訳連携区分));
            this.Adapter.UpdateCommand.Parameters[136].Value = ((bool)(Original_仕入仕訳連携区分));
            this.Adapter.UpdateCommand.Parameters[137].Value = ((bool)(Original_支払仕訳連携区分));
            this.Adapter.UpdateCommand.Parameters[138].Value = ((bool)(Original_売上オンライン仕訳区分));
            this.Adapter.UpdateCommand.Parameters[139].Value = ((bool)(Original_入金オンライン仕訳区分));
            this.Adapter.UpdateCommand.Parameters[140].Value = ((bool)(Original_仕入オンライン仕訳区分));
            this.Adapter.UpdateCommand.Parameters[141].Value = ((bool)(Original_支払オンライン仕訳区分));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    bool 事業所管理, 
                    bool 棚卸区分, 
                    global::System.Nullable<short> 在庫評価区分, 
                    bool 入数管理, 
                    bool 倉庫管理, 
                    bool セット入庫管理, 
                    bool 月末管理サイクル, 
                    bool 代理店管理, 
                    bool 納入先管理, 
                    global::System.Nullable<decimal> 一括消費税率, 
                    global::System.Nullable<decimal> 新一括消費税率, 
                    global::System.Nullable<global::System.DateTime> 新消費税適用, 
                    global::System.Nullable<short> 数量の小数桁, 
                    global::System.Nullable<short> 売上単価の小数桁, 
                    global::System.Nullable<short> 売上金額の丸め, 
                    bool 単価管理, 
                    bool 得掛率管理, 
                    bool 得履歴管理, 
                    bool 仕履歴管理, 
                    short 売上区分コード, 
                    short システム区分, 
                    short 請求月区分コード, 
                    short 入金区分コード, 
                    short 入金システム区分, 
                    short 仕入区分コード, 
                    short 仕入システム区分, 
                    short 支払月区分コード, 
                    short 支払区分コード, 
                    short 支払システム区分, 
                    short 移動区分コード, 
                    short 移動システム区分, 
                    short 棚卸区分コード, 
                    short 棚卸システム区分, 
                    bool 納品書レーザー, 
                    bool 合計請求書レーザー, 
                    bool 請求明細書レーザー, 
                    string 事業所コード, 
                    string 事業所記号, 
                    global::System.Nullable<short> 本支店区分, 
                    bool BG更新, 
                    bool BG起動, 
                    bool BG終了, 
                    bool 受注入力送信区分, 
                    bool 出荷指示送信区分, 
                    bool 売上入力送信区分, 
                    bool 発注入力送信区分, 
                    bool 入荷入力送信区分, 
                    bool 仕入入力送信区分, 
                    bool 入金入力送信区分, 
                    bool 支払入力送信区分, 
                    bool 支払消費税送信区分, 
                    bool 移動入力送信区分, 
                    bool 棚卸入力送信区分, 
                    bool BG更新処理, 
                    global::System.Nullable<short> 数量の整数桁, 
                    global::System.Nullable<short> 売上単価の整数桁, 
                    bool 売上仕訳連携区分, 
                    bool 入金仕訳連携区分, 
                    bool 仕入仕訳連携区分, 
                    bool 支払仕訳連携区分, 
                    bool 売上オンライン仕訳区分, 
                    bool 入金オンライン仕訳区分, 
                    bool 仕入オンライン仕訳区分, 
                    bool 支払オンライン仕訳区分, 
                    short Original_ＫＥ, 
                    bool Original_事業所管理, 
                    bool Original_棚卸区分, 
                    global::System.Nullable<short> Original_在庫評価区分, 
                    bool Original_入数管理, 
                    bool Original_倉庫管理, 
                    bool Original_セット入庫管理, 
                    bool Original_月末管理サイクル, 
                    bool Original_代理店管理, 
                    bool Original_納入先管理, 
                    global::System.Nullable<decimal> Original_一括消費税率, 
                    global::System.Nullable<decimal> Original_新一括消費税率, 
                    global::System.Nullable<global::System.DateTime> Original_新消費税適用, 
                    global::System.Nullable<short> Original_数量の小数桁, 
                    global::System.Nullable<short> Original_売上単価の小数桁, 
                    global::System.Nullable<short> Original_売上金額の丸め, 
                    bool Original_単価管理, 
                    bool Original_得掛率管理, 
                    bool Original_得履歴管理, 
                    bool Original_仕履歴管理, 
                    short Original_売上区分コード, 
                    short Original_システム区分, 
                    short Original_請求月区分コード, 
                    short Original_入金区分コード, 
                    short Original_入金システム区分, 
                    short Original_仕入区分コード, 
                    short Original_仕入システム区分, 
                    short Original_支払月区分コード, 
                    short Original_支払区分コード, 
                    short Original_支払システム区分, 
                    short Original_移動区分コード, 
                    short Original_移動システム区分, 
                    short Original_棚卸区分コード, 
                    short Original_棚卸システム区分, 
                    bool Original_納品書レーザー, 
                    bool Original_合計請求書レーザー, 
                    bool Original_請求明細書レーザー, 
                    string Original_事業所コード, 
                    string Original_事業所記号, 
                    global::System.Nullable<short> Original_本支店区分, 
                    bool Original_BG更新, 
                    bool Original_BG起動, 
                    bool Original_BG終了, 
                    bool Original_受注入力送信区分, 
                    bool Original_出荷指示送信区分, 
                    bool Original_売上入力送信区分, 
                    bool Original_発注入力送信区分, 
                    bool Original_入荷入力送信区分, 
                    bool Original_仕入入力送信区分, 
                    bool Original_入金入力送信区分, 
                    bool Original_支払入力送信区分, 
                    bool Original_支払消費税送信区分, 
                    bool Original_移動入力送信区分, 
                    bool Original_棚卸入力送信区分, 
                    bool Original_BG更新処理, 
                    global::System.Nullable<short> Original_数量の整数桁, 
                    global::System.Nullable<short> Original_売上単価の整数桁, 
                    bool Original_売上仕訳連携区分, 
                    bool Original_入金仕訳連携区分, 
                    bool Original_仕入仕訳連携区分, 
                    bool Original_支払仕訳連携区分, 
                    bool Original_売上オンライン仕訳区分, 
                    bool Original_入金オンライン仕訳区分, 
                    bool Original_仕入オンライン仕訳区分, 
                    bool Original_支払オンライン仕訳区分) {
            return this.Update(Original_ＫＥ, 事業所管理, 棚卸区分, 在庫評価区分, 入数管理, 倉庫管理, セット入庫管理, 月末管理サイクル, 代理店管理, 納入先管理, 一括消費税率, 新一括消費税率, 新消費税適用, 数量の小数桁, 売上単価の小数桁, 売上金額の丸め, 単価管理, 得掛率管理, 得履歴管理, 仕履歴管理, 売上区分コード, システム区分, 請求月区分コード, 入金区分コード, 入金システム区分, 仕入区分コード, 仕入システム区分, 支払月区分コード, 支払区分コード, 支払システム区分, 移動区分コード, 移動システム区分, 棚卸区分コード, 棚卸システム区分, 納品書レーザー, 合計請求書レーザー, 請求明細書レーザー, 事業所コード, 事業所記号, 本支店区分, BG更新, BG起動, BG終了, 受注入力送信区分, 出荷指示送信区分, 売上入力送信区分, 発注入力送信区分, 入荷入力送信区分, 仕入入力送信区分, 入金入力送信区分, 支払入力送信区分, 支払消費税送信区分, 移動入力送信区分, 棚卸入力送信区分, BG更新処理, 数量の整数桁, 売上単価の整数桁, 売上仕訳連携区分, 入金仕訳連携区分, 仕入仕訳連携区分, 支払仕訳連携区分, 売上オンライン仕訳区分, 入金オンライン仕訳区分, 仕入オンライン仕訳区分, 支払オンライン仕訳区分, Original_ＫＥ, Original_事業所管理, Original_棚卸区分, Original_在庫評価区分, Original_入数管理, Original_倉庫管理, Original_セット入庫管理, Original_月末管理サイクル, Original_代理店管理, Original_納入先管理, Original_一括消費税率, Original_新一括消費税率, Original_新消費税適用, Original_数量の小数桁, Original_売上単価の小数桁, Original_売上金額の丸め, Original_単価管理, Original_得掛率管理, Original_得履歴管理, Original_仕履歴管理, Original_売上区分コード, Original_システム区分, Original_請求月区分コード, Original_入金区分コード, Original_入金システム区分, Original_仕入区分コード, Original_仕入システム区分, Original_支払月区分コード, Original_支払区分コード, Original_支払システム区分, Original_移動区分コード, Original_移動システム区分, Original_棚卸区分コード, Original_棚卸システム区分, Original_納品書レーザー, Original_合計請求書レーザー, Original_請求明細書レーザー, Original_事業所コード, Original_事業所記号, Original_本支店区分, Original_BG更新, Original_BG起動, Original_BG終了, Original_受注入力送信区分, Original_出荷指示送信区分, Original_売上入力送信区分, Original_発注入力送信区分, Original_入荷入力送信区分, Original_仕入入力送信区分, Original_入金入力送信区分, Original_支払入力送信区分, Original_支払消費税送信区分, Original_移動入力送信区分, Original_棚卸入力送信区分, Original_BG更新処理, Original_数量の整数桁, Original_売上単価の整数桁, Original_売上仕訳連携区分, Original_入金仕訳連携区分, Original_仕入仕訳連携区分, Original_支払仕訳連携区分, Original_売上オンライン仕訳区分, Original_入金オンライン仕訳区分, Original_仕入オンライン仕訳区分, Original_支払オンライン仕訳区分);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TＷＳ番号TableAdapter _tＷＳ番号TableAdapter;
        
        private T会社基本TableAdapter _t会社基本TableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TＷＳ番号TableAdapter TＷＳ番号TableAdapter {
            get {
                return this._tＷＳ番号TableAdapter;
            }
            set {
                this._tＷＳ番号TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T会社基本TableAdapter T会社基本TableAdapter {
            get {
                return this._t会社基本TableAdapter;
            }
            set {
                this._t会社基本TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tＷＳ番号TableAdapter != null) 
                            && (this._tＷＳ番号TableAdapter.Connection != null))) {
                    return this._tＷＳ番号TableAdapter.Connection;
                }
                if (((this._t会社基本TableAdapter != null) 
                            && (this._t会社基本TableAdapter.Connection != null))) {
                    return this._t会社基本TableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tＷＳ番号TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._t会社基本TableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(SPEEDDB管理DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._t会社基本TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T会社基本.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t会社基本TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tＷＳ番号TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TＷＳ番号.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tＷＳ番号TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(SPEEDDB管理DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._t会社基本TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T会社基本.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t会社基本TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tＷＳ番号TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TＷＳ番号.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tＷＳ番号TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(SPEEDDB管理DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tＷＳ番号TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TＷＳ番号.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tＷＳ番号TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._t会社基本TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T会社基本.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t会社基本TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(SPEEDDB管理DataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tＷＳ番号TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tＷＳ番号TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            if (((this._t会社基本TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t会社基本TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager には接続情報がありません。それぞれの TableAdapterManager TableAdapter プロパティを有効な" +
                        " TableAdapter インスタンスに設定してください。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("トランザクションを開始できません。現在のデータ接続がトランザクションをサポートしていないか、または現在の状態がトランザクションの開始を許可していません。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tＷＳ番号TableAdapter != null)) {
                    revertConnections.Add(this._tＷＳ番号TableAdapter, this._tＷＳ番号TableAdapter.Connection);
                    this._tＷＳ番号TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tＷＳ番号TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tＷＳ番号TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tＷＳ番号TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tＷＳ番号TableAdapter.Adapter);
                    }
                }
                if ((this._t会社基本TableAdapter != null)) {
                    revertConnections.Add(this._t会社基本TableAdapter, this._t会社基本TableAdapter.Connection);
                    this._t会社基本TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t会社基本TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t会社基本TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t会社基本TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t会社基本TableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tＷＳ番号TableAdapter != null)) {
                    this._tＷＳ番号TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tＷＳ番号TableAdapter]));
                    this._tＷＳ番号TableAdapter.Transaction = null;
                }
                if ((this._t会社基本TableAdapter != null)) {
                    this._t会社基本TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t会社基本TableAdapter]));
                    this._t会社基本TableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591